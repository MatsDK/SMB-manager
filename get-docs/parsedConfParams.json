{
  "globalParams": {
    "abort shutdown script": {
      "md": "This a full path name to a script called by [smbd(8)](smbd.8.html) that should stop a shutdown procedure issued by the [shutdown script](smb.conf.5.html#SHUTDOWNSCRIPT).\n\nIf the connected user possesses the `SeRemoteShutdownPrivilege`, right, this command will be run as root.",
      "default": "\"\""
    },
    "add group script": {
      "md": "This is the full pathname to a script that will be run _AS ROOT_ by [smbd(8)](smbd.8.html) when a new group is requested. It will expand any _`%g`_ to the group name passed. This script is only useful for installations using the Windows NT domain administration tools. The script is free to create a group with an arbitrary name to circumvent unix group name restrictions. In that case the script must print the numeric gid of the created group on stdout.",
      "default": ""
    },
    "additional dns hostnames": {
      "md": "A list of additional DNS names by which this host can be identified",
      "default": "# empty string (no additional dns names)"
    },
    "add machine script": {
      "md": "This is the full pathname to a script that will be run by [smbd(8)](smbd.8.html) when a machine is added to Samba's domain and a Unix account matching the machine's name appended with a \"$\" does not already exist.\n\nThis option is very similar to the [add user script](smb.conf.5.html#ADDUSERSCRIPT), and likewise uses the %u substitution for the account name. Do not use the %m substitution.",
      "default": ""
    },
    "addport command": {
      "md": "Samba 3.0.23 introduced support for adding printer ports remotely using the Windows \"Add Standard TCP/IP Port Wizard\". This option defines an external program to be executed when smbd receives a request to add a new Port to the system. The script is passed two parameters:\n\n*   _`port name`_\n    \n*   _`device URI`_\n    \n\nThe deviceURI is in the format of socket://<hostname>\\[:<portnumber>\\] or lpd://<hostname>/<queuename>.",
      "default": ""
    },
    "addprinter command": {
      "md": "With the introduction of MS-RPC based printing support for Windows NT/2000 clients in Samba 2.2, The MS Add Printer Wizard (APW) icon is now also available in the \"Printers...\" folder displayed a share listing. The APW allows for printers to be add remotely to a Samba or Windows NT/2000 print server.\n\nFor a Samba host this means that the printer must be physically added to the underlying printing system. The _`addprinter command`_ defines a script to be run which will perform the necessary operations for adding the printer to the print system and to add the appropriate service definition to the `smb.conf` file in order that it can be shared by [smbd(8)](smbd.8.html).\n\nThe _`addprinter command`_ is automatically invoked with the following parameter (in order):\n\n*   _`printer name`_\n    \n*   _`share name`_\n    \n*   _`port name`_\n    \n*   _`driver name`_\n    \n*   _`location`_\n    \n*   _`Windows 9x driver location`_\n    \n\nAll parameters are filled in from the PRINTER\\_INFO\\_2 structure sent by the Windows NT/2000 client with one exception. The \"Windows 9x driver location\" parameter is included for backwards compatibility only. The remaining fields in the structure are generated from answers to the APW questions.\n\nOnce the _`addprinter command`_ has been executed, `smbd` will reparse the `smb.conf` to determine if the share defined by the APW exists. If the sharename is still invalid, then `smbd` will return an ACCESS\\_DENIED error to the client.\n\nThe _`addprinter command`_ program can output a single line of text, which Samba will set as the port the new printer is connected to. If this line isn't output, Samba won't reload its printer shares.",
      "default": ""
    },
    "add share command": {
      "md": "Samba 2.2.0 introduced the ability to dynamically add and delete shares via the Windows NT 4.0 Server Manager. The _`add share command`_ is used to define an external program or script which will add a new service definition to `smb.conf`.\n\nIn order to successfully execute the _`add share command`_, `smbd` requires that the administrator connects using a root account (i.e. uid == 0) or has the `SeDiskOperatorPrivilege`. Scripts defined in the _`add share command`_ parameter are executed as root.\n\nWhen executed, `smbd` will automatically invoke the _`add share command`_ with five parameters.\n\n*   _`configFile`_ - the location of the global `smb.conf` file.\n    \n*   _`shareName`_ - the name of the new share.\n    \n*   _`pathName`_ - path to an \\*\\*existing\\*\\* directory on disk.\n    \n*   _`comment`_ - comment string to associate with the new share.\n    \n*   _`max connections`_ Number of maximum simultaneous connections to this share.\n    \n\nThis parameter is only used to add file shares. To add printer shares, see the [addprinter command](smb.conf.5.html#ADDPRINTERCOMMAND).",
      "default": ""
    },
    "add user script": {
      "md": "This is the full pathname to a script that will be run _AS ROOT_ by [smbd(8)](smbd.8.html) under special circumstances described below.\n\nNormally, a Samba server requires that UNIX users are created for all users accessing files on this server. For sites that use Windows NT account databases as their primary user database creating these users and keeping the user list in sync with the Windows NT PDC is an onerous task. This option allows smbd to create the required UNIX users _ON DEMAND_ when a user accesses the Samba server.\n\nWhen the Windows user attempts to access the Samba server, at login (session setup in the SMB protocol) time, [smbd(8)](smbd.8.html) contacts the [password server](smb.conf.5.html#PASSWORDSERVER) and attempts to authenticate the given user with the given password. If the authentication succeeds then `smbd` attempts to find a UNIX user in the UNIX password database to map the Windows user into. If this lookup fails, and [add user script](smb.conf.5.html#ADDUSERSCRIPT) is set then `smbd` will call the specified script _AS ROOT_, expanding any _`%u`_ argument to be the user name to create.\n\nIf this script successfully creates the user then `smbd` will continue on as though the UNIX user already existed. In this way, UNIX users are dynamically created to match existing Windows NT accounts.\n\nSee also [security](smb.conf.5.html#SECURITY), [password server](smb.conf.5.html#PASSWORDSERVER), [delete user script](smb.conf.5.html#DELETEUSERSCRIPT).",
      "default": ""
    },
    "add user to group script": {
      "md": "Full path to the script that will be called when a user is added to a group using the Windows NT domain administration tools. It will be run by [smbd(8)](smbd.8.html) _AS ROOT_. Any _`%g`_ will be replaced with the group name and any _`%u`_ will be replaced with the user name.\n\nNote that the `adduser` command used in the example below does not support the used syntax on all systems.",
      "default": ""
    },
    "afs token lifetime": {
      "md": "This parameter controls the lifetime of tokens that the AFS fake-kaserver claims. In reality these never expire but this lifetime controls when the afs client will forget the token.\n\nSet this parameter to 0 to get `NEVERDATE`.",
      "default": "604800"
    },
    "afs username map": {
      "md": "If you are using the fake kaserver AFS feature, you might want to hand-craft the usernames you are creating tokens for. For example this is necessary if you have users from several domain in your AFS Protection Database. One possible scheme to code users as DOMAIN+User as it is done by winbind with the + as a separator.\n\nThe mapped user name must contain the cell name to log into, so without setting this parameter there will be no token.",
      "default": ""
    },
    "aio max threads": {
      "md": "The integer parameter specifies the maximum number of threads each smbd process will create when doing parallel asynchronous IO calls. If the number of outstanding calls is greater than this number the requests will not be refused but go onto a queue and will be scheduled in turn as outstanding requests complete.\n\nRelated command: [aio read size](smb.conf.5.html#AIOREADSIZE)\n\nRelated command: [aio write size](smb.conf.5.html#AIOWRITESIZE)",
      "default": "100"
    },
    "algorithmic rid base": {
      "md": "This determines how Samba will use its algorithmic mapping from uids/gid to the RIDs needed to construct NT Security Identifiers.\n\nSetting this option to a larger value could be useful to sites transitioning from WinNT and Win2k, as existing user and group rids would otherwise clash with system users etc.\n\nAll UIDs and GIDs must be able to be resolved into SIDs for the correct operation of ACLs on the server. As such the algorithmic mapping can't be 'turned off', but pushing it 'out of the way' should resolve the issues. Users and groups can then be assigned 'low' RIDs in arbitrary-rid supporting backends.",
      "default": "1000"
    },
    "allow dcerpc auth level connect": {
      "md": "This option controls whether DCERPC services are allowed to be used with DCERPC\\_AUTH\\_LEVEL\\_CONNECT, which provides authentication, but no per message integrity nor privacy protection.\n\nSome interfaces like samr, lsarpc and netlogon have a hard-coded default of `no` and epmapper, mgmt and rpcecho have a hard-coded default of `yes`.\n\nThe behavior can be overwritten per interface name (e.g. lsarpc, netlogon, samr, srvsvc, winreg, wkssvc ...) by using 'allow dcerpc auth level connect:interface = yes' as option.\n\nThis option yields precedence to the implementation specific restrictions. E.g. the drsuapi and backupkey protocols require DCERPC\\_AUTH\\_LEVEL\\_PRIVACY. The dnsserver protocol requires DCERPC\\_AUTH\\_LEVEL\\_INTEGRITY.",
      "default": "no"
    },
    "allow dns updates": {
      "md": "This option determines what kind of updates to the DNS are allowed.\n\nDNS updates can either be disallowed completely by setting it to `disabled`, enabled over secure connections only by setting it to `secure only` or allowed in all cases by setting it to `nonsecure`.",
      "default": "secure only"
    },
    "allow insecure wide links": {
      "md": "In normal operation the option [wide links](smb.conf.5.html#WIDELINKS) which allows the server to follow symlinks outside of a share path is automatically disabled when [unix extensions](smb.conf.5.html#UNIXEXTENSIONS) are enabled on a Samba server. This is done for security purposes to prevent UNIX clients creating symlinks to areas of the server file system that the administrator does not wish to export.\n\nSetting [allow insecure wide links](smb.conf.5.html#ALLOWINSECUREWIDELINKS) to true disables the link between these two parameters, removing this protection and allowing a site to configure the server to follow symlinks (by setting [wide links](smb.conf.5.html#WIDELINKS) to \"true\") even when [unix extensions](smb.conf.5.html#UNIXEXTENSIONS) is turned on.\n\nIt is not recommended to enable this option unless you fully understand the implications of allowing the server to follow symbolic links created by UNIX clients. For most normal Samba configurations this would be considered a security hole and setting this parameter is not recommended.\n\nThis option was added at the request of sites who had deliberately set Samba up in this way and needed to continue supporting this functionality without having to patch the Samba code.",
      "default": "no"
    },
    "allow nt4 crypto": {
      "md": "This option controls whether the netlogon server (currently only in 'active directory domain controller' mode), will reject clients which does not support NETLOGON\\_NEG\\_STRONG\\_KEYS nor NETLOGON\\_NEG\\_SUPPORTS\\_AES.\n\nThis option was added with Samba 4.2.0. It may lock out clients which worked fine with Samba versions up to 4.1.x. as the effective default was \"yes\" there, while it is \"no\" now.\n\nIf you have clients without RequireStrongKey = 1 in the registry, you may need to set \"allow nt4 crypto = yes\", until you have fixed all clients.\n\n\"allow nt4 crypto = yes\" allows weak crypto to be negotiated, maybe via downgrade attacks.\n\nThis option yields precedence to the 'reject md5 clients' option.",
      "default": "no"
    },
    "allow trusted domains": {
      "md": "This option only takes effect when the [security](smb.conf.5.html#SECURITY) option is set to `server`, `domain` or `ads`. If it is set to no, then attempts to connect to a resource from a domain or workgroup other than the one which smbd is running in will fail, even if that domain is trusted by the remote server doing the authentication.\n\nThis is useful if you only want your Samba server to serve resources to users in the domain it is a member of. As an example, suppose that there are two domains DOMA and DOMB. DOMB is trusted by DOMA, which contains the Samba server. Under normal circumstances, a user with an account in DOMB can then access the resources of a UNIX account with the same account name on the Samba server even if they do not have an account in DOMA. This can make implementing a security boundary difficult.",
      "default": "yes"
    },
    "allow unsafe cluster upgrade": {
      "md": "If set to no (the default), smbd checks at startup if other smbd versions are running in the cluster and refuses to start if so. This is done to protect data corruption in internal data structures due to incompatible Samba versions running concurrently in the same cluster. Setting this parameter to `yes` disables this safety check.",
      "default": "no"
    },
    "apply group policies": {
      "md": "This option controls whether winbind will execute the gpupdate command defined in [gpo update command](smb.conf.5.html#GPOUPDATECOMMAND) on the Group Policy update interval. The Group Policy update interval is defined as every 90 minutes, plus a random offset between 0 and 30 minutes. This applies Group Policy Machine polices to the client or KDC and machine policies to a server.",
      "default": "no"
    },
    "async dns timeout": {
      "md": "The number of seconds the asynchronous DNS resolver code in Samba will wait for responses. Some of the Samba client library code uses internal asynchronous DNS resolution for A and AAAA records when trying to find Active Directory Domain controllers. This value prevents this name resolution code from waiting for DNS server timeouts.\n\nThe minimum value of this parameter is clamped at 1 second.",
      "default": "10"
    },
    "async smb echo handler": {
      "md": "This parameter specifies whether Samba should fork the async smb echo handler. It can be beneficial if your file system can block syscalls for a very long time. In some circumstances, it prolongs the timeout that Windows uses to determine whether a connection is dead. This parameter is only for SMB1. For SMB2 and above TCP keepalives can be used instead.",
      "default": "no"
    },
    "auth event notification": {
      "md": "When enabled, this option causes Samba (acting as an Active Directory Domain Controller) to stream authentication events across the internal message bus. Scripts built using Samba's python bindings can listen to these events by registering as the service `auth_event`.\n\nThis is _not_ needed for the audit logging described in [log level](smb.conf.5.html#LOGLEVEL).\n\nInstead, this should instead be considered a developer option (it assists in the Samba testsuite) rather than a facility for external auditing, as message delivery is not guaranteed (a feature that the testsuite works around).\n\nThe authentication events are also logged via the normal logging methods when the [log level](smb.conf.5.html#LOGLEVEL) is set appropriately, say to `auth_json_audit:3`.",
      "default": "no"
    },
    "auto services": {
      "md": "This is a list of services that you want to be automatically added to the browse lists. This is most useful for homes and printers services that would otherwise not be visible.\n\nNote that if you just want all printers in your printcap file loaded then the [load printers](smb.conf.5.html#LOADPRINTERS) option is easier.",
      "default": ""
    },
    "binddns dir": {
      "md": "This parameters defines the directory samba will use to store the configuration files for bind, such as named.conf. NOTE: The bind dns directory needs to be on the same mount point as the private directory!",
      "default": "${prefix}/bind-dns"
    },
    "bind interfaces only": {
      "md": "This global parameter allows the Samba admin to limit what interfaces on a machine will serve SMB requests. It affects file service [smbd(8)](smbd.8.html) and name service [nmbd(8)](nmbd.8.html) in a slightly different ways.\n\nFor name service it causes `nmbd` to bind to ports 137 and 138 on the interfaces listed in the [interfaces](smb.conf.5.html#INTERFACES) parameter. `nmbd` also binds to the \"all addresses\" interface (0.0.0.0) on ports 137 and 138 for the purposes of reading broadcast messages. If this option is not set then `nmbd` will service name requests on all of these sockets. If [bind interfaces only](smb.conf.5.html#BINDINTERFACESONLY) is set then `nmbd` will check the source address of any packets coming in on the broadcast sockets and discard any that don't match the broadcast addresses of the interfaces in the [interfaces](smb.conf.5.html#INTERFACES) parameter list. As unicast packets are received on the other sockets it allows `nmbd` to refuse to serve names to machines that send packets that arrive through any interfaces not listed in the [interfaces](smb.conf.5.html#INTERFACES) list. IP Source address spoofing does defeat this simple check, however, so it must not be used seriously as a security feature for `nmbd`.\n\nFor file service it causes [smbd(8)](smbd.8.html) to bind only to the interface list given in the [interfaces](smb.conf.5.html#INTERFACES) parameter. This restricts the networks that `smbd` will serve, to packets coming in on those interfaces. Note that you should not use this parameter for machines that are serving PPP or other intermittent or non-broadcast network interfaces as it will not cope with non-permanent interfaces.\n\nIf [bind interfaces only](smb.conf.5.html#BINDINTERFACESONLY) is set and the network address _127.0.0.1_ is not added to the [interfaces](smb.conf.5.html#INTERFACES) parameter list [smbpasswd(8)](smbpasswd.8.html) may not work as expected due to the reasons covered below.\n\nTo change a users SMB password, the `smbpasswd` by default connects to the _localhost - 127.0.0.1_ address as an SMB client to issue the password change request. If [bind interfaces only](smb.conf.5.html#BINDINTERFACESONLY) is set then unless the network address _127.0.0.1_ is added to the [interfaces](smb.conf.5.html#INTERFACES) parameter list then `smbpasswd` will fail to connect in it's default mode. `smbpasswd` can be forced to use the primary IP interface of the local host by using its [smbpasswd(8)](smbpasswd.8.html) _``-r _`remote machine`_``_ parameter, with _`remote machine`_ set to the IP name of the primary interface of the local host.",
      "default": "no"
    },
    "browse list": {
      "md": "This controls whether [smbd(8)](smbd.8.html) will serve a browse list to a client doing a `NetServerEnum` call. Normally set to `yes`. You should never need to change this.",
      "default": "yes"
    },
    "cache directory": {
      "md": "Usually, most of the TDB files are stored in the _`lock directory`_. Since Samba 3.4.0, it is possible to differentiate between TDB files with persistent data and TDB files with non-persistent data using the _`state directory`_ and the _`cache directory`_ options.\n\nThis option specifies the directory for storing TDB files containing non-persistent data that will be kept across service restarts. The directory should be placed on persistent storage, but the data can be safely deleted by an administrator.",
      "default": "${prefix}/var/cache"
    },
    "change notify": {
      "md": "This parameter specifies whether Samba should reply to a client's file change notify requests.\n\nYou should never need to change this parameter",
      "default": "yes"
    },
    "change share command": {
      "md": "Samba 2.2.0 introduced the ability to dynamically add and delete shares via the Windows NT 4.0 Server Manager. The _`change share command`_ is used to define an external program or script which will modify an existing service definition in `smb.conf`.\n\nIn order to successfully execute the _`change share command`_, `smbd` requires that the administrator connects using a root account (i.e. uid == 0) or has the `SeDiskOperatorPrivilege`. Scripts defined in the _`change share command`_ parameter are executed as root.\n\nWhen executed, `smbd` will automatically invoke the _`change share command`_ with six parameters.\n\n*   _`configFile`_ - the location of the global `smb.conf` file.\n    \n*   _`shareName`_ - the name of the new share.\n    \n*   _`pathName`_ - path to an \\*\\*existing\\*\\* directory on disk.\n    \n*   _`comment`_ - comment string to associate with the new share.\n    \n*   _`max connections`_ Number of maximum simultaneous connections to this share.\n    \n*   _`CSC policy`_ - client side caching policy in string form. Valid values are: manual, documents, programs, disable.\n    \n\nThis parameter is only used to modify existing file share definitions. To modify printer shares, use the \"Printers...\" folder as seen when browsing the Samba host.",
      "default": ""
    },
    "check password script": {
      "md": "The name of a program that can be used to check password complexity. The password is sent to the program's standard input.\n\nThe program must return 0 on a good password, or any other value if the password is bad. In case the password is considered weak (the program does not return 0) the user will be notified and the password change will fail.\n\nIn Samba AD, this script will be run _AS ROOT_ by [samba(8)](samba.8.html) without any substitutions.\n\nNote that starting with Samba 4.11 the following environment variables are exported to the script:\n\n*   SAMBA\\_CPS\\_ACCOUNT\\_NAME is always present and contains the sAMAccountName of user, the is the same as the %u substitutions in the none AD DC case.\n    \n*   SAMBA\\_CPS\\_USER\\_PRINCIPAL\\_NAME is optional in the AD DC case if the userPrincipalName is present.\n    \n*   SAMBA\\_CPS\\_FULL\\_NAME is optional if the displayName is present.\n    \n\nNote: In the example directory is a sample program called `crackcheck` that uses cracklib to check the password quality.",
      "default": "# Disabled"
    },
    "cldap port": {
      "md": "This option controls the port used by the CLDAP protocol.",
      "default": "389"
    },
    "client ipc max protocol": {
      "md": "The value of the parameter (a string) is the highest protocol level that will be supported for IPC$ connections as DCERPC transport.\n\nNormally this option should not be set as the automatic negotiation phase in the SMB protocol takes care of choosing the appropriate protocol.\n\nThe value `default` refers to the latest supported protocol, currently `SMB3_11`.\n\nSee [client max protocol](smb.conf.5.html#CLIENTMAXPROTOCOL) for a full list of available protocols. The values CORE, COREPLUS, LANMAN1, LANMAN2 are silently upgraded to NT1.",
      "default": "default"
    },
    "client ipc min protocol": {
      "md": "This setting controls the minimum protocol version that the will be attempted to use for IPC$ connections as DCERPC transport.\n\nNormally this option should not be set as the automatic negotiation phase in the SMB protocol takes care of choosing the appropriate protocol.\n\nThe value `default` refers to the higher value of `NT1` and the effective value of [client min protocol](smb.conf.5.html#CLIENTMINPROTOCOL).\n\nSee [client max protocol](smb.conf.5.html#CLIENTMAXPROTOCOL) for a full list of available protocols. The values CORE, COREPLUS, LANMAN1, LANMAN2 are silently upgraded to NT1.",
      "default": "default"
    },
    "client ipc signing": {
      "md": "This controls whether the client is allowed or required to use SMB signing for IPC$ connections as DCERPC transport. Possible values are _desired_, _required_ and _disabled_.\n\nWhen set to required or default, SMB signing is mandatory.\n\nWhen set to desired, SMB signing is offered, but not enforced and if set to disabled, SMB signing is not offered either.\n\nConnections from winbindd to Active Directory Domain Controllers always enforce signing.",
      "default": "default"
    },
    "client lanman auth": {
      "md": "This parameter has been deprecated since Samba 4.13 and support for LanMan (as distinct from NTLM, NTLMv2 or Kerberos) authentication as a client will be removed in a future Samba release.\n\nThat is, in the future, the current default of `client NTLMv2 auth = yes` will be the enforced behaviour.\n\nThis parameter determines whether or not [smbclient(8)](smbclient.8.html) and other samba client tools will attempt to authenticate itself to servers using the weaker LANMAN password hash. If disabled, only server which support NT password hashes (e.g. Windows NT/2000, Samba, etc... but not Windows 95/98) will be able to be connected from the Samba client.\n\nThe LANMAN encrypted response is easily broken, due to its case-insensitive nature, and the choice of algorithm. Clients without Windows 95/98 servers are advised to disable this option.\n\nDisabling this option will also disable the `client plaintext auth` option.\n\nLikewise, if the `client ntlmv2 auth` parameter is enabled, then only NTLMv2 logins will be attempted.",
      "default": "no"
    },
    "client ldap sasl wrapping": {
      "md": "The [client ldap sasl wrapping](smb.conf.5.html#CLIENTLDAPSASLWRAPPING) defines whether ldap traffic will be signed or signed and encrypted (sealed). Possible values are _plain_, _sign_ and _seal_.\n\nThe values _sign_ and _seal_ are only available if Samba has been compiled against a modern OpenLDAP version (2.3.x or higher).\n\nThis option is needed in the case of Domain Controllers enforcing the usage of signed LDAP connections (e.g. Windows 2000 SP3 or higher). LDAP sign and seal can be controlled with the registry key \"`HKLM\\System\\CurrentControlSet\\Services\\` `NTDS\\Parameters\\LDAPServerIntegrity`\" on the Windows server side.\n\nDepending on the used KRB5 library (MIT and older Heimdal versions) it is possible that the message \"integrity only\" is not supported. In this case, _sign_ is just an alias for _seal_.\n\nThe default value is _sign_. That implies synchronizing the time with the KDC in the case of using _Kerberos_.",
      "default": "sign"
    },
    "client max protocol": {
      "md": "The value of the parameter (a string) is the highest protocol level that will be supported by the client.\n\nPossible values are :\n\n*   `CORE`: Earliest version. No concept of user names.\n    \n*   `COREPLUS`: Slight improvements on CORE for efficiency.\n    \n*   `LANMAN1`: First _modern_ version of the protocol. Long filename support.\n    \n*   `LANMAN2`: Updates to Lanman1 protocol.\n    \n*   `NT1`: Current up to date version of the protocol. Used by Windows NT. Known as CIFS.\n    \n*   `SMB2`: Re-implementation of the SMB protocol. Used by Windows Vista and later versions of Windows. SMB2 has sub protocols available.\n    \n    *   `SMB2_02`: The earliest SMB2 version.\n        \n    *   `SMB2_10`: Windows 7 SMB2 version.\n        \n    \n    By default SMB2 selects the SMB2\\_10 variant.\n    \n*   `SMB3`: The same as SMB2. Used by Windows 8. SMB3 has sub protocols available.\n    \n    *   `SMB3_00`: Windows 8 SMB3 version.\n        \n    *   `SMB3_02`: Windows 8.1 SMB3 version.\n        \n    *   `SMB3_11`: Windows 10 SMB3 version.\n        \n    \n    By default SMB3 selects the SMB3\\_11 variant.\n    \n\nNormally this option should not be set as the automatic negotiation phase in the SMB protocol takes care of choosing the appropriate protocol.\n\nThe value `default` refers to `SMB3_11`.\n\nIPC$ connections for DCERPC e.g. in winbindd, are handled by the [client ipc max protocol](smb.conf.5.html#CLIENTIPCMAXPROTOCOL) option.",
      "default": "default"
    },
    "client min protocol": {
      "md": "This setting controls the minimum protocol version that the client will attempt to use.\n\nNormally this option should not be set as the automatic negotiation phase in the SMB protocol takes care of choosing the appropriate protocol unless you connect to a legacy SMB1-only server.\n\nSee\n\nRelated command: [client max protocol](smb.conf.5.html#CLIENTMAXPROTOCOL)\n\nfor a full list of available protocols.\n\nIPC$ connections for DCERPC e.g. in winbindd, are handled by the [client ipc min protocol](smb.conf.5.html#CLIENTIPCMINPROTOCOL) option.\n\nNote that most command line tools support --option='client min protocol=NT1', so it may not be required to enable SMB1 protocols globally in smb.conf.",
      "default": "SMB2_02"
    },
    "client NTLMv2 auth": {
      "md": "This parameter has been deprecated since Samba 4.13 and support for NTLM and LanMan (as distinct from NTLMv2 or Kerberos authentication) will be removed in a future Samba release.\n\nThat is, in the future, the current default of `client NTLMv2 auth = yes` will be the enforced behaviour.\n\nThis parameter determines whether or not [smbclient(8)](smbclient.8.html) will attempt to authenticate itself to servers using the NTLMv2 encrypted password response.\n\nIf enabled, only an NTLMv2 and LMv2 response (both much more secure than earlier versions) will be sent. Older servers (including NT4 < SP4, Win9x and Samba 2.2) are not compatible with NTLMv2 when not in an NTLMv2 supporting domain\n\nSimilarly, if enabled, NTLMv1, `client lanman auth` and `client plaintext auth` authentication will be disabled. This also disables share-level authentication.\n\nIf disabled, an NTLM response (and possibly a LANMAN response) will be sent by the client, depending on the value of `client lanman auth`.\n\nNote that Windows Vista and later versions already use NTLMv2 by default, and some sites (particularly those following 'best practice' security polices) only allow NTLMv2 responses, and not the weaker LM or NTLM.\n\nWhen [client use spnego](smb.conf.5.html#CLIENTUSESPNEGO) is also set to `yes` extended security (SPNEGO) is required in order to use NTLMv2 only within NTLMSSP. This behavior was introduced with the patches for CVE-2016-2111.",
      "default": "yes"
    },
    "client plaintext auth": {
      "md": "This parameter has been deprecated since Samba 4.13 and support for plaintext (as distinct from NTLM, NTLMv2 or Kerberos authentication) will be removed in a future Samba release.\n\nThat is, in the future, the current default of `client plaintext auth = no` will be the enforced behaviour.\n\nSpecifies whether a client should send a plaintext password if the server does not support encrypted passwords.",
      "default": "no"
    },
    "client protection": {
      "md": "This parameter defines which protection Samba client tools should use by default.\n\nPossible client settings are:\n\n*   _default_ - Use the individual default values of the options:\n    \n    *   _`client signing`_\n        \n    *   _`client smb encrypt`_\n        \n    \n*   _plain_ - This will send everything just as plaintext, signing or encryption are turned off.\n    \n*   _sign_ - This will enable integrity checking.\n    \n*   _encrypt_ - This will enable integrity checks and force encryption for privacy.",
      "default": "default"
    },
    "client schannel": {
      "md": "This option is deprecated with Samba 4.8 and will be removed in future. At the same time the default changed to yes, which will be the hardcoded behavior in future.\n\nThis controls whether the client offers or even demands the use of the netlogon schannel. [client schannel = no](smb.conf.5.html#CLIENTSCHANNEL) does not offer the schannel, [client schannel = auto](smb.conf.5.html#CLIENTSCHANNEL) offers the schannel but does not enforce it, and [client schannel = yes](smb.conf.5.html#CLIENTSCHANNEL) denies access if the server is not able to speak netlogon schannel.\n\nNote that for active directory domains this is hardcoded to [client schannel = yes](smb.conf.5.html#CLIENTSCHANNEL).\n\nThis option yields precedence to the [require strong key](smb.conf.5.html#REQUIRESTRONGKEY) option.",
      "default": "yes"
    },
    "client signing": {
      "md": "This controls whether the client is allowed or required to use SMB signing. Possible values are _desired_, _required_ and _disabled_.\n\nWhen set to desired or default, SMB signing is offered, but not enforced.\n\nWhen set to required, SMB signing is mandatory and if set to disabled, SMB signing is not offered either.\n\nIPC$ connections for DCERPC e.g. in winbindd, are handled by the [client ipc signing](smb.conf.5.html#CLIENTIPCSIGNING) option.",
      "default": "default"
    },
    "client smb3 encryption algorithms": {
      "md": "This parameter specifies the availability and order of encryption algorithms which are available for negotiation in the SMB3\\_11 dialect.\n\nIt is also possible to remove individual algorithms from the default list, by prefixing them with '-'. This can avoid having to specify a hardcoded list.\n\nNote: that the removal of AES-128-CCM from the list will result in SMB3\\_00 and SMB3\\_02 being unavailable, as it is the default and only available algorithm for these dialects.",
      "default": "AES-128-GCM, AES-128-CCM, AES-256-GCM, AES-256-CCM"
    },
    "client smb encrypt": {
      "md": "This parameter controls whether a client should try or is required to use SMB encryption. It has different effects depending on whether the connection uses SMB1 or SMB3:\n\n*   If the connection uses SMB1, then this option controls the use of a Samba-specific extension to the SMB protocol introduced in Samba 3.2 that makes use of the Unix extensions.\n    \n*   If the connection uses SMB2 or newer, then this option controls the use of the SMB-level encryption that is supported in SMB version 3.0 and above and available in Windows 8 and newer.\n    \n\nThis parameter can be set globally. Possible values are _off_, _if\\_required_, _desired_, and _required_. A special value is _default_ which is the implicit default setting of _if\\_required_.\n\n<div style=\"margin-left: 40px\">\n\n\n_Effects for SMB1_\n\n<div style=\"margin-left: 40px\">\n\n\nThe Samba-specific encryption of SMB1 connections is an extension to the SMB protocol negotiated as part of the UNIX extensions. SMB encryption uses the GSSAPI (SSPI on Windows) ability to encrypt and sign every request/response in a SMB protocol stream. When enabled it provides a secure method of SMB/CIFS communication, similar to an ssh protected session, but using SMB/CIFS authentication to negotiate encryption and signing keys. Currently this is only supported smbclient of by Samba 3.2 and newer. Windows does not support this feature.\n\nWhen set to default, SMB encryption is probed, but not enforced. When set to required, SMB encryption is required and if set to disabled, SMB encryption can not be negotiated.\n\n\n</div>\n\n_Effects for SMB3 and newer_\n\n<div style=\"margin-left: 40px\">\n\n\nNative SMB transport encryption is available in SMB version 3.0 or newer. It is only used by Samba if _client max protocol_ is set to _SMB3_ or newer.\n\nThese features can be controlled with settings of _client smb encrypt_ as follows:\n\n\n</div>\n\n\n</div>\n\nDefault: __`client smb encrypt`_ = `default`_",
      "default": "default"
    },
    "client smb3 signing algorithms": {
      "md": "This parameter specifies the availability and order of signing algorithms which are available for negotiation in the SMB3\\_11 dialect.\n\nIt is also possible to remove individual algorithms from the default list, by prefixing them with '-'. This can avoid having to specify a hardcoded list.\n\nNote: that the removal of AES-128-CMAC from the list will result in SMB3\\_00 and SMB3\\_02 being unavailable, and the removal of HMAC-SHA256 will result in SMB2\\_02 and SMB2\\_10 being unavailable, as these are the default and only available algorithms for these dialects.",
      "default": "AES-128-GMAC, AES-128-CMAC, HMAC-SHA256"
    },
    "client use kerberos": {
      "md": "This parameter determines whether Samba client tools will try to authenticate using Kerberos. For Kerberos authentication you need to use dns names instead of IP addresses when connecting to a service.\n\nPossible option settings are:\n\n*   _desired_ - Kerberos authentication will be tried first and if it fails it automatically fallback to NTLM.\n    \n*   _required_ - Kerberos authentication will be required. There will be no falllback to NTLM or a different alternative.\n    \n*   _off_ - Don't use Kerberos, use NTLM instead or another alternative.\n    \n\nIn case that weak cryptography is not allowed (e.g. FIPS mode) the default will be forced to _required_.",
      "default": "desired"
    },
    "client use spnego principal": {
      "md": "This parameter determines whether or not [smbclient(8)](smbclient.8.html) and other samba components acting as a client will attempt to use the server-supplied principal sometimes given in the SPNEGO exchange.\n\nIf enabled, Samba can attempt to use Kerberos to contact servers known only by IP address. Kerberos relies on names, so ordinarily cannot function in this situation.\n\nThis is a VERY BAD IDEA for security reasons, and so this parameter SHOULD NOT BE USED. It will be removed in a future version of Samba.\n\nIf disabled, Samba will use the name used to look up the server when asking the KDC for a ticket. This avoids situations where a server may impersonate another, soliciting authentication as one principal while being known on the network as another.\n\nNote that Windows XP SP2 and later versions already follow this behaviour, and Windows Vista and later servers no longer supply this 'rfc4178 hint' principal on the server side.\n\nThis parameter is deprecated in Samba 4.2.1 and will be removed (along with the functionality) in a later release of Samba.",
      "default": "no"
    },
    "client use spnego": {
      "md": "This parameter has been deprecated since Samba 4.13 and support for NTLMv2, NTLM and LanMan authentication outside NTLMSSP will be removed in a future Samba release.\n\nThat is, in the future, the current default of `client use spnego = yes` will be the enforced behaviour.\n\nThis variable controls whether Samba clients will try to use Simple and Protected NEGOciation (as specified by rfc2478) with supporting servers (including WindowsXP, Windows2000 and Samba 3.0) to agree upon an authentication mechanism. This enables Kerberos authentication in particular.\n\nWhen [client NTLMv2 auth](smb.conf.5.html#CLIENTNTLMV2AUTH) is also set to `yes` extended security (SPNEGO) is required in order to use NTLMv2 only within NTLMSSP. This behavior was introduced with the patches for CVE-2016-2111.",
      "default": "yes"
    },
    "cluster addresses": {
      "md": "With this parameter you can add additional addresses that nmbd will register with a WINS server. Similarly, these addresses will be registered by default when _net ads dns register_ is called with [clustering = yes](smb.conf.5.html#CLUSTERING) configured.",
      "default": ""
    },
    "clustering": {
      "md": "This parameter specifies whether Samba should contact ctdb for accessing its tdb files and use ctdb as a backend for its messaging backend.\n\nSet this parameter to `yes` only if you have a cluster setup with ctdb running.",
      "default": "no"
    },
    "config backend": {
      "md": "This controls the backend for storing the configuration. Possible values are _file_ (the default) and _registry_. When [config backend = registry](smb.conf.5.html#CONFIGBACKEND) is encountered while loading _smb.conf_, the configuration read so far is dropped and the global options are read from registry instead. So this triggers a registry only configuration. Share definitions are not read immediately but instead _`registry shares`_ is set to _yes_.\n\nNote: This option can not be set inside the registry configuration itself.",
      "default": "file"
    },
    "config file": {
      "md": "This allows you to override the config file to use, instead of the default (usually `smb.conf`). There is a chicken and egg problem here as this option is set in the config file!\n\nFor this reason, if the name of the config file has changed when the parameters are loaded then it will reload them from the new config file.\n\nThis option takes the usual substitutions, which can be very useful.\n\nIf the config file doesn't exist then it won't be loaded (allowing you to special case the config files of just a few clients).\n\n_No default_"
    },
    "create krb5 conf": {
      "md": "Setting this parameter to `no` prevents winbind from creating custom krb5.conf files. Winbind normally does this because the krb5 libraries are not AD-site-aware and thus would pick any domain controller out of potentially very many. Winbind is site-aware and makes the krb5 libraries use a local DC by creating its own krb5.conf files.\n\nPreventing winbind from doing this might become necessary if you have to add special options into your system-krb5.conf that winbind does not see.",
      "default": "yes"
    },
    "ctdbd socket": {
      "md": "If you set `clustering=yes`, you need to tell Samba where ctdbd listens on its unix domain socket. The default path as of ctdb 1.0 is /tmp/ctdb.socket which you have to explicitly set for Samba in smb.conf.",
      "default": ""
    },
    "ctdb locktime warn threshold": {
      "md": "In a cluster environment using Samba and ctdb it is critical that locks on central ctdb-hosted databases like locking.tdb are not held for long. With the current Samba architecture it happens that Samba takes a lock and while holding that lock makes file system calls into the shared cluster file system. This option makes Samba warn if it detects that it has held locks for the specified number of milliseconds. If this happens, _smbd_ will emit a debug level 0 message into its logs and potentially into syslog. The most likely reason for such a log message is that an operation of the cluster file system Samba exports is taking longer than expected. The messages are meant as a debugging aid for potential cluster problems.\n\nThe default value of 0 disables this logging.",
      "default": "0"
    },
    "ctdb timeout": {
      "md": "This parameter specifies a timeout in milliseconds for the connection between Samba and ctdb. It is only valid if you have compiled Samba with clustering and if you have set _`clustering=yes`_.\n\nWhen something in the cluster blocks, it can happen that we wait indefinitely long for ctdb, just adding to the blocking condition. In a well-running cluster this should never happen, but there are too many components in a cluster that might have hickups. Choosing the right balance for this value is very tricky, because on a busy cluster long service times to transfer something across the cluster might be valid. Setting it too short will degrade the service your cluster presents, setting it too long might make the cluster itself not recover from something severely broken for too long.\n\nBe aware that if you set this parameter, this needs to be in the file smb.conf, it is not really helpful to put this into a registry configuration (typical on a cluster), because to access the registry contact to ctdb is required.\n\nSetting _`ctdb timeout`_ to n makes any process waiting longer than n milliseconds for a reply by the cluster panic. Setting it to 0 (the default) makes Samba block forever, which is the highly recommended default.",
      "default": "0"
    },
    "cups connection timeout": {
      "md": "This parameter is only applicable if [printing](smb.conf.5.html#PRINTING) is set to `cups`.\n\nIf set, this option specifies the number of seconds that smbd will wait whilst trying to contact to the CUPS server. The connection will fail if it takes longer than this number of seconds.",
      "default": "30"
    },
    "cups encrypt": {
      "md": "This parameter is only applicable if [printing](smb.conf.5.html#PRINTING) is set to `cups` and if you use CUPS newer than 1.0.x.It is used to define whether or not Samba should use encryption when talking to the CUPS server. Possible values are _auto_, _yes_ and _no_\n\nWhen set to auto we will try to do a TLS handshake on each CUPS connection setup. If that fails, we will fall back to unencrypted operation.",
      "default": "no"
    },
    "cups server": {
      "md": "This parameter is only applicable if [printing](smb.conf.5.html#PRINTING) is set to `cups`.\n\nIf set, this option overrides the ServerName option in the CUPS `client.conf`. This is necessary if you have virtual samba servers that connect to different CUPS daemons.\n\nOptionally, a port can be specified by separating the server name and port number with a colon. If no port was specified, the default port for IPP (631) will be used.",
      "default": "\"\""
    },
    "dcerpc endpoint servers": {
      "md": "Specifies which DCE/RPC endpoint servers should be run.",
      "default": "epmapper, wkssvc, rpcecho, samr, netlogon, lsarpc, drsuapi, dssetup, unixinfo, browser, eventlog6, backupkey, dnsserver"
    },
    "deadtime": {
      "md": "The value of the parameter (a decimal integer) represents the number of minutes of inactivity before a connection is considered dead, and it is disconnected. The deadtime only takes effect if the number of open files is zero.\n\nThis is useful to stop a server's resources being exhausted by a large number of inactive connections.\n\nMost clients have an auto-reconnect feature when a connection is broken so in most cases this parameter should be transparent to users.\n\nUsing this parameter with a timeout of a few minutes is recommended for most systems.\n\nA deadtime of zero indicates that no auto-disconnection should be performed.",
      "default": "10080"
    },
    "debug class": {
      "md": "With this boolean parameter enabled, the debug class (DBGC\\_CLASS) will be displayed in the debug header.\n\nFor more information about currently available debug classes, see section about [log level](smb.conf.5.html#LOGLEVEL).",
      "default": "no"
    },
    "debug encryption": {
      "md": "This option will make the smbd server and client code using libsmb (smbclient, smbget, smbspool, ...) dump the Session Id, the decrypted Session Key, the Signing Key, the Application Key, the Encryption Key and the Decryption Key every time an SMB3+ session is established. This information will be printed in logs at level 0.\n\nWarning: access to these values enables the decryption of any encrypted traffic on the dumped sessions. This option should only be enabled for debugging purposes.",
      "default": "no"
    },
    "debug hires timestamp": {
      "md": "Sometimes the timestamps in the log messages are needed with a resolution of higher that seconds, this boolean parameter adds microsecond resolution to the timestamp message header when turned on.\n\nNote that the parameter [debug timestamp](smb.conf.5.html#DEBUGTIMESTAMP) or [debug syslog format](smb.conf.5.html#DEBUGSYSLOGFORMAT) must be on for this to have an effect.",
      "default": "yes"
    },
    "debug pid": {
      "md": "When using only one log file for more then one forked [smbd(8)](smbd.8.html)\\-process there may be hard to follow which process outputs which message. This boolean parameter is adds the process-id to the timestamp message headers in the logfile when turned on.\n\nNote that the parameter [debug timestamp](smb.conf.5.html#DEBUGTIMESTAMP) must be on for this to have an effect.",
      "default": "no"
    },
    "debug prefix timestamp": {
      "md": "With this option enabled, the timestamp message header is prefixed to the debug message without the filename and function information that is included with the [debug timestamp](smb.conf.5.html#DEBUGTIMESTAMP) parameter. This gives timestamps to the messages without adding an additional line.\n\nNote that this parameter overrides the [debug timestamp](smb.conf.5.html#DEBUGTIMESTAMP) parameter.",
      "default": "no"
    },
    "debug syslog format": {
      "md": "With this option enabled, debug messages are printed in a single-line format like that traditionally produced by syslog. The timestamp consists of an abbreviated month, space-padded date, and time including seconds. This is followed by the hostname and the program name, with the process-ID in square brackets.\n\nIf [debug hires timestamp](smb.conf.5.html#DEBUGHIRESTIMESTAMP) is also enabled then an RFC5424 timestamp is used instead.",
      "default": "no"
    },
    "winbind debug traceid": {
      "md": "With this boolean parameter enabled, the per request unique traceid will be displayed in the debug header for winbind processes.",
      "default": "no"
    },
    "debug uid": {
      "md": "Samba is sometimes run as root and sometime run as the connected user, this boolean parameter inserts the current euid, egid, uid and gid to the timestamp message headers in the log file if turned on.\n\nNote that the parameter [debug timestamp](smb.conf.5.html#DEBUGTIMESTAMP) must be on for this to have an effect.",
      "default": "no"
    },
    "dedicated keytab file": {
      "md": "Specifies the absolute path to the kerberos keytab file when [kerberos method](smb.conf.5.html#KERBEROSMETHOD) is set to \"dedicated keytab\".",
      "default": ""
    },
    "default service": {
      "md": "This parameter specifies the name of a service which will be connected to if the service actually requested cannot be found. Note that the square brackets are _NOT_ given in the parameter value (see example below).\n\nThere is no default value for this parameter. If this parameter is not given, or if [max default services](smb.conf.5.html#MAXDEFAULTSERVICES) is not more than 0, attempting to connect to a nonexistent service results in an error.\n\nTypically the default service would be a [guest ok](smb.conf.5.html#GUESTOK), [read-only](smb.conf.5.html#READ-ONLY) service.\n\nAlso note that the apparent service name will be changed to equal that of the requested service, this is very useful as it allows you to use macros like _`%S`_ to make a wildcard service.\n\nNote also that any \"\\_\" characters in the name of the service used in the default service will get mapped to a \"/\". This allows for interesting things.",
      "default": ""
    },
    "defer sharing violations": {
      "md": "Windows allows specifying how a file will be shared with other processes when it is opened. Sharing violations occur when a file is opened by a different process using options that violate the share settings specified by other processes. This parameter causes smbd to act as a Windows server does, and defer returning a \"sharing violation\" error message for up to one second, allowing the client to close the file causing the violation in the meantime.\n\nUNIX by default does not have this behaviour.\n\nThere should be no reason to turn off this parameter, as it is designed to enable Samba to more correctly emulate Windows.",
      "default": "yes"
    },
    "delete group script": {
      "md": "This is the full pathname to a script that will be run _AS ROOT_ by [smbd(8)](smbd.8.html) when a group is requested to be deleted. It will expand any _`%g`_ to the group name passed. This script is only useful for installations using the Windows NT domain administration tools.",
      "default": ""
    },
    "deleteprinter command": {
      "md": "With the introduction of MS-RPC based printer support for Windows NT/2000 clients in Samba 2.2, it is now possible to delete a printer at run time by issuing the DeletePrinter() RPC call.\n\nFor a Samba host this means that the printer must be physically deleted from the underlying printing system. The [deleteprinter command](smb.conf.5.html#DELETEPRINTERCOMMAND) defines a script to be run which will perform the necessary operations for removing the printer from the print system and from `smb.conf`.\n\nThe [deleteprinter command](smb.conf.5.html#DELETEPRINTERCOMMAND) is automatically called with only one parameter: [printer name](smb.conf.5.html#PRINTERNAME).\n\nOnce the [deleteprinter command](smb.conf.5.html#DELETEPRINTERCOMMAND) has been executed, `smbd` will reparse the `smb.conf` to check that the associated printer no longer exists. If the sharename is still valid, then `smbd` will return an ACCESS\\_DENIED error to the client.",
      "default": ""
    },
    "delete share command": {
      "md": "Samba 2.2.0 introduced the ability to dynamically add and delete shares via the Windows NT 4.0 Server Manager. The _`delete share command`_ is used to define an external program or script which will remove an existing service definition from `smb.conf`.\n\nIn order to successfully execute the _`delete share command`_, `smbd` requires that the administrator connects using a root account (i.e. uid == 0) or has the `SeDiskOperatorPrivilege`. Scripts defined in the _`delete share command`_ parameter are executed as root.\n\nWhen executed, `smbd` will automatically invoke the _`delete share command`_ with two parameters.\n\n*   _`configFile`_ - the location of the global `smb.conf` file.\n    \n*   _`shareName`_ - the name of the existing service.\n    \n\nThis parameter is only used to remove file shares. To delete printer shares, see the [deleteprinter command](smb.conf.5.html#DELETEPRINTERCOMMAND).",
      "default": ""
    },
    "delete user from group script": {
      "md": "Full path to the script that will be called when a user is removed from a group using the Windows NT domain administration tools. It will be run by [smbd(8)](smbd.8.html) _AS ROOT_. Any _`%g`_ will be replaced with the group name and any _`%u`_ will be replaced with the user name.",
      "default": ""
    },
    "delete user script": {
      "md": "This is the full pathname to a script that will be run by [smbd(8)](smbd.8.html) when managing users with remote RPC (NT) tools.\n\nThis script is called when a remote client removes a user from the server, normally using 'User Manager for Domains' or `rpcclient`.\n\nThis script should delete the given UNIX username.",
      "default": ""
    },
    "dgram port": {
      "md": "Specifies which ports the server should listen on for NetBIOS datagram traffic.",
      "default": "138"
    },
    "disable netbios": {
      "md": "Enabling this parameter will disable netbios support in Samba. Netbios is the only available form of browsing in all windows versions except for 2000 and XP.\n\n> \n> \n> ### Note\n> \n> Clients that only support netbios won't be able to see your samba server when netbios support is disabled.\n> \n>",
      "default": "no"
    },
    "disable spoolss": {
      "md": "Enabling this parameter will disable Samba's support for the SPOOLSS set of MS-RPC's and will yield identical behavior as Samba 2.0.x. Windows NT/2000 clients will downgrade to using Lanman style printing commands. Windows 9x/ME will be unaffected by the parameter. However, this will also disable the ability to upload printer drivers to a Samba server via the Windows NT Add Printer Wizard or by using the NT printer properties dialog window. It will also disable the capability of Windows NT/2000 clients to download print drivers from the Samba host upon demand. _Be very careful about enabling this parameter._",
      "default": "no"
    },
    "dns forwarder": {
      "md": "This option specifies the list of DNS servers that DNS requests will be forwarded to if they can not be handled by Samba itself.\n\nThe DNS forwarder is only used if the internal DNS server in Samba is used. Port numbers can be appended by separating them from the address by using a colon (':'). When specifying a port, IPv6 addresses must be enclosed in square brackets ('\\[' and '\\]'). IPv6 forwarder addresses with no port specified, don't need the square brackets, and default to port 53.",
      "default": ""
    },
    "dns port": {
      "md": "Specifies which ports the server should listen on for DNS traffic.\n\nIt makes possible to use another DNS server as a front and forward to Samba.\n\n> \n> \n> <span style=\"font-size: 1.25em; color: #f7b011;\">Warning</span>\n> \n> Dynamic DNS updates may not be proxied by the front DNS server when forwarding to Samba. Dynamic DNS update proxying depends on the features of the other DNS server used as a front.\n> \n>",
      "default": "53"
    },
    "dns proxy": {
      "md": "Specifies that [nmbd(8)](nmbd.8.html) when acting as a WINS server and finding that a NetBIOS name has not been registered, should treat the NetBIOS name word-for-word as a DNS name and do a lookup with the DNS server for that name on behalf of the name-querying client.\n\nNote that the maximum length for a NetBIOS name is 15 characters, so the DNS name (or DNS alias) can likewise only be 15 characters, maximum.\n\n`nmbd` spawns a second copy of itself to do the DNS name lookup requests, as doing a name lookup is a blocking action.",
      "default": "yes"
    },
    "dns update command": {
      "md": "This option sets the command that is called when there are DNS updates. It should update the local machines DNS names using TSIG-GSS.",
      "default": "${prefix}/sbin/samba_dnsupdate"
    },
    "dns zone scavenging": {
      "md": "When enabled (the default is disabled) unused dynamic dns records are periodically removed.\n\n> \n> \n> <span style=\"font-size: 1.25em; color: #f7b011;\">Warning</span>\n> \n> This option should not be enabled for installations created with versions of samba before 4.9. Doing this will result in the loss of static DNS entries. This is due to a bug in previous versions of samba (BUG 12451) which marked dynamic DNS records as static and static records as dynamic.\n> \n> \n> \n> \n> ### Note\n> \n> If one record for a DNS name is static (non-aging) then no other record for that DNS name will be scavenged.\n> \n>",
      "default": "no"
    },
    "dns zone transfer clients allow": {
      "md": "This option specifies the list of IPs authorized to ask for dns zone transfer from bind DLZ module.\n\nThe IP list is comma and space separated and specified in the same syntax as used in [hosts allow](smb.conf.5.html#HOSTSALLOW), specifically including IP address, IP prefixes and IP address masks.\n\nAs this is a DNS server option, hostnames are naturally not permitted.\n\nThe default behaviour is to deny any request. A request will be authorized only if the emitting client is identified in this list, and not in [dns zone transfer clients deny](smb.conf.5.html#DNSZONETRANSFERCLIENTSDENY)",
      "default": ""
    },
    "dns zone transfer clients deny": {
      "md": "This option specifies the list of IPs denied to ask for dns zone transfer from bind DLZ module.\n\nThe IP list is comma and space separated and specified in the same syntax as used in [hosts allow](smb.conf.5.html#HOSTSALLOW), specifically including IP address, IP prefixes and IP address masks.\n\nAs this is a DNS server option, hostnames are naturally not permitted.\n\nIf a client identified in this list sends a zone transfer request, it will always be denied, even if they are in [dns zone transfer clients allow](smb.conf.5.html#DNSZONETRANSFERCLIENTSALLOW). This allows the definition of specific denied clients within an authorized subnet.",
      "default": ""
    },
    "domain logons": {
      "md": "This parameter has been deprecated since Samba 4.13 and support for NT4-style domain logons(as distinct from the Samba AD DC) will be removed in a future Samba release.\n\nThat is, in the future, the current default of `domain logons = no` will be the enforced behaviour.\n\nIf set to `yes`, the Samba server will provide the netlogon service for Windows 9X network logons for the [workgroup](smb.conf.5.html#WORKGROUP) it is in. This will also cause the Samba server to act as a domain controller for NT4 style domain services. For more details on setting up this feature see the Domain Control chapter of the Samba HOWTO Collection.",
      "default": "no"
    },
    "domain master": {
      "md": "Tell [smbd(8)](smbd.8.html) to enable WAN-wide browse list collation. Setting this option causes `nmbd` to claim a special domain specific NetBIOS name that identifies it as a domain master browser for its given [workgroup](smb.conf.5.html#WORKGROUP). Local master browsers in the same [workgroup](smb.conf.5.html#WORKGROUP) on broadcast-isolated subnets will give this `nmbd` their local browse lists, and then ask [smbd(8)](smbd.8.html) for a complete copy of the browse list for the whole wide area network. Browser clients will then contact their local master browser, and will receive the domain-wide browse list, instead of just the list for their broadcast-isolated subnet.\n\nNote that Windows NT Primary Domain Controllers expect to be able to claim this [workgroup](smb.conf.5.html#WORKGROUP) specific special NetBIOS name that identifies them as domain master browsers for that [workgroup](smb.conf.5.html#WORKGROUP) by default (i.e. there is no way to prevent a Windows NT PDC from attempting to do this). This means that if this parameter is set and `nmbd` claims the special name for a [workgroup](smb.conf.5.html#WORKGROUP) before a Windows NT PDC is able to do so then cross subnet browsing will behave strangely and may fail.\n\nIf [domain logons = yes](smb.conf.5.html#DOMAINLOGONS), then the default behavior is to enable the [domain master](smb.conf.5.html#DOMAINMASTER) parameter. If [domain logons](smb.conf.5.html#DOMAINLOGONS) is not enabled (the default setting), then neither will [domain master](smb.conf.5.html#DOMAINMASTER) be enabled by default.\n\nWhen [domain logons = Yes](smb.conf.5.html#DOMAINLOGONS) the default setting for this parameter is Yes, with the result that Samba will be a PDC. If [domain master = No](smb.conf.5.html#DOMAINMASTER), Samba will function as a BDC. In general, this parameter should be set to 'No' only on a BDC.",
      "default": "auto"
    },
    "dos charset": {
      "md": "DOS SMB clients assume the server has the same charset as they do. This option specifies which charset Samba should talk to DOS clients.\n\nThe default depends on which charsets you have installed. Samba tries to use charset 850 but falls back to ASCII in case it is not available. Run [testparm(1)](testparm.1.html) to check the default on your system.\n\n_No default_"
    },
    "dsdb event notification": {
      "md": "When enabled, this option causes Samba (acting as an Active Directory Domain Controller) to stream Samba database events across the internal message bus. Scripts built using Samba's python bindings can listen to these events by registering as the service `dsdb_event`.\n\nThis is _not_ needed for the audit logging described in [log level](smb.conf.5.html#LOGLEVEL).\n\nInstead, this should instead be considered a developer option (it assists in the Samba testsuite) rather than a facility for external auditing, as message delivery is not guaranteed (a feature that the testsuite works around).\n\nThe Samba database events are also logged via the normal logging methods when the [log level](smb.conf.5.html#LOGLEVEL) is set appropriately, say to `dsdb_json_audit:5`.",
      "default": "no"
    },
    "dsdb group change notification": {
      "md": "When enabled, this option causes Samba (acting as an Active Directory Domain Controller) to stream group membership change events across the internal message bus. Scripts built using Samba's python bindings can listen to these events by registering as the service `dsdb_group_event`.\n\nThis is _not_ needed for the audit logging described in [log level](smb.conf.5.html#LOGLEVEL).\n\nInstead, this should instead be considered a developer option (it assists in the Samba testsuite) rather than a facility for external auditing, as message delivery is not guaranteed (a feature that the testsuite works around).\n\nThe Samba database events are also logged via the normal logging methods when the [log level](smb.conf.5.html#LOGLEVEL) is set appropriately, say to `dsdb_group_json_audit:5`.",
      "default": "no"
    },
    "dsdb password event notification": {
      "md": "When enabled, this option causes Samba (acting as an Active Directory Domain Controller) to stream password change and reset events across the internal message bus. Scripts built using Samba's python bindings can listen to these events by registering as the service `password_event`.\n\nThis is _not_ needed for the audit logging described in [log level](smb.conf.5.html#LOGLEVEL).\n\nInstead, this should instead be considered a developer option (it assists in the Samba testsuite) rather than a facility for external auditing, as message delivery is not guaranteed (a feature that the testsuite works around).\n\nThe Samba database events are also logged via the normal logging methods when the [log level](smb.conf.5.html#LOGLEVEL) is set appropriately, say to `dsdb_password_json_audit:5`.",
      "default": "no"
    },
    "elasticsearch:ignore unknown attribute": {
      "md": "Ignore unknown Spotlight attributes in search queries. An example query using the unsupported attribute `\"kMDItemTopic\"` would be `kMDItemTopic==\"hotstuff\"`. By default any query using such a type would completely fail. By enabling this option, if the type match is a subexpression of a larger expression, then this subexpression is just ignored.",
      "default": "no"
    },
    "elasticsearch:ignore unknown type": {
      "md": "Ignore unknown Spotlight types in search queries. An example query using the unsupported type `\"public.calendar-event\"` would be `kMDItemContentType==\"public.calendar-event\"`. By default any query using such a type would completely fail. By enabling this option, if the type match is a subexpression of a larger expression, then this subexpression is just ignored.",
      "default": "no"
    },
    "elasticsearch:mappings": {
      "md": "Path to a file specifying metadata attribute mappings in JSON format. Use by the Elasticsearch backend of the Spotlight RPC service.",
      "default": "${prefix}/var/samba/elasticsearch_mappings.json"
    },
    "enable asu support": {
      "md": "Hosts running the \"Advanced Server for Unix (ASU)\" product require some special accommodations such as creating a builtin \\[ADMIN$\\] share that only supports IPC connections. The has been the default behavior in smbd for many years. However, certain Microsoft applications such as the Print Migrator tool require that the remote server support an \\[ADMIN$\\] file share. Disabling this parameter allows for creating an \\[ADMIN$\\] file share in smb.conf.",
      "default": "no"
    },
    "enable core files": {
      "md": "This parameter specifies whether core dumps should be written on internal exits. Normally set to `yes`. You should never need to change this.",
      "default": "yes"
    },
    "enable privileges": {
      "md": "This deprecated parameter controls whether or not smbd will honor privileges assigned to specific SIDs via either `net rpc rights` or one of the Windows user and group manager tools. This parameter is enabled by default. It can be disabled to prevent members of the Domain Admins group from being able to assign privileges to users or groups which can then result in certain smbd operations running as root that would normally run under the context of the connected user.\n\nAn example of how privileges can be used is to assign the right to join clients to a Samba controlled domain without providing root access to the server via smbd.\n\nPlease read the extended description provided in the Samba HOWTO documentation.",
      "default": "yes"
    },
    "enable spoolss": {
      "md": "Inverted synonym for [disable spoolss](smb.conf.5.html#DISABLESPOOLSS).",
      "default": "yes"
    },
    "encrypt passwords": {
      "md": "This parameter has been deprecated since Samba 4.11 and support for plaintext (as distinct from NTLM, NTLMv2 or Kerberos authentication) will be removed in a future Samba release.\n\nThat is, in the future, the current default of `encrypt passwords = yes` will be the enforced behaviour.\n\nThis boolean controls whether encrypted passwords will be negotiated with the client. Note that Windows NT 4.0 SP3 and above and also Windows 98 will by default expect encrypted passwords unless a registry entry is changed. To use encrypted passwords in Samba see the chapter \"User Database\" in the Samba HOWTO Collection.\n\nMS Windows clients that expect Microsoft encrypted passwords and that do not have plain text password support enabled will be able to connect only to a Samba server that has encrypted password support enabled and for which the user accounts have a valid encrypted password. Refer to the smbpasswd command man page for information regarding the creation of encrypted passwords for user accounts.\n\nThe use of plain text passwords is NOT advised as support for this feature is no longer maintained in Microsoft Windows products. If you want to use plain text passwords you must set this parameter to no.\n\nIn order for encrypted passwords to work correctly [smbd(8)](smbd.8.html) must either have access to a local [smbpasswd(5)](smbpasswd.5.html) file (see the [smbpasswd(8)](smbpasswd.8.html) program for information on how to set up and maintain this file), or set the [security = \\[domain|ads\\]](smb.conf.5.html#SECURITY) parameter which causes `smbd` to authenticate against another server.",
      "default": "yes"
    },
    "enhanced browsing": {
      "md": "This option enables a couple of enhancements to cross-subnet browse propagation that have been added in Samba but which are not standard in Microsoft implementations.\n\nThe first enhancement to browse propagation consists of a regular wildcard query to a Samba WINS server for all Domain Master Browsers, followed by a browse synchronization with each of the returned DMBs. The second enhancement consists of a regular randomised browse synchronization with all currently known DMBs.\n\nYou may wish to disable this option if you have a problem with empty workgroups not disappearing from browse lists. Due to the restrictions of the browse protocols, these enhancements can cause a empty workgroup to stay around forever which can be annoying.\n\nIn general you should leave this option enabled as it makes cross-subnet browse propagation much more reliable.",
      "default": "yes"
    },
    "enumports command": {
      "md": "The concept of a \"port\" is fairly foreign to UNIX hosts. Under Windows NT/2000 print servers, a port is associated with a port monitor and generally takes the form of a local port (i.e. LPT1:, COM1:, FILE:) or a remote port (i.e. LPD Port Monitor, etc...). By default, Samba has only one port defined--`\"Samba Printer Port\"`. Under Windows NT/2000, all printers must have a valid port name. If you wish to have a list of ports displayed (`smbd` does not use a port name for anything) other than the default `\"Samba Printer Port\"`, you can define _`enumports command`_ to point to a program which should generate a list of ports, one per line, to standard output. This listing will then be used in response to the level 1 and 2 EnumPorts() RPC.",
      "default": ""
    },
    "eventlog list": {
      "md": "This option defines a list of log names that Samba will report to the Microsoft EventViewer utility. The listed eventlogs will be associated with tdb file on disk in the `$(statedir)/eventlog`.\n\nThe administrator must use an external process to parse the normal Unix logs such as `/var/log/messages` and write then entries to the eventlog tdb files. Refer to the eventlogadm(8) utility for how to write eventlog entries.",
      "default": ""
    },
    "fss: prune stale": {
      "md": "When enabled, Samba's File Server Remote VSS Protocol (FSRVP) server checks all FSRVP initiated snapshots on startup, and removes any corresponding state (including share definitions) for nonexistent snapshot paths.",
      "default": "no"
    },
    "fss: sequence timeout": {
      "md": "The File Server Remote VSS Protocol (FSRVP) server includes a message sequence timer to ensure cleanup on unexpected client disconnect. This parameter overrides the default timeout between FSRVP operations. FSRVP timeouts can be completely disabled via a value of 0.",
      "default": "180 or 1800, depending on operation"
    },
    "get quota command": {
      "md": "The `get quota command` should only be used whenever there is no operating system API available from the OS that samba can use.\n\nThis option is only available Samba was compiled with quotas support.\n\nThis parameter should specify the path to a script that queries the quota information for the specified user/group for the partition that the specified directory is on.\n\nSuch a script is being given 3 arguments:\n\n*   directory\n    \n*   type of query\n    \n*   uid of user or gid of group\n    \n\nThe directory is actually mostly just \".\" - It needs to be treated relatively to the current working directory that the script can also query.\n\nThe type of query can be one of:\n\n*   1 - user quotas\n    \n*   2 - user default quotas (uid = -1)\n    \n*   3 - group quotas\n    \n*   4 - group default quotas (gid = -1)\n    \n\nThis script should print one line as output with spaces between the columns. The printed columns should be:\n\n*   1 - quota flags (0 = no quotas, 1 = quotas enabled, 2 = quotas enabled and enforced)\n    \n*   2 - number of currently used blocks\n    \n*   3 - the softlimit number of blocks\n    \n*   4 - the hardlimit number of blocks\n    \n*   5 - currently used number of inodes\n    \n*   6 - the softlimit number of inodes\n    \n*   7 - the hardlimit number of inodes\n    \n*   8 (optional) - the number of bytes in a block(default is 1024)",
      "default": ""
    },
    "getwd cache": {
      "md": "This is a tuning option. When this is enabled a caching algorithm will be used to reduce the time taken for getwd() calls. This can have a significant impact on performance, especially when the [wide links](smb.conf.5.html#WIDELINKS) parameter is set to `no`.",
      "default": "yes"
    },
    "gpo update command": {
      "md": "This option sets the command that is called to apply GPO policies. The samba-gpupdate script applies System Access and Kerberos Policies to the KDC. System Access policies set minPwdAge, maxPwdAge, minPwdLength, and pwdProperties in the samdb. Kerberos Policies set kdc:service ticket lifetime, kdc:user ticket lifetime, and kdc:renewal lifetime in smb.conf.",
      "default": "${prefix}/sbin/samba-gpupdate"
    },
    "guest account": {
      "md": "This is a username which will be used for access to services which are specified as [guest ok](smb.conf.5.html#GUESTOK) (see below). Whatever privileges this user has will be available to any client connecting to the guest service. This user must exist in the password file, but does not require a valid login. The user account \"ftp\" is often a good choice for this parameter.\n\nOn some systems the default guest account \"nobody\" may not be able to print. Use another account in this case. You should test this by trying to log in as your guest user (perhaps by using the `su -` command) and trying to print using the system print command such as `lpr(1)` or `lp(1)`.\n\nThis parameter does not accept % macros, because many parts of the system require this value to be constant for correct operation.",
      "default": "nobody\n# default can be changed at compile-time"
    },
    "host msdfs": {
      "md": "If set to `yes`, Samba will act as a Dfs server, and allow Dfs-aware clients to browse Dfs trees hosted on the server.\n\nSee also the [msdfs root](smb.conf.5.html#MSDFSROOT) share level parameter. For more information on setting up a Dfs tree on Samba, refer to the MSFDS chapter in the book Samba3-HOWTO.",
      "default": "yes"
    },
    "hostname lookups": {
      "md": "Specifies whether samba should use (expensive) hostname lookups or use the ip addresses instead. An example place where hostname lookups are currently used is when checking the `hosts deny` and `hosts allow`.",
      "default": "no"
    },
    "idmap backend": {
      "md": "The idmap backend provides a plugin interface for Winbind to use varying backends to store SID/uid/gid mapping tables.\n\nThis option specifies the default backend that is used when no special configuration set, but it is now deprecated in favour of the new spelling [idmap config \\* : backend](smb.conf.5.html#IDMAPCONFIG*:BACKEND).",
      "default": "tdb"
    },
    "idmap cache time": {
      "md": "This parameter specifies the number of seconds that Winbind's idmap interface will cache positive SID/uid/gid query results. By default, Samba will cache these results for one week.",
      "default": "604800"
    },
    "idmap config DOMAIN : OPTION": {
      "md": "ID mapping in Samba is the mapping between Windows SIDs and Unix user and group IDs. This is performed by Winbindd with a configurable plugin interface. Samba's ID mapping is configured by options starting with the [idmap config](smb.conf.5.html#IDMAPCONFIG) prefix. An idmap option consists of the [idmap config](smb.conf.5.html#IDMAPCONFIG) prefix, followed by a domain name or the asterisk character (\\*), a colon, and the name of an idmap setting for the chosen domain.\n\nThe idmap configuration is hence divided into groups, one group for each domain to be configured, and one group with the asterisk instead of a proper domain name, which specifies the default configuration that is used to catch all domains that do not have an explicit idmap configuration of their own.\n\nThere are three general options available:\n\n<div style=\"margin-left: 40px\">\n\n\nbackend = backend\\_name\n\n<div style=\"margin-left: 40px\">\n\n\nThis specifies the name of the idmap plugin to use as the SID/uid/gid backend for this domain. The standard backends are tdb ([idmap\\_tdb(8)](idmap_tdb.8.html)), tdb2 ([idmap\\_tdb2(8)](idmap_tdb2.8.html)), ldap ([idmap\\_ldap(8)](idmap_ldap.8.html)), rid ([idmap\\_rid(8)](idmap_rid.8.html)), hash ([idmap\\_hash(8)](idmap_hash.8.html)), autorid ([idmap\\_autorid(8)](idmap_autorid.8.html)), ad ([idmap\\_ad(8)](idmap_ad.8.html)) and nss ([idmap\\_nss(8)](idmap_nss.8.html)). The corresponding manual pages contain the details, but here is a summary.\n\nThe first three of these create mappings of their own using internal unixid counters and store the mappings in a database. These are suitable for use in the default idmap configuration. The rid and hash backends use a pure algorithmic calculation to determine the unixid for a SID. The autorid module is a mixture of the tdb and rid backend. It creates ranges for each domain encountered and then uses the rid algorithm for each of these automatically configured domains individually. The ad backend uses unix ids stored in Active Directory via the standard schema extensions. The nss backend reverses the standard winbindd setup and gets the unix ids via names from nsswitch which can be useful in an ldap setup.\n\n\n</div>\n\nrange = low - high\n\n<div style=\"margin-left: 40px\">\n\n\nDefines the available matching uid and gid range for which the backend is authoritative. For allocating backends, this also defines the start and the end of the range for allocating new unique IDs.\n\nwinbind uses this parameter to find the backend that is authoritative for a unix ID to SID mapping, so it must be set for each individually configured domain and for the default configuration. The configured ranges must be mutually disjoint.\n\nNote that the low value interacts with the [min domain uid](smb.conf.5.html#MINDOMAINUID) option!\n\n\n</div>\n\nread only = yes|no\n\n<div style=\"margin-left: 40px\">\n\n\nThis option can be used to turn the writing backends tdb, tdb2, and ldap into read only mode. This can be useful e.g. in cases where a pre-filled database exists that should not be extended automatically.\n\n\n</div>\n\n\n</div>\n\nThe following example illustrates how to configure the [idmap\\_ad(8)](idmap_ad.8.html) backend for the CORP domain and the [idmap\\_tdb(8)](idmap_tdb.8.html) backend for all other domains. This configuration assumes that the admin of CORP assigns unix ids below 1000000 via the SFU extensions, and winbind is supposed to use the next million entries for its own mappings from trusted domains and for local groups for example.\n\n```\n\tidmap config \\* : backend = tdb\n\tidmap config \\* : range = 1000000-1999999\n\n\tidmap config CORP : backend  = ad\n\tidmap config CORP : range = 1000-999999\n\t\n````\n\n_No default_"
    },
    "idmap gid": {
      "md": "The idmap gid parameter specifies the range of group ids for the default idmap configuration. It is now deprecated in favour of [idmap config \\* : range](smb.conf.5.html#IDMAPCONFIG*:RANGE).\n\nSee the [idmap config](smb.conf.5.html#IDMAPCONFIG) option.",
      "default": ""
    },
    "idmap negative cache time": {
      "md": "This parameter specifies the number of seconds that Winbind's idmap interface will cache negative SID/uid/gid query results.",
      "default": "120"
    },
    "idmap uid": {
      "md": "The idmap uid parameter specifies the range of user ids for the default idmap configuration. It is now deprecated in favour of [idmap config \\* : range](smb.conf.5.html#IDMAPCONFIG*:RANGE).\n\nSee the [idmap config](smb.conf.5.html#IDMAPCONFIG) option.",
      "default": ""
    },
    "include system krb5 conf": {
      "md": "Setting this parameter to `no` will prevent winbind to include the system /etc/krb5.conf file into the krb5.conf file it creates. See also [create krb5 conf](smb.conf.5.html#CREATEKRB5CONF). This option only applies to Samba built with MIT Kerberos.",
      "default": "yes"
    },
    "init logon delayed hosts": {
      "md": "This parameter takes a list of host names, addresses or networks for which the initial samlogon reply should be delayed (so other DCs get preferred by XP workstations if there are any).\n\nThe length of the delay can be specified with the [init logon delay](smb.conf.5.html#INITLOGONDELAY) parameter.",
      "default": ""
    },
    "init logon delay": {
      "md": "This parameter specifies a delay in milliseconds for the hosts configured for delayed initial samlogon with [init logon delayed hosts](smb.conf.5.html#INITLOGONDELAYEDHOSTS).",
      "default": "100"
    },
    "interfaces": {
      "md": "This option allows you to override the default network interfaces list that Samba will use for browsing, name registration and other NetBIOS over TCP/IP (NBT) traffic. By default Samba will query the kernel for the list of all active interfaces and use any interfaces except 127.0.0.1 that are broadcast capable.\n\nThe option takes a list of interface strings. Each string can be in any of the following forms:\n\n*   a network interface name (such as eth0). This may include shell-like wildcards so eth\\* will match any interface starting with the substring \"eth\"\n    \n*   an IP address. In this case the netmask is determined from the list of interfaces obtained from the kernel\n    \n*   an IP/mask pair.\n    \n*   a broadcast/mask pair.\n    \n\nThe \"mask\" parameters can either be a bit length (such as 24 for a C class network) or a full netmask in dotted decimal form.\n\nThe \"IP\" parameters above can either be a full dotted decimal IP address or a hostname which will be looked up via the OS's normal hostname resolution mechanisms.\n\nBy default Samba enables all active interfaces that are broadcast capable except the loopback adaptor (IP address 127.0.0.1).\n\nIn order to support SMB3 multi-channel configurations, smbd understands some extra parameters which can be appended after the actual interface with this extended syntax (note that the quoting is important in order to handle the ; and , characters):\n\n\"interface\\[;key1=value1\\[,key2=value2\\[...\\]\\]\\]\"\n\nKnown keys are speed, capability, and if\\_index. Speed is specified in bits per second. Known capabilities are RSS and RDMA. The if\\_index should be used with care: the values must not coincide with indexes used by the kernel. Note that these options are mainly intended for testing and development rather than for production use. At least on Linux systems, these values should be auto-detected, but the settings can serve as last a resort when autodetection is not working or is not available. The specified values overwrite the auto-detected values.\n\nThe first two example below configures three network interfaces corresponding to the eth0 device and IP addresses 192.168.2.10 and 192.168.3.10. The netmasks of the latter two interfaces would be set to 255.255.255.0.\n\nThe other examples show how per interface extra parameters can be specified. Notice the possible usage of \",\" and \";\", which makes the double quoting necessary.",
      "default": ""
    },
    "iprint server": {
      "md": "This parameter is only applicable if [printing](smb.conf.5.html#PRINTING) is set to `iprint`.\n\nIf set, this option overrides the ServerName option in the CUPS `client.conf`. This is necessary if you have virtual samba servers that connect to different CUPS daemons.",
      "default": "\"\""
    },
    "kdc enable fast": {
      "md": "With the Samba 4.16 the embedded Heimdal KDC brings support for RFC6113 FAST, which wasn't available in older Samba versions.\n\nThis option is mostly for testing and currently only applies if the embedded Heimdal KDC is used.",
      "default": "yes"
    },
    "keepalive": {
      "md": "The value of the parameter (an integer) represents the number of seconds between _`keepalive`_ packets. If this parameter is zero, no keepalive packets will be sent. Keepalive packets, if sent, allow the server to tell whether a client is still present and responding.\n\nKeepalives should, in general, not be needed if the socket has the SO\\_KEEPALIVE attribute set on it by default. (see [socket options](smb.conf.5.html#SOCKETOPTIONS)). Basically you should only use this option if you strike difficulties.\n\nPlease note this option only applies to SMB1 client connections, and has no effect on SMB2 clients.",
      "default": "300"
    },
    "kerberos encryption types": {
      "md": "This parameter determines the encryption types to use when operating as a Kerberos client. Possible values are _all_, _strong_, and _legacy_.\n\nSamba uses a Kerberos library (MIT or Heimdal) to obtain Kerberos tickets. This library is normally configured outside of Samba, using the krb5.conf file. This file may also include directives to configure the encryption types to be used. However, Samba implements Active Directory protocols and algorithms to locate a domain controller. In order to force the Kerberos library into using the correct domain controller, some Samba processes, such as [winbindd(8)](winbindd.8.html) and [net(8)](net.8.html), build a private krb5.conf file for use by the Kerberos library while being invoked from Samba. This private file controls all aspects of the Kerberos library operation, and this parameter controls how the encryption types are configured within this generated file, and therefore also controls the encryption types negotiable by Samba.\n\nWhen set to `all`, all active directory encryption types are allowed.\n\nWhen set to `strong`, only AES-based encryption types are offered. This can be used in hardened environments to prevent downgrade attacks.\n\nWhen set to `legacy`, only RC4-HMAC-MD5 is allowed. Avoiding AES this way has one a very specific use. Normally, the encryption type is negotiated between the peers. However, there is one scenario in which a Windows read-only domain controller (RODC) advertises AES encryption, but then proxies the request to a writeable DC which may not support AES encryption, leading to failure of the handshake. Setting this parameter to `legacy` would cause samba not to negotiate AES encryption. It is assumed of course that the weaker legacy encryption types are acceptable for the setup.",
      "default": "all"
    },
    "kerberos method": {
      "md": "Controls how kerberos tickets are verified.\n\nValid options are:\n\n*   secrets only - use only the secrets.tdb for ticket verification (default)\n    \n*   system keytab - use only the system keytab for ticket verification\n    \n*   dedicated keytab - use a dedicated keytab for ticket verification\n    \n*   secrets and keytab - use the secrets.tdb first, then the system keytab\n    \n\nThe major difference between \"system keytab\" and \"dedicated keytab\" is that the latter method relies on kerberos to find the correct keytab entry instead of filtering based on expected principals.\n\nWhen the kerberos method is in \"dedicated keytab\" mode, [dedicated keytab file](smb.conf.5.html#DEDICATEDKEYTABFILE) must be set to specify the location of the keytab file.",
      "default": "default"
    },
    "kernel change notify": {
      "md": "This parameter specifies whether Samba should ask the kernel for change notifications in directories so that SMB clients can refresh whenever the data on the server changes.\n\nThis parameter is only used when your kernel supports change notification to user programs using the inotify interface.",
      "default": "yes"
    },
    "kpasswd port": {
      "md": "Specifies which ports the Kerberos server should listen on for password changes.",
      "default": "464"
    },
    "krb5 port": {
      "md": "Specifies which port the KDC should listen on for Kerberos traffic.",
      "default": "88"
    },
    "lanman auth": {
      "md": "This parameter has been deprecated since Samba 4.11 and support for LanMan (as distinct from NTLM, NTLMv2 or Kerberos authentication) will be removed in a future Samba release.\n\nThat is, in the future, the current default of `lanman auth = no` will be the enforced behaviour.\n\nThis parameter determines whether or not [smbd(8)](smbd.8.html) will attempt to authenticate users or permit password changes using the LANMAN password hash. If disabled, only clients which support NT password hashes (e.g. Windows NT/2000 clients, smbclient, but not Windows 95/98 or the MS DOS network client) will be able to connect to the Samba host.\n\nThe LANMAN encrypted response is easily broken, due to its case-insensitive nature, and the choice of algorithm. Servers without Windows 95/98/ME or MS DOS clients are advised to disable this option.\n\nWhen this parameter is set to `no` this will also result in sambaLMPassword in Samba's passdb being blanked after the next password change. As a result of that lanman clients won't be able to authenticate, even if lanman auth is re-enabled later on.\n\nUnlike the _`encrypt passwords`_ option, this parameter cannot alter client behaviour, and the LANMAN response will still be sent over the network. See the `client lanman auth` to disable this for Samba's clients (such as smbclient)\n\nThis parameter is overridden by _`ntlm auth`_, so unless that it is also set to `ntlmv1-permitted` or `yes`, then only NTLMv2 logins will be permitted and no LM hash will be stored. All modern clients support NTLMv2, and but some older clients require special configuration to use it.\n\n_This parameter has no impact on the Samba AD DC, LM authentication is always disabled and no LM password is ever stored._",
      "default": "no"
    },
    "large readwrite": {
      "md": "This parameter determines whether or not [smbd(8)](smbd.8.html) supports the new 64k streaming read and write variant SMB requests introduced with Windows 2000. Note that due to Windows 2000 client redirector bugs this requires Samba to be running on a 64-bit capable operating system such as IRIX, Solaris or a Linux 2.4 kernel. Can improve performance by 10% with Windows 2000 clients. Defaults to on. Not as tested as some other Samba code paths.",
      "default": "yes"
    },
    "ldap admin dn": {
      "md": "The [ldap admin dn](smb.conf.5.html#LDAPADMINDN) defines the Distinguished Name (DN) name used by Samba to contact the ldap server when retrieving user account information. The [ldap admin dn](smb.conf.5.html#LDAPADMINDN) is used in conjunction with the admin dn password stored in the `private/secrets.tdb` file. See the [smbpasswd(8)](smbpasswd.8.html) man page for more information on how to accomplish this.\n\nThe [ldap admin dn](smb.conf.5.html#LDAPADMINDN) requires a fully specified DN. The [ldap suffix](smb.conf.5.html#LDAPSUFFIX) is not appended to the [ldap admin dn](smb.conf.5.html#LDAPADMINDN).\n\n_No default_"
    },
    "ldap connection timeout": {
      "md": "This parameter tells the LDAP library calls which timeout in seconds they should honor during initial connection establishments to LDAP servers. It is very useful in failover scenarios in particular. If one or more LDAP servers are not reachable at all, we do not have to wait until TCP timeouts are over. This feature must be supported by your LDAP library.\n\nThis parameter is different from [ldap timeout](smb.conf.5.html#LDAPTIMEOUT) which affects operations on LDAP servers using an existing connection and not establishing an initial connection.",
      "default": "2"
    },
    "ldap debug level": {
      "md": "This parameter controls the debug level of the LDAP library calls. In the case of OpenLDAP, it is the same bit-field as understood by the server and documented in the [slapd.conf(5)](slapd.conf.5.html) manpage. A typical useful value will be _1_ for tracing function calls.\n\nThe debug output from the LDAP libraries appears with the prefix \\[LDAP\\] in Samba's logging output. The level at which LDAP logging is printed is controlled by the parameter _`ldap debug threshold`_.",
      "default": "0"
    },
    "ldap debug threshold": {
      "md": "This parameter controls the Samba debug level at which the ldap library debug output is printed in the Samba logs. See the description of _`ldap debug level`_ for details.",
      "default": "10"
    },
    "ldap delete dn": {
      "md": "This parameter specifies whether a delete operation in the ldapsam deletes the complete entry or only the attributes specific to Samba.",
      "default": "no"
    },
    "ldap deref": {
      "md": "This option controls whether Samba should tell the LDAP library to use a certain alias dereferencing method. The default is _auto_, which means that the default setting of the ldap client library will be kept. Other possible values are _never_, _finding_, _searching_ and _always_. Grab your LDAP manual for more information.",
      "default": "auto"
    },
    "ldap follow referral": {
      "md": "This option controls whether to follow LDAP referrals or not when searching for entries in the LDAP database. Possible values are _on_ to enable following referrals, _off_ to disable this, and _auto_, to use the libldap default settings. libldap's choice of following referrals or not is set in /etc/openldap/ldap.conf with the REFERRALS parameter as documented in ldap.conf(5).",
      "default": "auto"
    },
    "ldap group suffix": {
      "md": "This parameter specifies the suffix that is used for groups when these are added to the LDAP directory. If this parameter is unset, the value of [ldap suffix](smb.conf.5.html#LDAPSUFFIX) will be used instead. The suffix string is pre-pended to the [ldap suffix](smb.conf.5.html#LDAPSUFFIX) string so use a partial DN.",
      "default": ""
    },
    "ldap idmap suffix": {
      "md": "This parameters specifies the suffix that is used when storing idmap mappings. If this parameter is unset, the value of [ldap suffix](smb.conf.5.html#LDAPSUFFIX) will be used instead. The suffix string is pre-pended to the [ldap suffix](smb.conf.5.html#LDAPSUFFIX) string so use a partial DN.",
      "default": ""
    },
    "ldap machine suffix": {
      "md": "It specifies where machines should be added to the ldap tree. If this parameter is unset, the value of [ldap suffix](smb.conf.5.html#LDAPSUFFIX) will be used instead. The suffix string is pre-pended to the [ldap suffix](smb.conf.5.html#LDAPSUFFIX) string so use a partial DN.",
      "default": ""
    },
    "ldap max anonymous request size": {
      "md": "This parameter specifies the maximum permitted size (in bytes) for an LDAP request received on an anonymous connection.\n\nIf the request size exceeds this limit the request will be rejected.",
      "default": "256000"
    },
    "ldap max authenticated request size": {
      "md": "This parameter specifies the maximum permitted size (in bytes) for an LDAP request received on an authenticated connection.\n\nIf the request size exceeds this limit the request will be rejected.",
      "default": "16777216"
    },
    "ldap max search request size": {
      "md": "This parameter specifies the maximum permitted size (in bytes) for an LDAP search request.\n\nIf the request size exceeds this limit the request will be rejected.",
      "default": "256000"
    },
    "ldap page size": {
      "md": "This parameter specifies the number of entries per page.\n\nIf the LDAP server supports paged results, clients can request subsets of search results (pages) instead of the entire list. This parameter specifies the size of these pages.",
      "default": "1000"
    },
    "ldap passwd sync": {
      "md": "This option is used to define whether or not Samba should sync the LDAP password with the NT and LM hashes for normal accounts (NOT for workstation, server or domain trusts) on a password change via SAMBA.\n\nThe [ldap passwd sync](smb.conf.5.html#LDAPPASSWDSYNC) can be set to one of three values:\n\n*   _`Yes`_ = Try to update the LDAP, NT and LM passwords and update the pwdLastSet time.\n    \n*   _`No`_ = Update NT and LM passwords and update the pwdLastSet time.\n    \n*   _`Only`_ = Only update the LDAP password and let the LDAP server do the rest.",
      "default": "no"
    },
    "ldap replication sleep": {
      "md": "When Samba is asked to write to a read-only LDAP replica, we are redirected to talk to the read-write master server. This server then replicates our changes back to the 'local' server, however the replication might take some seconds, especially over slow links. Certain client activities, particularly domain joins, can become confused by the 'success' that does not immediately change the LDAP back-end's data.\n\nThis option simply causes Samba to wait a short time, to allow the LDAP server to catch up. If you have a particularly high-latency network, you may wish to time the LDAP replication with a network sniffer, and increase this value accordingly. Be aware that no checking is performed that the data has actually replicated.\n\nThe value is specified in milliseconds, the maximum value is 5000 (5 seconds).",
      "default": "1000"
    },
    "ldapsam:editposix": {
      "md": "Editposix is an option that leverages ldapsam:trusted to make it simpler to manage a domain controller eliminating the need to set up custom scripts to add and manage the posix users and groups. This option will instead directly manipulate the ldap tree to create, remove and modify user and group entries. This option also requires a running winbindd as it is used to allocate new uids/gids on user/group creation. The allocation range must be therefore configured.\n\nTo use this option, a basic ldap tree must be provided and the ldap suffix parameters must be properly configured. On virgin servers the default users and groups (Administrator, Guest, Domain Users, Domain Admins, Domain Guests) can be precreated with the command `net sam provision`. To run this command the ldap server must be running, Winbindd must be running and the smb.conf ldap options must be properly configured. The typical ldap setup used with the [ldapsam:trusted = yes](smb.conf.5.html#LDAPSAM:TRUSTED) option is usually sufficient to use [ldapsam:editposix = yes](smb.conf.5.html#LDAPSAM:EDITPOSIX) as well.\n\nAn example configuration can be the following:\n\n```\n\tencrypt passwords = true\n\tpassdb backend = ldapsam\n\n\tldapsam:trusted=yes\n\tldapsam:editposix=yes\n\n\tldap admin dn = cn=admin,dc=samba,dc=org\n\tldap delete dn = yes\n\tldap group suffix = ou=groups\n\tldap idmap suffix = ou=idmap\n\tldap machine suffix = ou=computers\n\tldap user suffix = ou=users\n\tldap suffix = dc=samba,dc=org\n\n\tidmap backend = ldap:\"ldap://localhost\"\n\n\tidmap uid = 5000-50000\n\tidmap gid = 5000-50000\n\t\n````\n\nThis configuration assumes a directory layout like described in the following ldif:\n\n```\n\tdn: dc=samba,dc=org\n\tobjectClass: top\n\tobjectClass: dcObject\n\tobjectClass: organization\n\to: samba.org\n\tdc: samba\n\n\tdn: cn=admin,dc=samba,dc=org\n\tobjectClass: simpleSecurityObject\n\tobjectClass: organizationalRole\n\tcn: admin\n\tdescription: LDAP administrator\n\tuserPassword: secret\n\n\tdn: ou=users,dc=samba,dc=org\n\tobjectClass: top\n\tobjectClass: organizationalUnit\n\tou: users\n\n\tdn: ou=groups,dc=samba,dc=org\n\tobjectClass: top\n\tobjectClass: organizationalUnit\n\tou: groups\n\n\tdn: ou=idmap,dc=samba,dc=org\n\tobjectClass: top\n\tobjectClass: organizationalUnit\n\tou: idmap\n\n\tdn: ou=computers,dc=samba,dc=org\n\tobjectClass: top\n\tobjectClass: organizationalUnit\n\tou: computers\n\t\n````",
      "default": "no"
    },
    "ldapsam:trusted": {
      "md": "By default, Samba as a Domain Controller with an LDAP backend needs to use the Unix-style NSS subsystem to access user and group information. Due to the way Unix stores user information in /etc/passwd and /etc/group this inevitably leads to inefficiencies. One important question a user needs to know is the list of groups he is member of. The plain UNIX model involves a complete enumeration of the file /etc/group and its NSS counterparts in LDAP. UNIX has optimized functions to enumerate group membership. Sadly, other functions that are used to deal with user and group attributes lack such optimization.\n\nTo make Samba scale well in large environments, the [ldapsam:trusted = yes](smb.conf.5.html#LDAPSAM:TRUSTED) option assumes that the complete user and group database that is relevant to Samba is stored in LDAP with the standard posixAccount/posixGroup attributes. It further assumes that the Samba auxiliary object classes are stored together with the POSIX data in the same LDAP object. If these assumptions are met, [ldapsam:trusted = yes](smb.conf.5.html#LDAPSAM:TRUSTED) can be activated and Samba can bypass the NSS system to query user group memberships. Optimized LDAP queries can greatly speed up domain logon and administration tasks. Depending on the size of the LDAP database a factor of 100 or more for common queries is easily achieved.",
      "default": "no"
    },
    "ldap server require strong auth": {
      "md": "The [ldap server require strong auth](smb.conf.5.html#LDAPSERVERREQUIRESTRONGAUTH) defines whether the ldap server requires ldap traffic to be signed or signed and encrypted (sealed). Possible values are _no_, _allow\\_sasl\\_over\\_tls_ and _yes_.\n\nA value of _no_ allows simple and sasl binds over all transports.\n\nA value of _allow\\_sasl\\_over\\_tls_ allows simple and sasl binds (without sign or seal) over TLS encrypted connections. Unencrypted connections only allow sasl binds with sign or seal.\n\nA value of _yes_ allows only simple binds over TLS encrypted connections. Unencrypted connections only allow sasl binds with sign or seal.",
      "default": "yes"
    },
    "ldap ssl": {
      "md": "This option is used to define whether or not Samba should use SSL when connecting to the ldap server This is _NOT_ related to Samba's previous SSL support which was enabled by specifying the `--with-ssl` option to the `configure` script.\n\nLDAP connections should be secured where possible. This may be done setting _either_ this parameter to _`start tls`_ _or_ by specifying _`ldaps://`_ in the URL argument of [passdb backend](smb.conf.5.html#PASSDBBACKEND).\n\nThe [ldap ssl](smb.conf.5.html#LDAPSSL) can be set to one of two values:\n\n*   _`Off`_ = Never use SSL when querying the directory.\n    \n*   _`start tls`_ = Use the LDAPv3 StartTLS extended operation (RFC2830) for communicating with the directory server.\n    \n\nPlease note that this parameter does only affect _rpc_ methods.",
      "default": "start tls"
    },
    "ldap suffix": {
      "md": "Specifies the base for all ldap suffixes and for storing the sambaDomain object.\n\nThe ldap suffix will be appended to the values specified for the [ldap user suffix](smb.conf.5.html#LDAPUSERSUFFIX), [ldap group suffix](smb.conf.5.html#LDAPGROUPSUFFIX), [ldap machine suffix](smb.conf.5.html#LDAPMACHINESUFFIX), and the [ldap idmap suffix](smb.conf.5.html#LDAPIDMAPSUFFIX). Each of these should be given only a DN relative to the [ldap suffix](smb.conf.5.html#LDAPSUFFIX).",
      "default": ""
    },
    "ldap timeout": {
      "md": "This parameter defines the number of seconds that Samba should use as timeout for LDAP operations.",
      "default": "15"
    },
    "ldap user suffix": {
      "md": "This parameter specifies where users are added to the tree. If this parameter is unset, the value of [ldap suffix](smb.conf.5.html#LDAPSUFFIX) will be used instead. The suffix string is pre-pended to the [ldap suffix](smb.conf.5.html#LDAPSUFFIX) string so use a partial DN.",
      "default": ""
    },
    "lm announce": {
      "md": "This parameter determines if [nmbd(8)](nmbd.8.html) will produce Lanman announce broadcasts that are needed by OS/2 clients in order for them to see the Samba server in their browse list. This parameter can have three values, `yes`, `no`, or `auto`. The default is `auto`. If set to `no` Samba will never produce these broadcasts. If set to `yes` Samba will produce Lanman announce broadcasts at a frequency set by the parameter [lm interval](smb.conf.5.html#LMINTERVAL). If set to `auto` Samba will not send Lanman announce broadcasts by default but will listen for them. If it hears such a broadcast on the wire it will then start sending them at a frequency set by the parameter [lm interval](smb.conf.5.html#LMINTERVAL).",
      "default": "auto"
    },
    "lm interval": {
      "md": "If Samba is set to produce Lanman announce broadcasts needed by OS/2 clients (see the [lm announce](smb.conf.5.html#LMANNOUNCE) parameter) then this parameter defines the frequency in seconds with which they will be made. If this is set to zero then no Lanman announcements will be made despite the setting of the [lm announce](smb.conf.5.html#LMANNOUNCE) parameter.",
      "default": "60"
    },
    "load printers": {
      "md": "A boolean variable that controls whether all printers in the printcap will be loaded for browsing by default. See the [printers](smb.conf.5.html#PRINTERS) section for more details.",
      "default": "yes"
    },
    "local master": {
      "md": "This option allows [nmbd(8)](nmbd.8.html) to try and become a local master browser on a subnet. If set to `no` then `nmbd` will not attempt to become a local master browser on a subnet and will also lose in all browsing elections. By default this value is set to `yes`. Setting this value to `yes` doesn't mean that Samba will _become_ the local master browser on a subnet, just that `nmbd` will _participate_ in elections for local master browser.\n\nSetting this value to `no` will cause `nmbd` _never_ to become a local master browser.",
      "default": "yes"
    },
    "lock directory": {
      "md": "This option specifies the directory where lock files will be placed. The lock files are used to implement the [max connections](smb.conf.5.html#MAXCONNECTIONS) option.\n\nNote: This option can not be set inside registry configurations.\n\nThe files placed in this directory are not required across service restarts and can be safely placed on volatile storage (e.g. tmpfs in Linux)",
      "default": "${prefix}/var/lock"
    },
    "lock spin time": {
      "md": "The time in milliseconds that smbd should keep waiting to see if a failed lock request can be granted. This parameter has changed in default value from Samba 3.0.23 from 10 to 200. The associated [lock spin count](smb.conf.5.html#LOCKSPINCOUNT) parameter is no longer used in Samba 3.0.24. You should not need to change the value of this parameter.",
      "default": "200"
    },
    "log file": {
      "md": "This option allows you to override the name of the Samba log file (also known as the debug file).\n\nThis option takes the standard substitutions, allowing you to have separate log files for each user or machine.\n\n_No default_"
    },
    "logging": {
      "md": "This parameter configures logging backends. Multiple backends can be specified at the same time, with different log levels for each backend. The parameter is a list of backends, where each backend is specified as backend\\[:option\\]\\[@loglevel\\].\n\nThe 'option' parameter can be used to pass backend-specific options.\n\nThe log level for a backend is optional, if it is not set for a backend, all messages are sent to this backend. The parameter [log level](smb.conf.5.html#LOGLEVEL) determines overall log levels, while the log levels specified here define what is sent to the individual backends.\n\nWhen [logging](smb.conf.5.html#LOGGING) is set, it overrides the [syslog](smb.conf.5.html#SYSLOG) and [syslog only](smb.conf.5.html#SYSLOGONLY) parameters.\n\nSome backends are only available when Samba has been compiled with the additional libraries. The overall list of logging backends:\n\n*   _`syslog`_\n    \n*   _`file`_\n    \n*   _`systemd`_\n    \n*   _`lttng`_\n    \n*   _`gpfs`_\n    \n*   _`ringbuf`_\n    \n\nThe _`ringbuf`_ backend supports an optional size argument to change the buffer size used, the default is 1 MB: _`ringbuf:size=NBYTES`_",
      "default": ""
    },
    "log level": {
      "md": "The value of the parameter (a string) allows the debug level (logging level) to be specified in the `smb.conf` file.\n\nThis parameter has been extended since the 2.2.x series, now it allows one to specify the debug level for multiple debug classes and distinct logfiles for debug classes. This is to give greater flexibility in the configuration of the system. The following debug classes are currently implemented:\n\n*   _`all`_\n    \n*   _`tdb`_\n    \n*   _`printdrivers`_\n    \n*   _`lanman`_\n    \n*   _`smb`_\n    \n*   _`rpc_parse`_\n    \n*   _`rpc_srv`_\n    \n*   _`rpc_cli`_\n    \n*   _`passdb`_\n    \n*   _`sam`_\n    \n*   _`auth`_\n    \n*   _`winbind`_\n    \n*   _`vfs`_\n    \n*   _`idmap`_\n    \n*   _`quota`_\n    \n*   _`acls`_\n    \n*   _`locking`_\n    \n*   _`msdfs`_\n    \n*   _`dmapi`_\n    \n*   _`registry`_\n    \n*   _`scavenger`_\n    \n*   _`dns`_\n    \n*   _`ldb`_\n    \n*   _`tevent`_\n    \n*   _`auth_audit`_\n    \n*   _`auth_json_audit`_\n    \n*   _`kerberos`_\n    \n*   _`drs_repl`_\n    \n*   _`smb2`_\n    \n*   _`smb2_credits`_\n    \n*   _`dsdb_audit`_\n    \n*   _`dsdb_json_audit`_\n    \n*   _`dsdb_password_audit`_\n    \n*   _`dsdb_password_json_audit`_\n    \n*   _`dsdb_transaction_audit`_\n    \n*   _`dsdb_transaction_json_audit`_\n    \n*   _`dsdb_group_audit`_\n    \n*   _`dsdb_group_json_audit`_\n    \n\nVarious modules register dynamic debug classes at first usage:\n\n*   _`catia`_\n    \n*   _`dfs_samba4`_\n    \n*   _`extd_audit`_\n    \n*   _`fileid`_\n    \n*   _`fruit`_\n    \n*   _`full_audit`_\n    \n*   _`media_harmony`_\n    \n*   _`preopen`_\n    \n*   _`recycle`_\n    \n*   _`shadow_copy`_\n    \n*   _`shadow_copy`_\n    \n*   _`unityed_media`_\n    \n*   _`virusfilter`_\n    \n\nTo configure the logging for specific classes to go into a different file then [log file](smb.conf.5.html#LOGFILE), you can append _@PATH_ to the class, eg _`log level = 1 full_audit:1@/var/log/audit.log`_.\n\nAuthentication and authorization audit information is logged under the _`auth_audit`_, and if Samba was not compiled with --without-json, a JSON representation is logged under _`auth_json_audit`_.\n\nSupport is comprehensive for all authentication and authorisation of user accounts in the Samba Active Directory Domain Controller, as well as the implicit authentication in password changes. In the file server, NTLM authentication, SMB and RPC authorization is covered.\n\nLog levels for _`auth_audit`_ and _`auth_audit_json`_ are:\n\n*   2: Authentication Failure\n    \n*   3: Authentication Success\n    \n*   4: Authorization Success\n    \n*   5: Anonymous Authentication and Authorization Success\n    \n\nChanges to the AD DC `sam.ldb` database are logged under the _`dsdb_audit`_ and a JSON representation is logged under _`dsdb_json_audit`_.\n\nGroup membership changes to the AD DC `sam.ldb` database are logged under the _`dsdb_group_audit`_ and a JSON representation is logged under _`dsdb_group_json_audit`_.\n\nLog levels for _`dsdb_audit`_, _`dsdb_json_audit`_, _`dsdb_group_audit`_, _`dsdb_group_json_audit`_ and _`dsdb_json_audit`_ are:\n\n*   5: Database modifications\n    \n*   5: Replicated updates from another DC\n    \n\nPassword changes and Password resets in the AD DC are logged under _`dsdb_password_audit`_ and a JSON representation is logged under the _`dsdb_password_json_audit`_. Password changes will also appears as authentication events via _`auth_audit`_ and _`auth_audit_json`_.\n\nLog levels for _`dsdb_password_audit`_ and _`dsdb_password_json_audit`_ are:\n\n*   5: Successful password changes and resets\n    \n\nTransaction rollbacks and prepare commit failures are logged under the _`dsdb_transaction_audit`_ and a JSON representation is logged under the _`dsdb_transaction_json_audit`_.\n\nLog levels for _`dsdb_transaction_audit`_ and _`dsdb_transaction_json`_ are:\n\n*   5: Transaction failure (rollback)\n    \n*   10: Transaction success (commit)\n    \n\nTransaction roll-backs are possible in Samba, and whilst they rarely reflect anything more than the failure of an individual operation (say due to the add of a conflicting record), they are possible. Audit logs are already generated and sent to the system logs before the transaction is complete. Logging the transaction details allows the identification of password and `sam.ldb` operations that have been rolled back, and so have not actually persisted.\n\n> \n> \n> <span style=\"font-size: 1.25em; color: #f7b011;\">Warning</span>\n> \n> Changes to `sam.ldb` made locally by the `root` user with direct access to the database are not logged to the system logs, but to the administrator's own console. While less than ideal, any user able to make such modifications could disable the audit logging in any case.\n> \n>",
      "default": "0"
    },
    "log nt token command": {
      "md": "This option can be set to a command that will be called when new nt tokens are created.\n\nThis is only useful for development purposes.",
      "default": ""
    },
    "logon drive": {
      "md": "This parameter specifies the local path to which the home directory will be connected (see [logon home](smb.conf.5.html#LOGONHOME)) and is only used by NT Workstations.\n\nNote that this option is only useful if Samba is set up as a logon server.",
      "default": ""
    },
    "logon home": {
      "md": "This parameter specifies the home directory location when a Win95/98 or NT Workstation logs into a Samba PDC. It allows you to do\n\n`C:\\>`**`NET USE H: /HOME`**\n\nfrom a command prompt, for example.\n\nThis option takes the standard substitutions, allowing you to have separate logon scripts for each user or machine.\n\nThis parameter can be used with Win9X workstations to ensure that roaming profiles are stored in a subdirectory of the user's home directory. This is done in the following way:\n\n`logon home = \\\\%N\\%U\\profile`\n\nThis tells Samba to return the above string, with substitutions made when a client requests the info, generally in a NetUserGetInfo request. Win9X clients truncate the info to \\\\\\\\server\\\\share when a user does `net use /home` but use the whole string when dealing with profiles.\n\nNote that in prior versions of Samba, the [logon path](smb.conf.5.html#LOGONPATH) was returned rather than _`logon home`_. This broke `net use /home` but allowed profiles outside the home directory. The current implementation is correct, and can be used for profiles if you use the above trick.\n\nDisable this feature by setting [logon home = \"\"](smb.conf.5.html#LOGONHOME) - using the empty string.\n\nThis option is only useful if Samba is set up as a logon server.",
      "default": "\\\\%N\\%U"
    },
    "logon path": {
      "md": "This parameter specifies the directory where roaming profiles (Desktop, NTuser.dat, etc) are stored. Contrary to previous versions of these manual pages, it has nothing to do with Win 9X roaming profiles. To find out how to handle roaming profiles for Win 9X system, see the [logon home](smb.conf.5.html#LOGONHOME) parameter.\n\nThis option takes the standard substitutions, allowing you to have separate logon scripts for each user or machine. It also specifies the directory from which the \"Application Data\", `desktop`, `start menu`, `network neighborhood`, `programs` and other folders, and their contents, are loaded and displayed on your Windows NT client.\n\nThe share and the path must be readable by the user for the preferences and directories to be loaded onto the Windows NT client. The share must be writeable when the user logs in for the first time, in order that the Windows NT client can create the NTuser.dat and other directories. Thereafter, the directories and any of the contents can, if required, be made read-only. It is not advisable that the NTuser.dat file be made read-only - rename it to NTuser.man to achieve the desired effect (a _MAN_datory profile).\n\nWindows clients can sometimes maintain a connection to the \\[homes\\] share, even though there is no user logged in. Therefore, it is vital that the logon path does not include a reference to the homes share (i.e. setting this parameter to \\\\\\\\%N\\\\homes\\\\profile\\_path will cause problems).\n\nThis option takes the standard substitutions, allowing you to have separate logon scripts for each user or machine.\n\n> \n> \n> <span style=\"font-size: 1.25em; color: #f7b011;\">Warning</span>\n> \n> Do not quote the value. Setting this as “\\\\\\\\%N\\\\profile\\\\%U” will break profile handling. Where the tdbsam or ldapsam passdb backend is used, at the time the user account is created the value configured for this parameter is written to the passdb backend and that value will over-ride the parameter value present in the smb.conf file. Any error present in the passdb backend account record must be editted using the appropriate tool (pdbedit on the command-line, or any other locally provided system tool).\n> \n> \n\nNote that this option is only useful if Samba is set up as a domain controller.\n\nDisable the use of roaming profiles by setting the value of this parameter to the empty string. For example, [logon path = \"\"](smb.conf.5.html#LOGONPATH). Take note that even if the default setting in the smb.conf file is the empty string, any value specified in the user account settings in the passdb backend will over-ride the effect of setting this parameter to null. Disabling of all roaming profile use requires that the user account settings must also be blank.\n\nAn example of use is:\n\n```\nlogon path = \\\\\\\\PROFILESERVER\\\\PROFILE\\\\%U\n\n````",
      "default": "\\\\%N\\%U\\profile"
    },
    "logon script": {
      "md": "This parameter specifies the batch file (`.bat`) or NT command file (`.cmd`) to be downloaded and run on a machine when a user successfully logs in. The file must contain the DOS style CR/LF line endings. Using a DOS-style editor to create the file is recommended.\n\nThe script must be a relative path to the _`[netlogon]`_ service. If the \\[netlogon\\] service specifies a [path](smb.conf.5.html#PATH) of `/usr/local/samba/netlogon`, and [logon script = STARTUP.BAT](smb.conf.5.html#LOGONSCRIPT), then the file that will be downloaded is:\n\n```\n\t/usr/local/samba/netlogon/STARTUP.BAT\n\n````\n\nThe contents of the batch file are entirely your choice. A suggested command would be to add `NET TIME \\\\SERVER /SET /YES`, to force every machine to synchronize clocks with the same time server. Another use would be to add `NET USE U: \\\\SERVER\\UTILS` for commonly used utilities, or\n\n```\n**`NET USE Q: \\\\SERVER\\ISO9001_QA`**\n\n````\n\nfor example.\n\nNote that it is particularly important not to allow write access to the \\[netlogon\\] share, or to grant users write permission on the batch files in a secure environment, as this would allow the batch files to be arbitrarily modified and security to be breached.\n\nThis option takes the standard substitutions, allowing you to have separate logon scripts for each user or machine.\n\nThis option is only useful if Samba is set up as a logon server in a classic domain controller role. If Samba is set up as an Active Directory domain controller, LDAP attribute `scriptPath` is used instead. For configurations where [passdb backend = ldapsam](smb.conf.5.html#PASSDBBACKEND) is in use, this option only defines a default value in case LDAP attribute `sambaLogonScript` is missing.",
      "default": ""
    },
    "log writeable files on exit": {
      "md": "When the network connection between a CIFS client and Samba dies, Samba has no option but to simply shut down the server side of the network connection. If this happens, there is a risk of data corruption because the Windows client did not complete all write operations that the Windows application requested. Setting this option to \"yes\" makes smbd log with a level 0 message a list of all files that have been opened for writing when the network connection died. Those are the files that are potentially corrupted. It is meant as an aid for the administrator to give him a list of files to do consistency checks on.",
      "default": "no"
    },
    "lpq cache time": {
      "md": "This controls how long lpq info will be cached for to prevent the `lpq` command being called too often. A separate cache is kept for each variation of the `lpq` command used by the system, so if you use different `lpq` commands for different users then they won't share cache information.\n\nThe cache files are stored in `/tmp/lpq.xxxx` where xxxx is a hash of the `lpq` command in use.\n\nThe default is 30 seconds, meaning that the cached results of a previous identical `lpq` command will be used if the cached data is less than 30 seconds old. A large value may be advisable if your `lpq` command is very slow.\n\nA value of 0 will disable caching completely.",
      "default": "30"
    },
    "lsa over netlogon": {
      "md": "Setting this deprecated option will allow the RPC server in the AD DC to answer the LSARPC interface on the `\\pipe\\netlogon` IPC pipe.\n\nWhen enabled, this matches the behaviour of Microsoft's Windows, due to their internal implementation choices.\n\nIf it is disabled (the default), the AD DC can offer improved performance, as the netlogon server is decoupled and can run as multiple processes.",
      "default": "no"
    },
    "machine password timeout": {
      "md": "If a Samba server is a member of a Windows NT or Active Directory Domain (see the [security = domain](smb.conf.5.html#SECURITY) and [security = ads](smb.conf.5.html#SECURITY) parameters), then periodically a running winbindd process will try and change the MACHINE ACCOUNT PASSWORD stored in the TDB called `secrets.tdb` . This parameter specifies how often this password will be changed, in seconds. The default is one week (expressed in seconds), the same as a Windows NT Domain member server.\n\nSee also [smbpasswd(8)](smbpasswd.8.html), and the [security = domain](smb.conf.5.html#SECURITY) and [security = ads](smb.conf.5.html#SECURITY) parameters.",
      "default": "604800"
    },
    "mangle prefix": {
      "md": "controls the number of prefix characters from the original name used when generating the mangled names. A larger value will give a weaker hash and therefore more name collisions. The minimum value is 1 and the maximum value is 6.\n\nmangle prefix is effective only when mangling method is hash2.",
      "default": "1"
    },
    "mangling method": {
      "md": "controls the algorithm used for the generating the mangled names. Can take two different values, \"hash\" and \"hash2\". \"hash\" is the algorithm that was used in Samba for many years and was the default in Samba 2.2.x \"hash2\" is now the default and is newer and considered a better algorithm (generates less collisions) in the names. Many Win32 applications store the mangled names and so changing to algorithms must not be done lightly as these applications may break unless reinstalled.",
      "default": "hash2"
    },
    "map to guest": {
      "md": "This parameter can take four different values, which tell [smbd(8)](smbd.8.html) what to do with user login requests that don't match a valid UNIX user in some way.\n\nThe four settings are :\n\n*   `Never` - Means user login requests with an invalid password are rejected. This is the default.\n    \n*   `Bad User` - Means user logins with an invalid password are rejected, unless the username does not exist, in which case it is treated as a guest login and mapped into the [guest account](smb.conf.5.html#GUESTACCOUNT).\n    \n*   `Bad Password` - Means user logins with an invalid password are treated as a guest login and mapped into the [guest account](smb.conf.5.html#GUESTACCOUNT). Note that this can cause problems as it means that any user incorrectly typing their password will be silently logged on as \"guest\" - and will not know the reason they cannot access files they think they should - there will have been no message given to them that they got their password wrong. Helpdesk services will _hate_ you if you set the _`map to guest`_ parameter this way :-).\n    \n*   `Bad Uid` - Is only applicable when Samba is configured in some type of domain mode security (security = {domain|ads}) and means that user logins which are successfully authenticated but which have no valid Unix user account (and smbd is unable to create one) should be mapped to the defined guest account. This was the default behavior of Samba 2.x releases. Note that if a member server is running winbindd, this option should never be required because the nss\\_winbind library will export the Windows domain users and groups to the underlying OS via the Name Service Switch interface.\n    \n\nNote that this parameter is needed to set up \"Guest\" share services. This is because in these modes the name of the resource being requested is _not_ sent to the server until after the server has successfully authenticated the client so the server cannot make authentication decisions at the correct time (connection to the share) for \"Guest\" shares.",
      "default": "Never"
    },
    "max default services": {
      "md": "This parameter specifies how many shares a client can connect to by using [default service](smb.conf.5.html#DEFAULTSERVICE). If set to 0 (the default) no connections are allowed using the default service.",
      "default": "0"
    },
    "max disk size": {
      "md": "This option allows you to put an upper limit on the apparent size of disks. If you set this option to 100 then all shares will appear to be not larger than 100 MB in size.\n\nNote that this option does not limit the amount of data you can put on the disk. In the above case you could still store much more than 100 MB on the disk, but if a client ever asks for the amount of free disk space or the total disk size then the result will be bounded by the amount specified in _`max disk size`_.\n\nThis option is primarily useful to work around bugs in some pieces of software that can't handle very large disks, particularly disks over 1GB in size.\n\nA _`max disk size`_ of 0 means no limit.",
      "default": "0"
    },
    "max log size": {
      "md": "This option (an integer in kilobytes) specifies the max size the log file should grow to. Samba periodically checks the size and if it is exceeded it will rename the file, adding a `.old` extension.\n\nA size of 0 means no limit.",
      "default": "5000"
    },
    "max mux": {
      "md": "This option controls the maximum number of outstanding simultaneous SMB operations that Samba tells the client it will allow. You should never need to set this parameter.",
      "default": "50"
    },
    "max open files": {
      "md": "This parameter limits the maximum number of open files that one [smbd(8)](smbd.8.html) file serving process may have open for a client at any one time. This parameter can be set very high (16384) as Samba uses only one bit per unopened file. Setting this parameter lower than 16384 will cause Samba to complain and set this value back to the minimum of 16384, as Windows 7 depends on this number of open file handles being available.\n\nThe limit of the number of open files is usually set by the UNIX per-process file descriptor limit rather than this parameter so you should never need to touch this parameter.",
      "default": "16384"
    },
    "max smbd processes": {
      "md": "This parameter limits the maximum number of [smbd(8)](smbd.8.html) processes concurrently running on a system and is intended as a stopgap to prevent degrading service to clients in the event that the server has insufficient resources to handle more than this number of connections. Remember that under normal operating conditions, each user will have an [smbd(8)](smbd.8.html) associated with him or her to handle connections to all shares from a given host.\n\nFor a Samba ADDC running the standard process model this option limits the number of processes forked to handle requests. Currently new processes are only forked for ldap and netlogon requests.",
      "default": "0"
    },
    "max stat cache size": {
      "md": "This parameter limits the size in memory of any _`stat cache`_ being used to speed up case insensitive name mappings. It represents the number of kilobyte (1024) units the stat cache can use. A value of zero, meaning unlimited, is not advisable due to increased memory usage. You should not need to change this parameter.",
      "default": "512"
    },
    "max ttl": {
      "md": "This option tells [nmbd(8)](nmbd.8.html) what the default 'time to live' of NetBIOS names should be (in seconds) when `nmbd` is requesting a name using either a broadcast packet or from a WINS server. You should never need to change this parameter. The default is 3 days.",
      "default": "259200"
    },
    "max wins ttl": {
      "md": "This option tells [smbd(8)](smbd.8.html) when acting as a WINS server ([wins support = yes](smb.conf.5.html#WINSSUPPORT)) what the maximum 'time to live' of NetBIOS names that `nmbd` will grant will be (in seconds). You should never need to change this parameter. The default is 6 days (518400 seconds).",
      "default": "518400"
    },
    "max xmit": {
      "md": "This option controls the maximum packet size that will be negotiated by Samba's [smbd(8)](smbd.8.html) for the SMB1 protocol. The default is 16644, which matches the behavior of Windows 2000. A value below 2048 is likely to cause problems. You should never need to change this parameter from its default value.",
      "default": "16644"
    },
    "mdns name": {
      "md": "This parameter controls the name that multicast DNS support advertises as its' hostname.\n\nThe default is to use the NETBIOS name which is typically the hostname in all capital letters.\n\nA setting of mdns will defer the hostname configuration to the MDNS library that is used.",
      "default": "netbios"
    },
    "message command": {
      "md": "This specifies what command to run when the server receives a WinPopup style message.\n\nThis would normally be a command that would deliver the message somehow. How this is to be done is up to your imagination.\n\nAn example is:\n\n```\n`message command = csh -c 'xedit %s;rm %s' &`\n\n````\n\nThis delivers the message using `xedit`, then removes it afterwards. _NOTE THAT IT IS VERY IMPORTANT THAT THIS COMMAND RETURN IMMEDIATELY_. That's why I have the '&' on the end. If it doesn't return immediately then your PCs may freeze when sending messages (they should recover after 30 seconds, hopefully).\n\nAll messages are delivered as the global guest user. The command takes the standard substitutions, although _`%u`_ won't work (_`%U`_ may be better in this case).\n\nApart from the standard substitutions, some additional ones apply. In particular:\n\n*   _`%s`_ = the filename containing the message.\n    \n*   _`%t`_ = the destination that the message was sent to (probably the server name).\n    \n*   _`%f`_ = who the message is from.\n    \n\nYou could make this command send mail, or whatever else takes your fancy. Please let us know of any really interesting ideas you have.\n\nHere's a way of sending the messages as mail to root:\n\n```\n`message command = /bin/mail -s 'message from %f on %m' root < %s; rm %s`\n\n````\n\nIf you don't have a message command then the message won't be delivered and Samba will tell the sender there was an error. Unfortunately WfWg totally ignores the error code and carries on regardless, saying that the message was delivered.\n\nIf you want to silently delete it then try:\n\n```\n`message command = rm %s`\n\n````",
      "default": ""
    },
    "min domain uid": {
      "md": "The integer parameter specifies the minimum uid allowed when mapping a local account to a domain account.\n\nNote that this option interacts with the configured _idmap ranges_!",
      "default": "1000"
    },
    "min receivefile size": {
      "md": "This option changes the behavior of [smbd(8)](smbd.8.html) when processing SMBwriteX calls. Any incoming SMBwriteX call on a non-signed SMB/CIFS connection greater than this value will not be processed in the normal way but will be passed to any underlying kernel recvfile or splice system call (if there is no such call Samba will emulate in user space). This allows zero-copy writes directly from network socket buffers into the filesystem buffer cache, if available. It may improve performance but user testing is recommended. If set to zero Samba processes SMBwriteX calls in the normal way. To enable POSIX large write support (SMB/CIFS writes up to 16Mb) this option must be nonzero. The maximum value is 128k. Values greater than 128k will be silently set to 128k.\n\nNote this option will have NO EFFECT if set on a SMB signed connection.\n\nThe default is zero, which disables this option.",
      "default": "0"
    },
    "min wins ttl": {
      "md": "This option tells [nmbd(8)](nmbd.8.html) when acting as a WINS server ([wins support = yes](smb.conf.5.html#WINSSUPPORT)) what the minimum 'time to live' of NetBIOS names that `nmbd` will grant will be (in seconds). You should never need to change this parameter. The default is 6 hours (21600 seconds).",
      "default": "21600"
    },
    "mit kdc command": {
      "md": "This option specifies the path to the MIT kdc binary.\n\nIf the KDC is not installed in the default location and wasn't correctly detected during build then you should modify this variable and point it to the correct binary.",
      "default": "${prefix}/sbin/krb5kdc"
    },
    "multicast dns register": {
      "md": "If compiled with proper support for it, Samba will announce itself with multicast DNS services like for example provided by the Avahi daemon.\n\nThis parameter allows disabling Samba to register itself.",
      "default": "yes"
    },
    "name cache timeout": {
      "md": "Specifies the number of seconds it takes before entries in samba's hostname resolve cache time out. If the timeout is set to 0. the caching is disabled.",
      "default": "660"
    },
    "name resolve order": {
      "md": "This option is used by the programs in the Samba suite to determine what naming services to use and in what order to resolve host names to IP addresses. Its main purpose to is to control how netbios name resolution is performed. The option takes a space separated string of name resolution options.\n\nThe options are: \"lmhosts\", \"host\", \"wins\" and \"bcast\". They cause names to be resolved as follows:\n\n*   `lmhosts` : Lookup an IP address in the Samba lmhosts file. If the line in lmhosts has no name type attached to the NetBIOS name (see the manpage for lmhosts for details) then any name type matches for lookup.\n    \n*   `host` : Do a standard host name to IP address resolution, using the system `/etc/hosts` or DNS lookups. This method of name resolution is operating system depended for instance on IRIX or Solaris this may be controlled by the `/etc/nsswitch.conf` file. Note that this method is used only if the NetBIOS name type being queried is the 0x20 (server) name type or 0x1c (domain controllers). The latter case is only useful for active directory domains and results in a DNS query for the SRV RR entry matching \\_ldap.\\_tcp.domain.\n    \n*   `wins` : Query a name with the IP address listed in the [WINSSERVER](smb.conf.5.html#WINSSERVER) parameter. If no WINS server has been specified this method will be ignored.\n    \n*   `bcast` : Do a broadcast on each of the known local interfaces listed in the [interfaces](smb.conf.5.html#INTERFACES) parameter. This is the least reliable of the name resolution methods as it depends on the target host being on a locally connected subnet.\n    \n\nThe example below will cause the local lmhosts file to be examined first, followed by a broadcast attempt, followed by a normal system hostname lookup.\n\nWhen Samba is functioning in ADS security mode (`security = ads`) it is advised to use following settings for _`name resolve order`_:\n\n`name resolve order = wins bcast`\n\nDC lookups will still be done via DNS, but fallbacks to netbios names will not inundate your DNS servers with needless queries for DOMAIN<0x1c> lookups.",
      "default": "lmhosts wins host bcast"
    },
    "nbt client socket address": {
      "md": "This option allows you to control what address Samba will send NBT client packets from, and process replies using, including in nmbd.\n\nSetting this option should never be necessary on usual Samba servers running only one nmbd.\n\nBy default Samba will send UDP packets from the OS default address for the destination, and accept replies on 0.0.0.0.\n\nThis parameter is deprecated. See [bind interfaces only = Yes](smb.conf.5.html#BINDINTERFACESONLY) and [interfaces](smb.conf.5.html#INTERFACES) for the previous behaviour of controlling the normal listening sockets.",
      "default": "0.0.0.0"
    },
    "nbtd:wins_prepend1Bto1Cqueries": {
      "md": "Normally queries for 0x1C names (all logon servers for a domain) will return the first address of the 0x1B names (domain master browser and PDC) as first address in the result list. As many client only use the first address in the list by default, all clients will use the same server (the PDC). Windows servers have an option to disable this behavior (since Windows 2000 Service Pack 2).",
      "default": "yes"
    },
    "nbtd:wins_randomize1Clist_mask": {
      "md": "If the \"nbtd:wins\\_randomize1Clist\" parameter is set to \"yes\", then randomizing of the first returned address is based on the specified netmask. If there are addresses which are in the same subnet as the client address, the first returned address is randomly chosen out them. Otherwise the first returned address is randomly chosen out of all addresses.",
      "default": "255.255.255.0"
    },
    "nbtd:wins_wins_randomize1Clist": {
      "md": "Normally queries for 0x1C names will return the addresses in the same order as they're stored in the database, that means first all addresses which have been directly registered at the local wins server and then all addresses registered at other servers. Windows servers have an option to change this behavior and randomize the returned addresses. Set this parameter to \"yes\" and Samba will sort the address list depending on the client address and the matching bits of the addresses, the first address is randomized based on depending on the \"nbtd:wins\\_randomize1Clist\\_mask\" parameter.",
      "default": "no"
    },
    "nbt port": {
      "md": "Specifies which port the server should use for NetBIOS over IP name services traffic.",
      "default": "137"
    },
    "ncalrpc dir": {
      "md": "This directory will hold a series of named pipes to allow RPC over inter-process communication.\n\nThis will allow Samba and other unix processes to interact over DCE/RPC without using TCP/IP. Additionally a sub-directory 'np' has restricted permissions, and allows a trusted communication channel between Samba processes",
      "default": "${prefix}/var/run/ncalrpc"
    },
    "netbios aliases": {
      "md": "This is a list of NetBIOS names that nmbd will advertise as additional names by which the Samba server is known. This allows one machine to appear in browse lists under multiple names. If a machine is acting as a browse server or logon server none of these names will be advertised as either browse server or logon servers, only the primary name of the machine will be advertised with these capabilities.",
      "default": "# empty string (no additional names)"
    },
    "netbios name": {
      "md": "This sets the NetBIOS name by which a Samba server is known. By default it is the same as the first component of the host's DNS name. If a machine is a browse server or logon server this name (or the first component of the hosts DNS name) will be the name that these services are advertised under.\n\nNote that the maximum length for a NetBIOS name is 15 characters.\n\nThere is a bug in Samba that breaks operation of browsing and access to shares if the netbios name is set to the literal name `PIPE`. To avoid this problem, do not name your Samba server `PIPE`.",
      "default": "# machine DNS name"
    },
    "netbios scope": {
      "md": "This sets the NetBIOS scope that Samba will operate under. This should not be set unless every machine on your LAN also sets this value.",
      "default": ""
    },
    "neutralize nt4 emulation": {
      "md": "This option controls whether winbindd sends the NETLOGON\\_NEG\\_NEUTRALIZE\\_NT4\\_EMULATION flag in order to bypass the NT4 emulation of a domain controller.\n\nTypically you should not need set this. It can be useful for upgrades from NT4 to AD domains.\n\nThe behavior can be controlled per netbios domain by using 'neutralize nt4 emulation:NETBIOSDOMAIN = yes' as option.",
      "default": "no"
    },
    "nmbd bind explicit broadcast": {
      "md": "This option causes [nmbd(8)](nmbd.8.html) to explicitly bind to the broadcast address of the local subnets. This is needed to make nmbd work correctly in combination with the [socket address](smb.conf.5.html#SOCKETADDRESS) option. You should not need to unset this option.",
      "default": "yes"
    },
    "nsupdate command": {
      "md": "This option sets the path to the `nsupdate` command which is used for GSS-TSIG dynamic DNS updates.",
      "default": "/usr/bin/nsupdate -g"
    },
    "nt hash store": {
      "md": "This parameter determines whether or not [samba(8)](samba.8.html) will, as an AD DC, attempt to store the NT password hash used in NTLM and NTLMv2 authentication for users in this domain.\n\nIf so configured, the Samba Active Directory Domain Controller, will, except for trust accounts (computers, domain controllers and inter-domain trusts) the _NOT store the NT hash_ for new and changed accounts in the sam.ldb database.\n\nThis avoids the storage of an unsalted hash for these user-created passwords. As a consequence the `arcfour-hmac-md5` Kerberos key type is also unavailable in the KDC for these users - thankfully _modern clients will select an AES based key instead._\n\nNOTE: As the password history in Active Directory is stored as an NT hash (and thus unavailable), a workaround is used, relying instead on Kerberos password hash values. This stores three passwords, the current, previous and second previous password. This allows some checking against reuse.\n\nHowever as these values are salted, changing the sAMAccountName, userAccountControl or userPrincipalName of an account will cause the salt to change. After the rare combination of both a rename and a password change only the current password will be recognised for password history purposes.\n\nThe available settings are:\n\n*   `always` - Always store the NT hash (as machine accounts will also always store an NT hash, a hash will be stored for all accounts).\n    \n    This setting may be useful if _`ntlm auth`_ is set to `disabled` for a trial period\n    \n*   `never` - Never store the NT hash for user accounts, only for machine accounts\n    \n*   `auto` - Store an NT hash if _`ntlm auth`_ is not set to `disabled`.",
      "default": "always"
    },
    "ntlm auth": {
      "md": "This parameter determines whether or not [smbd(8)](smbd.8.html) will attempt to authenticate users using the NTLM encrypted password response for this local passdb (SAM or account database).\n\nIf disabled, both NTLM and LanMan authentication against the local passdb is disabled.\n\nNote that these settings apply only to local users, authentication will still be forwarded to and NTLM authentication accepted against any domain we are joined to, and any trusted domain, even if disabled or if NTLMv2-only is enforced here. To control NTLM authentiation for domain users, this must option must be configured on each DC.\n\nBy default with `ntlm auth` set to `ntlmv2-only` only NTLMv2 logins will be permitted. All modern clients support NTLMv2 by default, but some older clients will require special configuration to use it.\n\nThe primary user of NTLMv1 is MSCHAPv2 for VPNs and 802.1x.\n\nThe available settings are:\n\n*   `ntlmv1-permitted` (alias `yes`) - Allow NTLMv1 and above for all clients.\n    \n    This is the required setting for to enable the _`lanman auth`_ parameter.\n    \n*   `ntlmv2-only` (alias `no`) - Do not allow NTLMv1 to be used, but permit NTLMv2.\n    \n*   `mschapv2-and-ntlmv2-only` - Only allow NTLMv1 when the client promises that it is providing MSCHAPv2 authentication (such as the `ntlm_auth` tool).\n    \n*   `disabled` - Do not accept NTLM (or LanMan) authentication of any level, nor permit NTLM password changes.\n    \n    _WARNING:_ Both Microsoft Windows and Samba _Read Only Domain Controllers_ (RODCs) convert a plain-text LDAP Simple Bind into an NTLMv2 authentication to forward to a full DC. Setting this option to `disabled` will cause these forwarded authentications to fail.\n    \n    Additionally, for Samba acting as an Active Directory Domain Controller, for user accounts, if _`nt hash store`_ is set to the default setting of `auto`, the _NT hash will not be stored_ in the sam.ldb database for new users and after a password change.\n    \n\nThe default changed from `yes` to `no` with Samba 4.5. The default changed again to `ntlmv2-only` with Samba 4.7, however the behaviour is unchanged.",
      "default": "ntlmv2-only"
    },
    "nt pipe support": {
      "md": "This boolean parameter controls whether [smbd(8)](smbd.8.html) will allow Windows NT clients to connect to the NT SMB specific `IPC$` pipes. This is a developer debugging option and can be left alone.",
      "default": "yes"
    },
    "ntp signd socket directory": {
      "md": "This setting controls the location of the socket that the NTP daemon uses to communicate with Samba for signing packets.\n\nIf a non-default path is specified here, then it is also necessary to make NTP aware of the new path using the `ntpsigndsocket` directive in `ntp.conf`.",
      "default": "${prefix}/var/lib/ntp_signd"
    },
    "nt status support": {
      "md": "This boolean parameter controls whether [smbd(8)](smbd.8.html) will negotiate NT specific status support with Windows NT/2k/XP clients. This is a developer debugging option and should be left alone. If this option is set to `no` then Samba offers exactly the same DOS error codes that versions prior to Samba 2.2.3 reported.\n\nYou should not need to ever disable this parameter.",
      "default": "yes"
    },
    "null passwords": {
      "md": "Allow or disallow client access to accounts that have null passwords.\n\nSee also [smbpasswd(5)](smbpasswd.5.html).",
      "default": "no"
    },
    "obey pam restrictions": {
      "md": "When Samba 3.0 is configured to enable PAM support (i.e. --with-pam), this parameter will control whether or not Samba should obey PAM's account and session management directives. The default behavior is to use PAM for clear text authentication only and to ignore any account or session management. Note that Samba always ignores PAM for authentication in the case of [encrypt passwords = yes](smb.conf.5.html#ENCRYPTPASSWORDS). The reason is that PAM modules cannot support the challenge/response authentication mechanism needed in the presence of SMB password encryption.",
      "default": "no"
    },
    "old password allowed period": {
      "md": "Number of minutes to permit an NTLM login after a password change or reset using the old password. This allows the user to re-cache the new password on multiple clients without disrupting a network reconnection in the meantime.\n\nThis parameter only applies when [server role](smb.conf.5.html#SERVERROLE) is set to Active Directory Domain Controller.",
      "default": "60"
    },
    "oplock break wait time": {
      "md": "This is a tuning parameter added due to bugs in both Windows 9x and WinNT. If Samba responds to a client too quickly when that client issues an SMB that can cause an oplock break request, then the network client can fail and not respond to the break request. This tuning parameter (which is set in milliseconds) is the amount of time Samba will wait before sending an oplock break request to such (broken) clients.\n\n> \n> \n> <span style=\"font-size: 1.25em; color: #f7b011;\">Warning</span>\n> \n> DO NOT CHANGE THIS PARAMETER UNLESS YOU HAVE READ AND UNDERSTOOD THE SAMBA OPLOCK CODE.\n> \n>",
      "default": "0"
    },
    "os2 driver map": {
      "md": "The parameter is used to define the absolute path to a file containing a mapping of Windows NT printer driver names to OS/2 printer driver names. The format is:\n\n<nt driver name> = <os2 driver name>.<device name>\n\nFor example, a valid entry using the HP LaserJet 5 printer driver would appear as `HP LaserJet 5L = LASERJET.HP LaserJet 5L`.\n\nThe need for the file is due to the printer driver namespace problem described in the chapter on Classical Printing in the Samba3-HOWTO book. For more details on OS/2 clients, please refer to chapter on other clients in the Samba3-HOWTO book.",
      "default": ""
    },
    "os level": {
      "md": "This integer value controls what level Samba advertises itself as for browse elections. The value of this parameter determines whether [nmbd(8)](nmbd.8.html) has a chance of becoming a local master browser for the [workgroup](smb.conf.5.html#WORKGROUP) in the local broadcast area.\n\n_Note:_ By default, Samba will win a local master browsing election over all Microsoft operating systems except a Windows NT 4.0/2000 Domain Controller. This means that a misconfigured Samba host can effectively isolate a subnet for browsing purposes. This parameter is largely auto-configured in the Samba-3 release series and it is seldom necessary to manually override the default setting. Please refer to the chapter on Network Browsing in the Samba-3 HOWTO document for further information regarding the use of this parameter. _Note:_ The maximum value for this parameter is 255. If you use higher values, counting will start at 0!",
      "default": "20"
    },
    "pam password change": {
      "md": "With the addition of better PAM support in Samba 2.2, this parameter, it is possible to use PAM's password change control flag for Samba. If enabled, then PAM will be used for password changes when requested by an SMB client instead of the program listed in [passwd program](smb.conf.5.html#PASSWDPROGRAM). It should be possible to enable this without changing your [passwd chat](smb.conf.5.html#PASSWDCHAT) parameter for most setups.",
      "default": "no"
    },
    "panic action": {
      "md": "This is a Samba developer option that allows a system command to be called when either [smbd(8)](smbd.8.html) or [nmbd(8)](nmbd.8.html) crashes. This is usually used to draw attention to the fact that a problem occurred.",
      "default": "/usr/share/samba/panic-action %d"
    },
    "passdb backend": {
      "md": "This option allows the administrator to chose which backend will be used for storing user and possibly group information. This allows you to swap between different storage mechanisms without recompile.\n\nThe parameter value is divided into two parts, the backend's name, and a 'location' string that has meaning only to that particular backed. These are separated by a : character.\n\nAvailable backends can include:\n\n*   `smbpasswd` - The old plaintext passdb backend. Some Samba features will not work if this passdb backend is used. Takes a path to the smbpasswd file as an optional argument.\n    \n*   `tdbsam` - The TDB based password storage backend. Takes a path to the TDB as an optional argument (defaults to passdb.tdb in the [private dir](smb.conf.5.html#PRIVATEDIR) directory.\n    \n*   `ldapsam` - The LDAP based passdb backend. Takes an LDAP URL as an optional argument (defaults to `ldap://localhost`)\n    \n    LDAP connections should be secured where possible. This may be done using either Start-TLS (see [ldap ssl](smb.conf.5.html#LDAPSSL)) or by specifying _`ldaps://`_ in the URL argument.\n    \n    Multiple servers may also be specified in double-quotes. Whether multiple servers are supported or not and the exact syntax depends on the LDAP library you use.\n    \n\nExamples of use are:```\npassdb backend = tdbsam:/etc/samba/private/passdb.tdb \n\nor multi server LDAP URL with OpenLDAP library:\n\npassdb backend = ldapsam:\"ldap://ldap-1.example.com ldap://ldap-2.example.com\"\n\nor multi server LDAP URL with Netscape based LDAP library:\n\npassdb backend = ldapsam:\"ldap://ldap-1.example.com ldap-2.example.com\"\n\n````",
      "default": "tdbsam"
    },
    "passdb expand explicit": {
      "md": "This parameter controls whether Samba substitutes %-macros in the passdb fields if they are explicitly set. We used to expand macros here, but this turned out to be a bug because the Windows client can expand a variable %G\\_osver% in which %G would have been substituted by the user's primary group.",
      "default": "no"
    },
    "passwd chat debug": {
      "md": "This boolean specifies if the passwd chat script parameter is run in _debug_ mode. In this mode the strings passed to and received from the passwd chat are printed in the [smbd(8)](smbd.8.html) log with a [debug level](smb.conf.5.html#DEBUGLEVEL) of 100. This is a dangerous option as it will allow plaintext passwords to be seen in the `smbd` log. It is available to help Samba admins debug their _`passwd chat`_ scripts when calling the _`passwd program`_ and should be turned off after this has been done. This option has no effect if the [pam password change](smb.conf.5.html#PAMPASSWORDCHANGE) parameter is set. This parameter is off by default.",
      "default": "no"
    },
    "passwd chat timeout": {
      "md": "This integer specifies the number of seconds smbd will wait for an initial answer from a passwd chat script being run. Once the initial answer is received the subsequent answers must be received in one tenth of this time. The default it two seconds.",
      "default": "2"
    },
    "passwd chat": {
      "md": "This string controls the _\"chat\"_ conversation that takes places between [smbd(8)](smbd.8.html) and the local password changing program to change the user's password. The string describes a sequence of response-receive pairs that [smbd(8)](smbd.8.html) uses to determine what to send to the [passwd program](smb.conf.5.html#PASSWDPROGRAM) and what to expect back. If the expected output is not received then the password is not changed.\n\nThis chat sequence is often quite site specific, depending on what local methods are used for password control.\n\nNote that this parameter only is used if the [unix password sync](smb.conf.5.html#UNIXPASSWORDSYNC) parameter is set to `yes`. This sequence is then called _AS ROOT_ when the SMB password in the smbpasswd file is being changed, without access to the old password cleartext. This means that root must be able to reset the user's password without knowing the text of the previous password.\n\nThe string can contain the macro _`%n`_ which is substituted for the new password. The old password (_`%o`_) is only available when [encrypt passwords](smb.conf.5.html#ENCRYPTPASSWORDS) has been disabled. The chat sequence can also contain the standard macros \\\\n, \\\\r, \\\\t and \\\\s to give line-feed, carriage-return, tab and space. The chat sequence string can also contain a '\\*' which matches any sequence of characters. Double quotes can be used to collect strings with spaces in them into a single string.\n\nIf the send string in any part of the chat sequence is a full stop \".\", then no string is sent. Similarly, if the expect string is a full stop then no string is expected.\n\nIf the [pam password change](smb.conf.5.html#PAMPASSWORDCHANGE) parameter is set to `yes`, the chat pairs may be matched in any order, and success is determined by the PAM result, not any particular output. The \\\\n macro is ignored for PAM conversions.",
      "default": "*new*password* %n\\n *new*password* %n\\n *changed*"
    },
    "passwd program": {
      "md": "The name of a program that can be used to set UNIX user passwords. Any occurrences of _`%u`_ will be replaced with the user name. The user name is checked for existence before calling the password changing program.\n\nAlso note that many passwd programs insist in _reasonable_ passwords, such as a minimum length, or the inclusion of mixed case chars and digits. This can pose a problem as some clients (such as Windows for Workgroups) uppercase the password before sending it.\n\n_Note_ that if the _`unix password sync`_ parameter is set to `yes` then this program is called _AS ROOT_ before the SMB password in the smbpasswd file is changed. If this UNIX password change fails, then `smbd` will fail to change the SMB password also (this is by design).\n\nIf the _`unix password sync`_ parameter is set this parameter _MUST USE ABSOLUTE PATHS_ for _ALL_ programs called, and must be examined for security implications. Note that by default _`unix password sync`_ is set to `no`.",
      "default": ""
    },
    "password hash gpg key ids": {
      "md": "If `samba` is running as an active directory domain controller, it is possible to store the cleartext password of accounts in a PGP/OpenGPG encrypted form.\n\nYou can specify one or more recipients by key id or user id. Note that 32bit key ids are not allowed, specify at least 64bit.\n\nThe value is stored as 'Primary:SambaGPG' in the `supplementalCredentials` attribute.\n\nAs password changes can occur on any domain controller, you should configure this on each of them. Note that this feature is currently available only on Samba domain controllers.\n\nThis option is only available if `samba` was compiled with `gpgme` support.\n\nYou may need to export the `GNUPGHOME` environment variable before starting `samba`. _It is strongly recommended to only store the public key in this location. The private key is not used for encryption and should be only stored where decryption is required._\n\nBeing able to restore the cleartext password helps, when they need to be imported into other authentication systems later (see `samba-tool user getpassword`) or you want to keep the passwords in sync with another system, e.g. an OpenLDAP server (see `samba-tool user syncpasswords`).\n\nWhile this option needs to be configured on all domain controllers, the `samba-tool user syncpasswords` command should run on a single domain controller only (typically the PDC-emulator).",
      "default": ""
    },
    "password hash userPassword schemes": {
      "md": "This parameter determines whether or not [samba(8)](samba.8.html) acting as an Active Directory Domain Controller will attempt to store additional passwords hash types for the user\n\nThe values are stored as 'Primary:userPassword' in the `supplementalCredentials` attribute. The value of this option is a hash type.\n\nThe currently supported hash types are:\n\n*   `CryptSHA256`\n    \n*   `CryptSHA512`\n    \n\nMultiple instances of a hash type may be computed and stored. The password hashes are calculated using the [crypt(3)](crypt.3.html) call. The number of rounds used to compute the hash can be specified by adding ':rounds=xxxx' to the hash type, i.e. CryptSHA512:rounds=4500 would calculate an SHA512 hash using 4500 rounds. If not specified the Operating System defaults for [crypt(3)](crypt.3.html) are used.\n\nAs password changes can occur on any domain controller, you should configure this on each of them. Note that this feature is currently available only on Samba domain controllers.\n\nCurrently the NT Hash of the password is recorded when these hashes are calculated and stored. When retrieving the hashes the current value of the NT Hash is checked against the stored NT Hash. This detects password changes that have not updated the password hashes. In this case `samba-tool user` will ignore the stored hash values.\n\nBeing able to obtain the hashed password helps, when they need to be imported into other authentication systems later (see `samba-tool user getpassword`) or you want to keep the passwords in sync with another system, e.g. an OpenLDAP server (see `samba-tool user syncpasswords`).\n\nRelated command: [unix password sync](smb.conf.5.html#UNIXPASSWORDSYNC)",
      "default": ""
    },
    "password server": {
      "md": "By specifying the name of a domain controller with this option, and using `security = [ads|domain]` it is possible to get Samba to do all its username/password validation using a specific remote server.\n\nIdeally, this option _should not_ be used, as the default '\\*' indicates to Samba to determine the best DC to contact dynamically, just as all other hosts in an AD domain do. This allows the domain to be maintained (addition and removal of domain controllers) without modification to the smb.conf file. The cryptographic protection on the authenticated RPC calls used to verify passwords ensures that this default is safe.\n\n_It is strongly recommended that you use the default of '\\*'_, however if in your particular environment you have reason to specify a particular DC list, then the list of machines in this option must be a list of names or IP addresses of Domain controllers for the Domain. If you use the default of '\\*', or list several hosts in the _`password server`_ option then `smbd` will try each in turn till it finds one that responds. This is useful in case your primary server goes down.\n\nIf the list of servers contains both names/IP's and the '\\*' character, the list is treated as a list of preferred domain controllers, but an auto lookup of all remaining DC's will be added to the list as well. Samba will not attempt to optimize this list by locating the closest DC.\n\nIf parameter is a name, it is looked up using the parameter [name resolve order](smb.conf.5.html#NAMERESOLVEORDER) and so may resolved by any method and order described in that parameter.",
      "default": "*"
    },
    "perfcount module": {
      "md": "This parameter specifies the perfcount backend to be used when monitoring SMB operations. Only one perfcount module may be used, and it must implement all of the apis contained in the smb\\_perfcount\\_handler structure defined in smb.h.\n\n_No default_"
    },
    "pid directory": {
      "md": "This option specifies the directory where pid files will be placed.",
      "default": "${prefix}/var/run"
    },
    "preferred master": {
      "md": "This boolean parameter controls if [nmbd(8)](nmbd.8.html) is a preferred master browser for its workgroup.\n\nIf this is set to `yes`, on startup, `nmbd` will force an election, and it will have a slight advantage in winning the election. It is recommended that this parameter is used in conjunction with [domain master = yes](smb.conf.5.html#DOMAINMASTER), so that `nmbd` can guarantee becoming a domain master.\n\nUse this option with caution, because if there are several hosts (whether Samba servers, Windows 95 or NT) that are preferred master browsers on the same subnet, they will each periodically and continuously attempt to become the local master browser. This will result in unnecessary broadcast traffic and reduced browsing capabilities.",
      "default": "auto"
    },
    "prefork backoff increment": {
      "md": "This option specifies the number of seconds added to the delay before a prefork master or worker process is restarted. The restart is initially zero, the prefork backoff increment is added to the delay on each restart up to the value specified by \"prefork maximum backoff\".\n\nAdditionally the the backoff for an individual service by using \"prefork backoff increment: service name\" i.e. \"prefork backoff increment:ldap = 2\" to set the backoff increment to 2.\n\nIf the backoff increment is 2 and the maximum backoff is 5. There will be a zero second delay for the first restart. A two second delay for the second restart. A four second delay for the third and any subsequent restarts",
      "default": "10"
    },
    "prefork children": {
      "md": "This option controls the number of worker processes that are started for each service when prefork process model is enabled (see [samba(8)](samba.8.html) -M) The prefork children are only started for those services that support prefork (currently ldap, kdc and netlogon). For processes that don't support preforking all requests are handled by a single process for that service.\n\nThis should be set to a small multiple of the number of CPU's available on the server\n\nAdditionally the number of prefork children can be specified for an individual service by using \"prefork children: service name\" i.e. \"prefork children:ldap = 8\" to set the number of ldap worker processes.",
      "default": "4"
    },
    "prefork maximum backoff": {
      "md": "This option controls the maximum delay before a failed pre-fork process is restarted.",
      "default": "120"
    },
    "preload modules": {
      "md": "This is a list of paths to modules that should be loaded into smbd before a client connects. This improves the speed of smbd when reacting to new connections somewhat.",
      "default": ""
    },
    "printcap cache time": {
      "md": "This option specifies the number of seconds before the printing subsystem is again asked for the known printers.\n\nSetting this parameter to 0 disables any rescanning for new or removed printers after the initial startup.",
      "default": "750"
    },
    "printcap name": {
      "md": "This parameter may be used to override the compiled-in default printcap name used by the server (usually `/etc/printcap`). See the discussion of the [\\[printers\\]](#PRINTERSSECT \"The [printers] section\") section above for reasons why you might want to do this.\n\nTo use the CUPS printing interface set `printcap name = cups` . This should be supplemented by an additional setting [printing = cups](smb.conf.5.html#PRINTING) in the \\[global\\] section. `printcap name = cups` will use the \"dummy\" printcap created by CUPS, as specified in your CUPS configuration file.\n\nOn System V systems that use `lpstat` to list available printers you can use `printcap name = lpstat` to automatically obtain lists of available printers. This is the default for systems that define SYSV at configure time in Samba (this includes most System V based systems). If _`printcap name`_ is set to `lpstat` on these systems then Samba will launch `lpstat -v` and attempt to parse the output to obtain a printer list.\n\nA minimal printcap file would look something like this:\n\n```\nprint1|My Printer 1\nprint2|My Printer 2\nprint3|My Printer 3\nprint4|My Printer 4\nprint5|My Printer 5\n\n````\n\nwhere the '|' separates aliases of a printer. The fact that the second alias has a space in it gives a hint to Samba that it's a comment.\n\n> \n> \n> ### Note\n> \n> Under AIX the default printcap name is `/etc/qconfig`. Samba will assume the file is in AIX `qconfig` format if the string `qconfig` appears in the printcap filename.\n> \n>",
      "default": "/etc/printcap"
    },
    "private dir": {
      "md": "This parameters defines the directory smbd will use for storing such files as `smbpasswd` and `secrets.tdb`.",
      "default": "${prefix}/private"
    },
    "raw NTLMv2 auth": {
      "md": "This parameter has been deprecated since Samba 4.13 and support for NTLMv2 authentication without NTLMSSP will be removed in a future Samba release.\n\nThat is, in the future, the current default of `raw NTLMv2 auth = no` will be the enforced behaviour.\n\nThis parameter determines whether or not [smbd(8)](smbd.8.html) will allow SMB1 clients without extended security (without SPNEGO) to use NTLMv2 authentication.\n\nIf this option, `lanman auth` and `ntlm auth` are all disabled, then only clients with SPNEGO support will be permitted. That means NTLMv2 is only supported within NTLMSSP.",
      "default": "no"
    },
    "read raw": {
      "md": "This is ignored if [async smb echo handler](smb.conf.5.html#ASYNCSMBECHOHANDLER) is set, because this feature is incompatible with raw read SMB requests\n\nIf enabled, raw reads allow reads of 65535 bytes in one packet. This typically provides a major performance benefit for some very, very old clients.\n\nHowever, some clients either negotiate the allowable block size incorrectly or are incapable of supporting larger block sizes, and for these clients you may need to disable raw reads.\n\nIn general this parameter should be viewed as a system tuning tool and left severely alone.",
      "default": "yes"
    },
    "realm": {
      "md": "This option specifies the kerberos realm to use. The realm is used as the ADS equivalent of the NT4 `domain`. It is usually set to the DNS name of the kerberos server.",
      "default": ""
    },
    "registry shares": {
      "md": "This turns on or off support for share definitions read from registry. Shares defined in _smb.conf_ take precedence over shares with the same name defined in registry. See the section on registry-based configuration for details.\n\nNote that this parameter defaults to _no_, but it is set to _yes_ when _`config backend`_ is set to _registry_.",
      "default": "no"
    },
    "reject md5 clients": {
      "md": "This option controls whether the netlogon server (currently only in 'active directory domain controller' mode), will reject clients which does not support NETLOGON\\_NEG\\_SUPPORTS\\_AES.\n\nYou can set this to yes if all domain members support aes. This will prevent downgrade attacks.\n\nThis option takes precedence to the 'allow nt4 crypto' option.",
      "default": "no"
    },
    "reject md5 servers": {
      "md": "This option controls whether winbindd requires support for aes support for the netlogon secure channel.\n\nThe following flags will be required NETLOGON\\_NEG\\_ARCFOUR, NETLOGON\\_NEG\\_SUPPORTS\\_AES, NETLOGON\\_NEG\\_PASSWORD\\_SET2 and NETLOGON\\_NEG\\_AUTHENTICATED\\_RPC.\n\nYou can set this to yes if all domain controllers support aes. This will prevent downgrade attacks.\n\nThe behavior can be controlled per netbios domain by using 'reject md5 servers:NETBIOSDOMAIN = yes' as option.\n\nThis option takes precedence to the [require strong key](smb.conf.5.html#REQUIRESTRONGKEY) option.",
      "default": "no"
    },
    "remote announce": {
      "md": "This option allows you to setup [nmbd(8)](nmbd.8.html) to periodically announce itself to arbitrary IP addresses with an arbitrary workgroup name.\n\nThis is useful if you want your Samba server to appear in a remote workgroup for which the normal browse propagation rules don't work. The remote workgroup can be anywhere that you can send IP packets to.\n\nFor example:\n\n```\n`remote announce = 192.168.2.255/SERVERS 192.168.4.255/STAFF`\n\n````\n\nthe above line would cause `nmbd` to announce itself to the two given IP addresses using the given workgroup names. If you leave out the workgroup name, then the one given in the [workgroup](smb.conf.5.html#WORKGROUP) parameter is used instead.\n\nThe IP addresses you choose would normally be the broadcast addresses of the remote networks, but can also be the IP addresses of known browse masters if your network config is that stable.\n\nSee the chapter on Network Browsing in the Samba-HOWTO book.",
      "default": ""
    },
    "remote browse sync": {
      "md": "This option allows you to setup [nmbd(8)](nmbd.8.html) to periodically request synchronization of browse lists with the master browser of a Samba server that is on a remote segment. This option will allow you to gain browse lists for multiple workgroups across routed networks. This is done in a manner that does not work with any non-Samba servers.\n\nThis is useful if you want your Samba server and all local clients to appear in a remote workgroup for which the normal browse propagation rules don't work. The remote workgroup can be anywhere that you can send IP packets to.\n\nFor example:\n\n```\n_`remote browse sync = 192.168.2.255 192.168.4.255`_\n\n````\n\nthe above line would cause `nmbd` to request the master browser on the specified subnets or addresses to synchronize their browse lists with the local server.\n\nThe IP addresses you choose would normally be the broadcast addresses of the remote networks, but can also be the IP addresses of known browse masters if your network config is that stable. If a machine IP address is given Samba makes NO attempt to validate that the remote machine is available, is listening, nor that it is in fact the browse master on its segment.\n\nThe [remote browse sync](smb.conf.5.html#REMOTEBROWSESYNC) may be used on networks where there is no WINS server, and may be used on disjoint networks where each network has its own WINS server.",
      "default": ""
    },
    "rename user script": {
      "md": "This is the full pathname to a script that will be run as root by [smbd(8)](smbd.8.html) under special circumstances described below.\n\nWhen a user with admin authority or SeAddUserPrivilege rights renames a user (e.g.: from the NT4 User Manager for Domains), this script will be run to rename the POSIX user. Two variables, `%uold` and `%unew`, will be substituted with the old and new usernames, respectively. The script should return 0 upon successful completion, and nonzero otherwise.\n\n> \n> \n> ### Note\n> \n> The script has all responsibility to rename all the necessary data that is accessible in this posix method. This can mean different requirements for different backends. The tdbsam and smbpasswd backends will take care of the contents of their respective files, so the script is responsible only for changing the POSIX username, and other data that may required for your circumstances, such as home directory. Please also consider whether or not you need to rename the actual home directories themselves. The ldapsam backend will not make any changes, because of the potential issues with renaming the LDAP naming attribute. In this case the script is responsible for changing the attribute that samba uses (uid) for locating users, as well as any data that needs to change for other applications using the same directory.\n> \n>",
      "default": ""
    },
    "require strong key": {
      "md": "This option controls whether winbindd requires support for md5 strong key support for the netlogon secure channel.\n\nThe following flags will be required NETLOGON\\_NEG\\_STRONG\\_KEYS, NETLOGON\\_NEG\\_ARCFOUR and NETLOGON\\_NEG\\_AUTHENTICATED\\_RPC.\n\nYou can set this to no if some domain controllers only support des. This might allows weak crypto to be negotiated, may via downgrade attacks.\n\nThe behavior can be controlled per netbios domain by using 'require strong key:NETBIOSDOMAIN = no' as option.\n\nNote for active directory domain this option is hardcoded to 'yes'\n\nThis option yields precedence to the [reject md5 servers](smb.conf.5.html#REJECTMD5SERVERS) option.\n\nThis option takes precedence to the [client schannel](smb.conf.5.html#CLIENTSCHANNEL) option.",
      "default": "yes"
    },
    "reset on zero vc": {
      "md": "This boolean option controls whether an incoming SMB1 session setup should kill other connections coming from the same IP. This matches the default Windows 2003 behaviour. Setting this parameter to yes becomes necessary when you have a flaky network and windows decides to reconnect while the old connection still has files with share modes open. These files become inaccessible over the new connection. The client sends a zero VC on the new connection, and Windows 2003 kills all other connections coming from the same IP. This way the locked files are accessible again. Please be aware that enabling this option will kill connections behind a masquerading router, and will not trigger for clients that only use SMB2 or SMB3.",
      "default": "no"
    },
    "restrict anonymous": {
      "md": "The setting of this parameter determines whether SAMR and LSA DCERPC services can be accessed anonymously. This corresponds to the following Windows Server registry options:\n\n```\n\t\tHKEY\\_LOCAL\\_MACHINE\\\\SYSTEM\\\\CurrentControlSet\\\\Control\\\\Lsa\\\\RestrictAnonymous\n\t\n````\n\nThe option also affects the browse option which is required by legacy clients which rely on Netbios browsing. While modern Windows version should be fine with restricting the access there could still be applications relying on anonymous access.\n\nSetting [restrict anonymous = 1](smb.conf.5.html#RESTRICTANONYMOUS) will disable anonymous SAMR access.\n\nSetting [restrict anonymous = 2](smb.conf.5.html#RESTRICTANONYMOUS) will, in addition to restricting SAMR access, disallow anonymous connections to the IPC$ share in general. Setting [guest ok = yes](smb.conf.5.html#GUESTOK) on any share will remove the security advantage.",
      "default": "0"
    },
    "root directory": {
      "md": "The server will `chroot()` (i.e. Change its root directory) to this directory on startup. This is not strictly necessary for secure operation. Even without it the server will deny access to files not in one of the service entries. It may also check for, and deny access to, soft links to other parts of the filesystem, or attempts to use \"..\" in file names to access other directories (depending on the setting of the [wide smbconfoptions](smb.conf.5.html#WIDESMBCONFOPTIONS) parameter).\n\nAdding a _`root directory`_ entry other than \"/\" adds an extra level of security, but at a price. It absolutely ensures that no access is given to files not in the sub-tree specified in the _`root directory`_ option, _including_ some files needed for complete operation of the server. To maintain full operability of the server you will need to mirror some system files into the _`root directory`_ tree. In particular you will need to mirror `/etc/passwd` (or a subset of it), and any binaries or configuration files needed for printing (if required). The set of files that must be mirrored is operating system dependent.",
      "default": ""
    },
    "rpc big endian": {
      "md": "Setting this option will force the RPC client and server to transfer data in big endian.\n\nIf it is disabled, data will be transferred in little endian.\n\nThe behaviour is independent of the endianness of the host machine.",
      "default": "no"
    },
    "rpc server dynamic port range": {
      "md": "This parameter tells the RPC server which port range it is allowed to use to create a listening socket for LSA, SAM, Netlogon and others without wellknown tcp ports. The first value is the lowest number of the port range and the second the highest.\n\nThis applies to RPC servers in all server roles.",
      "default": "49152-65535"
    },
    "rpc server port": {
      "md": "Specifies which port the server should listen on for DCE/RPC over TCP/IP traffic.\n\nThis controls the default port for all protocols, except for NETLOGON.\n\nIf unset, the first available port from [rpc server dynamic port range](smb.conf.5.html#RPCSERVERDYNAMICPORTRANGE) is used, e.g. 49152.\n\nThe NETLOGON server will use the next available port, e.g. 49153. To change this port use (eg) rpc server port:netlogon = 4000.\n\nFurthermore, all RPC servers can have the port they use specified independenty, with (for example) rpc server port:drsuapi = 5000.\n\nThis option applies currently only when [samba(8)](samba.8.html) runs as an active directory domain controller.\n\nThe default value 0 causes Samba to select the first available port from [rpc server dynamic port range](smb.conf.5.html#RPCSERVERDYNAMICPORTRANGE).",
      "default": "0"
    },
    "rpc start on demand helpers": {
      "md": "This global parameter determines if `samba-dcerpcd` should be started on demand to service named pipe (np) DCE-RPC requests from `smbd` or `winbindd`. This is the normal case where no startup scripts have been modified to start `samba-dcerpcd` as a daemon.\n\nIf `samba-dcerpcd` is started as a daemon or via a system service manager such as systemd, this parameter MUST be set to \"no\", otherwise `samba-dcerpcd` will fail to start.",
      "default": "yes"
    },
    "samba kcc command": {
      "md": "This option specifies the path to the Samba KCC command. This script is used for replication topology replication.\n\nIt should not be necessary to modify this option except for testing purposes or if the `samba_kcc` was installed in a non-default location.",
      "default": "${prefix}/sbin/samba_kcc"
    },
    "security": {
      "md": "This option affects how clients respond to Samba and is one of the most important settings in the `smb.conf` file.\n\nThe default is `security = user`, as this is the most common setting, used for a standalone file server or a DC.\n\nThe alternatives are `security = ads` or `security = domain` , which support joining Samba to a Windows domain\n\nYou should use `security = user` and [map to guest](smb.conf.5.html#MAPTOGUEST) if you want to mainly setup shares without a password (guest shares). This is commonly used for a shared printer server.\n\nThe different settings will now be explained.\n\n_SECURITY = AUTO_\n\nThis is the default security setting in Samba, and causes Samba to consult the [server role](smb.conf.5.html#SERVERROLE) parameter (if set) to determine the security mode.\n\n_SECURITY = USER_\n\nIf [server role](smb.conf.5.html#SERVERROLE) is not specified, this is the default security setting in Samba. With user-level security a client must first \"log-on\" with a valid username and password (which can be mapped using the [username map](smb.conf.5.html#USERNAMEMAP) parameter). Encrypted passwords (see the [encrypted passwords](smb.conf.5.html#ENCRYPTEDPASSWORDS) parameter) can also be used in this security mode. Parameters such as [user](smb.conf.5.html#USER) and [guest only](smb.conf.5.html#GUESTONLY) if set are then applied and may change the UNIX user to use on this connection, but only after the user has been successfully authenticated.\n\n_Note_ that the name of the resource being requested is _not_ sent to the server until after the server has successfully authenticated the client. This is why guest shares don't work in user level security without allowing the server to automatically map unknown users into the [guest account](smb.conf.5.html#GUESTACCOUNT). See the [map to guest](smb.conf.5.html#MAPTOGUEST) parameter for details on doing this.\n\n_SECURITY = DOMAIN_\n\nThis mode will only work correctly if [net(8)](net.8.html) has been used to add this machine into a Windows NT Domain. It expects the [encrypted passwords](smb.conf.5.html#ENCRYPTEDPASSWORDS) parameter to be set to `yes`. In this mode Samba will try to validate the username/password by passing it to a Windows NT Primary or Backup Domain Controller, in exactly the same way that a Windows NT Server would do.\n\n_Note_ that a valid UNIX user must still exist as well as the account on the Domain Controller to allow Samba to have a valid UNIX account to map file access to.\n\n_Note_ that from the client's point of view `security = domain` is the same as `security = user`. It only affects how the server deals with the authentication, it does not in any way affect what the client sees.\n\n_Note_ that the name of the resource being requested is _not_ sent to the server until after the server has successfully authenticated the client. This is why guest shares don't work in user level security without allowing the server to automatically map unknown users into the [guest account](smb.conf.5.html#GUESTACCOUNT). See the [map to guest](smb.conf.5.html#MAPTOGUEST) parameter for details on doing this.\n\nSee also the [password server](smb.conf.5.html#PASSWORDSERVER) parameter and the [encrypted passwords](smb.conf.5.html#ENCRYPTEDPASSWORDS) parameter.\n\n_SECURITY = ADS_\n\nIn this mode, Samba will act as a domain member in an ADS realm. To operate in this mode, the machine running Samba will need to have Kerberos installed and configured and Samba will need to be joined to the ADS realm using the net utility.\n\nNote that this mode does NOT make Samba operate as a Active Directory Domain Controller.\n\nNote that this forces [require strong key = yes](smb.conf.5.html#REQUIRESTRONGKEY) and [client schannel = yes](smb.conf.5.html#CLIENTSCHANNEL) for the primary domain.\n\nRead the chapter about Domain Membership in the HOWTO for details.",
      "default": "AUTO"
    },
    "server max protocol": {
      "md": "The value of the parameter (a string) is the highest protocol level that will be supported by the server.\n\nPossible values are :\n\n*   `LANMAN1`: First _modern_ version of the protocol. Long filename support.\n    \n*   `LANMAN2`: Updates to Lanman1 protocol.\n    \n*   `NT1`: Current up to date version of the protocol. Used by Windows NT. Known as CIFS.\n    \n*   `SMB2`: Re-implementation of the SMB protocol. Used by Windows Vista and later versions of Windows. SMB2 has sub protocols available.\n    \n    *   `SMB2_02`: The earliest SMB2 version.\n        \n    *   `SMB2_10`: Windows 7 SMB2 version.\n        \n    \n    By default SMB2 selects the SMB2\\_10 variant.\n    \n*   `SMB3`: The same as SMB2. Used by Windows 8. SMB3 has sub protocols available.\n    \n    *   `SMB3_00`: Windows 8 SMB3 version.\n        \n    *   `SMB3_02`: Windows 8.1 SMB3 version.\n        \n    *   `SMB3_11`: Windows 10 SMB3 version.\n        \n    \n    By default SMB3 selects the SMB3\\_11 variant.\n    \n\nNormally this option should not be set as the automatic negotiation phase in the SMB protocol takes care of choosing the appropriate protocol.",
      "default": "SMB3"
    },
    "server min protocol": {
      "md": "This setting controls the minimum protocol version that the server will allow the client to use.\n\nNormally this option should not be set as the automatic negotiation phase in the SMB protocol takes care of choosing the appropriate protocol unless you have legacy clients which are SMB1 capable only.\n\nSee\n\nRelated command: [server max protocol](smb.conf.5.html#SERVERMAXPROTOCOL)\n\nfor a full list of available protocols.",
      "default": "SMB2_02"
    },
    "server multi channel support": {
      "md": "This boolean parameter controls whether [smbd(8)](smbd.8.html) will support SMB3 multi-channel.\n\nThis parameter was added with version 4.4.\n\nNote that this feature was still considered experimental up to 4.14.\n\nDue to dependencies to kernel APIs of Linux or FreeBSD, it's only possible to use this feature on Linux and FreeBSD for now. For testing this restriction can be overwritten by specifying `force:server multi channel support=yes` in addition.\n\nThis option is enabled by default starting with to 4.15 (on Linux and FreeBSD).",
      "default": "yes"
    },
    "server role": {
      "md": "This option determines the basic operating mode of a Samba server and is one of the most important settings in the `smb.conf` file.\n\nThe default is `server role = auto`, as causes Samba to operate according to the [security](smb.conf.5.html#SECURITY) setting, or if not specified as a simple file server that is not connected to any domain.\n\nThe alternatives are `server role = standalone` or `server role = member server` , which support joining Samba to a Windows domain, along with `server role = domain controller`, which run Samba as a Windows domain controller.\n\nYou should use `server role = standalone` and [map to guest](smb.conf.5.html#MAPTOGUEST) if you want to mainly setup shares without a password (guest shares). This is commonly used for a shared printer server.\n\n_SERVER ROLE = AUTO_\n\nThis is the default server role in Samba, and causes Samba to consult the [security](smb.conf.5.html#SECURITY) parameter (if set) to determine the server role, giving compatible behaviours to previous Samba versions.\n\n_SERVER ROLE = STANDALONE_\n\nIf [security](smb.conf.5.html#SECURITY) is also not specified, this is the default security setting in Samba. In standalone operation, a client must first \"log-on\" with a valid username and password (which can be mapped using the [username map](smb.conf.5.html#USERNAMEMAP) parameter) stored on this machine. Encrypted passwords (see the [encrypted passwords](smb.conf.5.html#ENCRYPTEDPASSWORDS) parameter) are by default used in this security mode. Parameters such as [user](smb.conf.5.html#USER) and [guest only](smb.conf.5.html#GUESTONLY) if set are then applied and may change the UNIX user to use on this connection, but only after the user has been successfully authenticated.\n\n_SERVER ROLE = MEMBER SERVER_\n\nThis mode will only work correctly if [net(8)](net.8.html) has been used to add this machine into a Windows Domain. It expects the [encrypted passwords](smb.conf.5.html#ENCRYPTEDPASSWORDS) parameter to be set to `yes`. In this mode Samba will try to validate the username/password by passing it to a Windows or Samba Domain Controller, in exactly the same way that a Windows Server would do.\n\n_Note_ that a valid UNIX user must still exist as well as the account on the Domain Controller to allow Samba to have a valid UNIX account to map file access to. Winbind can provide this.\n\n_SERVER ROLE = CLASSIC PRIMARY DOMAIN CONTROLLER_\n\nThis mode of operation runs a classic Samba primary domain controller, providing domain logon services to Windows and Samba clients of an NT4-like domain. Clients must be joined to the domain to create a secure, trusted path across the network. There must be only one PDC per NetBIOS scope (typcially a broadcast network or clients served by a single WINS server).\n\n_SERVER ROLE = CLASSIC BACKUP DOMAIN CONTROLLER_\n\nThis mode of operation runs a classic Samba backup domain controller, providing domain logon services to Windows and Samba clients of an NT4-like domain. As a BDC, this allows multiple Samba servers to provide redundant logon services to a single NetBIOS scope.\n\n_SERVER ROLE = ACTIVE DIRECTORY DOMAIN CONTROLLER_\n\nThis mode of operation runs Samba as an active directory domain controller, providing domain logon services to Windows and Samba clients of the domain. This role requires special configuration, see the [Samba4 HOWTO](http://wiki.samba.org/index.php/Samba4/HOWTO)\n\n_SERVER ROLE = IPA DOMAIN CONTROLLER_\n\nThis mode of operation runs Samba in a hybrid mode for IPA domain controller, providing forest trust to Active Directory. This role requires special configuration performed by IPA installers and should not be used manually by any administrator.",
      "default": "AUTO"
    },
    "server schannel": {
      "md": "This option is deprecated and will be removed in future, as it is a security problem if not set to \"yes\" (which will be the hardcoded behavior in future).\n\nSamba will complain in the log files at log level 0, about the security problem if the option is not set to \"yes\".\n\nSee CVE-2020-1472(ZeroLogon) https://bugzilla.samba.org/show\\_bug.cgi?id=14497\n\nIf you still have legacy domain members use the [server require schannel:COMPUTERACCOUNT](smb.conf.5.html#SERVERREQUIRESCHANNEL:COMPUTERACCOUNT) option.\n\nThis option yields precedence to the [server require schannel:COMPUTERACCOUNT](smb.conf.5.html#SERVERREQUIRESCHANNEL:COMPUTERACCOUNT) option.",
      "default": "yes"
    },
    "server require schannel:COMPUTERACCOUNT": {
      "md": "If you still have legacy domain members, which required \"server schannel = auto\" before, it is possible to specify explicit exception per computer account by using 'server require schannel:COMPUTERACCOUNT = no' as option. Note that COMPUTERACCOUNT has to be the sAMAccountName value of the computer account (including the trailing '$' sign).\n\nSamba will complain in the log files at log level 0, about the security problem if the option is not set to \"no\", but the related computer is actually using the netlogon secure channel (schannel) feature.\n\nSamba will warn in the log files at log level 5, if a setting is still needed for the specified computer account.\n\nSee CVE-2020-1472(ZeroLogon) https://bugzilla.samba.org/show\\_bug.cgi?id=14497\n\nThis option takes precedence to the [server schannel](smb.conf.5.html#SERVERSCHANNEL) option.\n\n```\n\tserver require schannel:LEGACYCOMPUTER1$ = no\n\tserver require schannel:NASBOX$ = no\n\tserver require schannel:LEGACYCOMPUTER2$ = no\n    \n````\n\n_No default_"
    },
    "server services": {
      "md": "This option contains the services that the Samba daemon will run.\n\nAn entry in the `smb.conf` file can either override the previous value completely or entries can be removed from or added to it by prefixing them with `+` or `-`.",
      "default": "s3fs, rpc, nbt, wrepl, ldap, cldap, kdc, drepl, winbindd, ntp_signd, kcc, dnsupdate, dns"
    },
    "server signing": {
      "md": "This controls whether the client is allowed or required to use SMB1 and SMB2 signing. Possible values are _default_, _auto_, _mandatory_ and _disabled_.\n\nBy default, and when smb signing is set to _default_, smb signing is required when [server role](smb.conf.5.html#SERVERROLE) is _active directory domain controller_ and disabled otherwise.\n\nWhen set to auto, SMB1 signing is offered, but not enforced. When set to mandatory, SMB1 signing is required and if set to disabled, SMB signing is not offered either.\n\nFor the SMB2 protocol, by design, signing cannot be disabled. In the case where SMB2 is negotiated, if this parameter is set to _disabled_, it will be treated as _auto_. Setting it to _mandatory_ will still require SMB2 clients to use signing.",
      "default": "default"
    },
    "server smb3 encryption algorithms": {
      "md": "This parameter specifies the availability and order of encryption algorithms which are available for negotiation in the SMB3\\_11 dialect.\n\nIt is also possible to remove individual algorithms from the default list, by prefixing them with '-'. This can avoid having to specify a hardcoded list.\n\nNote: that the removal of AES-128-CCM from the list will result in SMB3\\_00 and SMB3\\_02 being unavailable, as it is the default and only available algorithm for these dialects.",
      "default": "AES-128-GCM, AES-128-CCM, AES-256-GCM, AES-256-CCM"
    },
    "server smb3 signing algorithms": {
      "md": "This parameter specifies the availability and order of signing algorithms which are available for negotiation in the SMB3\\_11 dialect.\n\nIt is also possible to remove individual algorithms from the default list, by prefixing them with '-'. This can avoid having to specify a hardcoded list.\n\nNote: that the removal of AES-128-CMAC from the list will result in SMB3\\_00 and SMB3\\_02 being unavailable, and the removal of HMAC-SHA256 will result in SMB2\\_02 and SMB2\\_10 being unavailable, as these are the default and only available algorithms for these dialects.",
      "default": "AES-128-GMAC, AES-128-CMAC, HMAC-SHA256"
    },
    "server string": {
      "md": "This controls what string will show up in the printer comment box in print manager and next to the IPC connection in `net view`. It can be any string that you wish to show to your users.\n\nIt also sets what will appear in browse lists next to the machine name.\n\nA _`%v`_ will be replaced with the Samba version number.\n\nA _`%h`_ will be replaced with the hostname.",
      "default": "Samba %v"
    },
    "set primary group script": {
      "md": "Thanks to the Posix subsystem in NT a Windows User has a primary group in addition to the auxiliary groups. This script sets the primary group in the unix user database when an administrator sets the primary group from the windows user manager or when fetching a SAM with `net rpc vampire`. _`%u`_ will be replaced with the user whose primary group is to be set. _`%g`_ will be replaced with the group to set.",
      "default": ""
    },
    "set quota command": {
      "md": "The `set quota command` should only be used whenever there is no operating system API available from the OS that samba can use.\n\nThis option is only available if Samba was compiled with quota support.\n\nThis parameter should specify the path to a script that can set quota for the specified arguments.\n\nThe specified script should take the following arguments:\n\n*   1 - path to where the quota needs to be set. This needs to be interpreted relative to the current working directory that the script may also check for.\n    \n*   2 - quota type\n    \n    *   1 - user quotas\n        \n    *   2 - user default quotas (uid = -1)\n        \n    *   3 - group quotas\n        \n    *   4 - group default quotas (gid = -1)\n        \n    \n*   3 - id (uid for user, gid for group, -1 if N/A)\n    \n*   4 - quota state (0 = disable, 1 = enable, 2 = enable and enforce)\n    \n*   5 - block softlimit\n    \n*   6 - block hardlimit\n    \n*   7 - inode softlimit\n    \n*   8 - inode hardlimit\n    \n*   9(optional) - block size, defaults to 1024\n    \n\nThe script should output at least one line of data on success. And nothing on failure.",
      "default": ""
    },
    "share:fake_fscaps": {
      "md": "This is needed to support some special application that makes QFSINFO calls to check whether we set the SPARSE\\_FILES bit (0x40). If this bit is not set that particular application refuses to work against Samba. With [share:fake\\_fscaps = 64](smb.conf.5.html#SHARE:FAKE_FSCAPS) the SPARSE\\_FILES file system capability flag is set. Use other decimal values to specify the bitmask you need to fake.",
      "default": "0"
    },
    "show add printer wizard": {
      "md": "With the introduction of MS-RPC based printing support for Windows NT/2000 client in Samba 2.2, a \"Printers...\" folder will appear on Samba hosts in the share listing. Normally this folder will contain an icon for the MS Add Printer Wizard (APW). However, it is possible to disable this feature regardless of the level of privilege of the connected user.\n\nUnder normal circumstances, the Windows NT/2000 client will open a handle on the printer server with OpenPrinterEx() asking for Administrator privileges. If the user does not have administrative access on the print server (i.e is not root or has granted the SePrintOperatorPrivilege), the OpenPrinterEx() call fails and the client makes another open call with a request for a lower privilege level. This should succeed, however the APW icon will not be displayed.\n\nDisabling the _`show add printer wizard`_ parameter will always cause the OpenPrinterEx() on the server to fail. Thus the APW icon will never be displayed.\n\n> \n> \n> ### Note\n> \n> This does not prevent the same user from having administrative privilege on an individual printer.\n> \n>",
      "default": "yes"
    },
    "shutdown script": {
      "md": "This a full path name to a script called by [smbd(8)](smbd.8.html) that should start a shutdown procedure.\n\nIf the connected user possesses the `SeRemoteShutdownPrivilege`, right, this command will be run as root.\n\nThe %z %t %r %f variables are expanded as follows:\n\n*   _`%z`_ will be substituted with the shutdown message sent to the server.\n    \n*   _`%t`_ will be substituted with the number of seconds to wait before effectively starting the shutdown procedure.\n    \n*   _`%r`_ will be substituted with the switch _\\-r_. It means reboot after shutdown for NT.\n    \n*   _`%f`_ will be substituted with the switch _\\-f_. It means force the shutdown even if applications do not respond for NT.\n    \n\nShutdown script example:\n\n```\n#!/bin/bash\n\ntime=$2\nlet time=\"${time} / 60\"\nlet time=\"${time} + 1\"\n\n/sbin/shutdown $3 $4 +$time $1 &\n\n\n````\n\nShutdown does not return so we need to launch it in background.",
      "default": ""
    },
    "smb1 unix extensions": {
      "md": "This boolean parameter controls whether Samba implements the SMB1/CIFS UNIX extensions, as defined by HP. These extensions enable Samba to better serve UNIX SMB1/CIFS clients by supporting features such as symbolic links, hard links, etc... These extensions require a similarly enabled client, and are of no current use to Windows clients.\n\nNote if this parameter is turned on, the [wide links](smb.conf.5.html#WIDELINKS) parameter will automatically be disabled.\n\nSee the parameter [allow insecure wide links](smb.conf.5.html#ALLOWINSECUREWIDELINKS) if you wish to change this coupling between the two parameters.",
      "default": "yes"
    },
    "smb2 disable lock sequence checking": {
      "md": "This boolean parameter controls whether [smbd(8)](smbd.8.html) will disable lock sequence checking even for multi-channel connections as well as durable handles.\n\nThe \\[MS-SMB2\\] specification (under 3.3.5.14 Receiving an SMB2 LOCK Request) documents that a server should do lock sequence if Open.IsResilient or Open.IsDurable or Open.IsPersistent is TRUE or if Connection.Dialect belongs to the SMB 3.x dialect family and Connection.ServerCapabilities includes SMB2\\_GLOBAL\\_CAP\\_MULTI\\_CHANNEL.\n\nBut Windows Server (at least up to v2004) only does these checks for the Open.IsResilient and Open.IsPersistent. That means they do not implement the behavior specified in \\[MS-SMB2\\].\n\nBy default Samba behaves according to the specification and implements lock sequence checking when multi-channel is used.\n\nWarning: Only enable this option if existing clients can't handle lock sequence checking for handles without Open.IsResilient and Open.IsPersistent. And it turns out that the Windows Server behavior is required.\n\nNote: it's likely that this option will be removed again if future Windows versions change their behavior.\n\nNote: Samba does not implement Open.IsResilient and Open.IsPersistent yet.",
      "default": "no"
    },
    "smb2 disable oplock break retry": {
      "md": "This boolean parameter controls whether [smbd(8)](smbd.8.html) will trigger smb2 oplock break notification retries when using [server multi channel support = yes](smb.conf.5.html#SERVERMULTICHANNELSUPPORT).\n\nThe \\[MS-SMB2\\] specification documents that a server should send smb2 oplock break notification retries on all available channel to the given client.\n\nBut Windows Server versions (at least up to 2019) do not send smb2 oplock break notification retries on channel failures. That means they do not implement the behavior specified in \\[MS-SMB2\\].\n\nBy default Samba behaves according to the specification and send smb2 oplock break notification retries.\n\nWarning: Only enable this option if existing clients can't handle possible retries and it turns out that the Windows Server behavior is required.\n\nNote: it's likely that this option gets removed again if future Windows versions change their behavior.\n\nNote: this only applies to oplocks and not SMB2 leases.",
      "default": "no"
    },
    "smb2 leases": {
      "md": "This boolean option tells `smbd` whether to globally negotiate SMB2 leases on file open requests. Leasing is an SMB2-only feature which allows clients to aggressively cache files locally above and beyond the caching allowed by SMB1 oplocks.\n\nThis is only available with [oplocks = yes](smb.conf.5.html#OPLOCKS) and [kernel oplocks = no](smb.conf.5.html#KERNELOPLOCKS).\n\nNote that the write cache won't be used for file handles with a smb2 write lease.",
      "default": "yes"
    },
    "smb2 max credits": {
      "md": "This option controls the maximum number of outstanding simultaneous SMB2 operations that Samba tells the client it will allow. This is similar to the [max mux](smb.conf.5.html#MAXMUX) parameter for SMB1. You should never need to set this parameter.\n\nThe default is 8192 credits, which is the same as a Windows 2008R2 SMB2 server.",
      "default": "8192"
    },
    "smb2 max read": {
      "md": "This option specifies the protocol value that [smbd(8)](smbd.8.html) will return to a client, informing the client of the largest size that may be returned by a single SMB2 read call.\n\nThe maximum is 8388608 bytes (8MiB), which is the same as a Windows Server 2012 r2.\n\nPlease note that the default is 8MiB, but it's limit is based on the smb2 dialect (64KiB for SMB == 2.0, 8MiB for SMB >= 2.1 with LargeMTU). Large MTU is not supported over NBT (tcp port 139).",
      "default": "8388608"
    },
    "smb2 max trans": {
      "md": "This option specifies the protocol value that [smbd(8)](smbd.8.html) will return to a client, informing the client of the largest size of buffer that may be used in querying file meta-data via QUERY\\_INFO and related SMB2 calls.\n\nThe maximum is 8388608 bytes (8MiB), which is the same as a Windows Server 2012 r2.\n\nPlease note that the default is 8MiB, but it's limit is based on the smb2 dialect (64KiB for SMB == 2.0, 1MiB for SMB >= 2.1 with LargeMTU). Large MTU is not supported over NBT (tcp port 139).",
      "default": "8388608"
    },
    "smb2 max write": {
      "md": "This option specifies the protocol value that [smbd(8)](smbd.8.html) will return to a client, informing the client of the largest size that may be sent to the server by a single SMB2 write call.\n\nThe maximum is 8388608 bytes (8MiB), which is the same as a Windows Server 2012 r2.\n\nPlease note that the default is 8MiB, but it's limit is based on the smb2 dialect (64KiB for SMB == 2.0, 8MiB for SMB => 2.1 with LargeMTU). Large MTU is not supported over NBT (tcp port 139).",
      "default": "8388608"
    },
    "smb3 unix extensions": {
      "md": "Incomplete SMB 3.11 Unix Extensions. This is only available if Samba is compiled in DEVELOPER mode.",
      "default": "no"
    },
    "smbd profiling level": {
      "md": "This parameter allows the administrator to enable profiling support.\n\nPossible values are `off`, `count` and `on`.",
      "default": "off"
    },
    "smb passwd file": {
      "md": "This option sets the path to the encrypted smbpasswd file. By default the path to the smbpasswd file is compiled into Samba.\n\nAn example of use is:\n\n```\nsmb passwd file = /etc/samba/smbpasswd\n\n````",
      "default": "${prefix}/private/smbpasswd"
    },
    "smb ports": {
      "md": "Specifies which ports the server should listen on for SMB traffic.",
      "default": "445 139"
    },
    "socket options": {
      "md": "> \n> \n> <span style=\"font-size: 1.25em; color: #f7b011;\">Warning</span>\n> \n> Modern server operating systems are tuned for high network performance in the majority of situations; when you set socket options you are overriding those settings. Linux in particular has an auto-tuning mechanism for buffer sizes that will be disabled if you specify a socket buffer size. This can potentially cripple your TCP/IP stack.\n> \n> Getting the socket options correct can make a big difference to your performance, but getting them wrong can degrade it by just as much. As with any other low level setting, if you must make changes to it, make small changes and _test_ the effect before making any large changes.\n> \n> \n\nThis option allows you to set socket options to be used when talking with the client.\n\nSocket options are controls on the networking layer of the operating systems which allow the connection to be tuned.\n\nThis option will typically be used to tune your Samba server for optimal performance for your local network. There is no way that Samba can know what the optimal parameters are for your net, so you must experiment and choose them yourself. We strongly suggest you read the appropriate documentation for your operating system first (perhaps `man setsockopt` will help).\n\nYou may find that on some systems Samba will say \"Unknown socket option\" when you supply an option. This means you either incorrectly typed it or you need to add an include file to includes.h for your OS. If the latter is the case please send the patch to [samba-technical@lists.samba.org](mailto:samba-technical@lists.samba.org).\n\nAny of the supported socket options may be combined in any way you like, as long as your OS allows it.\n\nThis is the list of socket options currently settable using this option:\n\n*   SO\\_KEEPALIVE\n    \n*   SO\\_REUSEADDR\n    \n*   SO\\_BROADCAST\n    \n*   TCP\\_NODELAY\n    \n*   TCP\\_KEEPCNT \\*\n    \n*   TCP\\_KEEPIDLE \\*\n    \n*   TCP\\_KEEPINTVL \\*\n    \n*   IPTOS\\_LOWDELAY\n    \n*   IPTOS\\_THROUGHPUT\n    \n*   SO\\_REUSEPORT\n    \n*   SO\\_SNDBUF \\*\n    \n*   SO\\_RCVBUF \\*\n    \n*   SO\\_SNDLOWAT \\*\n    \n*   SO\\_RCVLOWAT \\*\n    \n*   SO\\_SNDTIMEO \\*\n    \n*   SO\\_RCVTIMEO \\*\n    \n*   TCP\\_FASTACK \\*\n    \n*   TCP\\_QUICKACK\n    \n*   TCP\\_NODELAYACK\n    \n*   TCP\\_KEEPALIVE\\_THRESHOLD \\*\n    \n*   TCP\\_KEEPALIVE\\_ABORT\\_THRESHOLD \\*\n    \n*   TCP\\_DEFER\\_ACCEPT \\*\n    \n*   TCP\\_USER\\_TIMEOUT \\*\n    \n\nThose marked with a _'\\*'_ take an integer argument. The others can optionally take a 1 or 0 argument to enable or disable the option, by default they will be enabled if you don't specify 1 or 0.\n\nTo specify an argument use the syntax SOME\\_OPTION = VALUE for example `SO_SNDBUF = 8192`. Note that you must not have any spaces before or after the = sign.\n\nIf you are on a local network then a sensible option might be:\n\n`socket options = IPTOS_LOWDELAY`\n\nIf you have a local network then you could try:\n\n`socket options = IPTOS_LOWDELAY TCP_NODELAY`\n\nIf you are on a wide area network then perhaps try setting IPTOS\\_THROUGHPUT.\n\nNote that several of the options may cause your Samba server to fail completely. Use these options with caution!",
      "default": "TCP_NODELAY"
    },
    "spn update command": {
      "md": "This option sets the command that for updating servicePrincipalName names from `spn_update_list`.",
      "default": "${prefix}/sbin/samba_spnupdate"
    },
    "spoolss: architecture": {
      "md": "Windows spoolss print clients only allow association of server-side drivers with printers when the driver architecture matches the advertised print server architecture. Samba's spoolss print server architecture can be changed using this parameter.",
      "default": "Windows x64"
    },
    "spoolss: os_major": {
      "md": "Windows might require a new os version number. This option allows to modify the build number. The complete default version number is: 5.0.2195 (Windows 2000). The example is 6.1.7601 (Windows 2008 R2).",
      "default": "5"
    },
    "spoolss: os_minor": {
      "md": "Windows might require a new os version number. This option allows to modify the build number. The complete default version number is: 5.0.2195 (Windows 2000). The example is 6.1.7601 (Windows 2008 R2).",
      "default": "0"
    },
    "spoolss: os_build": {
      "md": "Windows might require a new os version number. This option allows to modify the build number. The complete default version number is: 5.0.2195 (Windows 2000). The example is 6.1.7601 (Windows 2008 R2).",
      "default": "2195"
    },
    "spoolss_client: os_major": {
      "md": "Windows might require a new os version number. This option allows to modify the build number. The complete default version number is: 6.1.7007 (Windows 7 and Windows Server 2008 R2).",
      "default": "6"
    },
    "spoolss_client: os_minor": {
      "md": "Windows might require a new os version number. This option allows to modify the build number. The complete default version number is: 6.1.7007 (Windows 7 and Windows Server 2008 R2).",
      "default": "1"
    },
    "spoolss_client: os_build": {
      "md": "Windows might require a new os version number. This option allows to modify the build number. The complete default version number is: 6.1.7007 (Windows 7 and Windows Server 2008 R2).",
      "default": "7007"
    },
    "stat cache": {
      "md": "This parameter determines if [smbd(8)](smbd.8.html) will use a cache in order to speed up case insensitive name mappings. You should never need to change this parameter.",
      "default": "yes"
    },
    "state directory": {
      "md": "Usually, most of the TDB files are stored in the _`lock directory`_. Since Samba 3.4.0, it is possible to differentiate between TDB files with persistent data and TDB files with non-persistent data using the _`state directory`_ and the _`cache directory`_ options.\n\nThis option specifies the directory where TDB files containing important persistent data will be stored.",
      "default": "${prefix}/var/locks"
    },
    "svcctl list": {
      "md": "This option defines a list of init scripts that smbd will use for starting and stopping Unix services via the Win32 ServiceControl API. This allows Windows administrators to utilize the MS Management Console plug-ins to manage a Unix server running Samba.\n\nThe administrator must create a directory name `svcctl` in Samba's $(libdir) and create symbolic links to the init scripts in `/etc/init.d/`. The name of the links must match the names given as part of the _`svcctl list`_.",
      "default": ""
    },
    "syslog only": {
      "md": "If this parameter is set then Samba debug messages are logged into the system syslog only, and not to the debug log files. There still will be some logging to log.\\[sn\\]mbd even if _syslog only_ is enabled.\n\nThe [logging](smb.conf.5.html#LOGGING) parameter should be used instead. When [logging](smb.conf.5.html#LOGGING) is set, it overrides the [syslog only](smb.conf.5.html#SYSLOGONLY) parameter.",
      "default": "no"
    },
    "syslog": {
      "md": "This parameter maps how Samba debug messages are logged onto the system syslog logging levels. Samba debug level zero maps onto syslog `LOG_ERR`, debug level one maps onto `LOG_WARNING`, debug level two maps onto `LOG_NOTICE`, debug level three maps onto LOG\\_INFO. All higher levels are mapped to `LOG_DEBUG`.\n\nThis parameter sets the threshold for sending messages to syslog. Only messages with debug level less than this value will be sent to syslog. There still will be some logging to log.\\[sn\\]mbd even if _syslog only_ is enabled.\n\nThe [logging](smb.conf.5.html#LOGGING) parameter should be used instead. When [logging](smb.conf.5.html#LOGGING) is set, it overrides the [syslog](smb.conf.5.html#SYSLOG) parameter.",
      "default": "1"
    },
    "template homedir": {
      "md": "When filling out the user information for a Windows NT user, the [winbindd(8)](winbindd.8.html) daemon uses this parameter to fill in the home directory for that user. If the string _`%D`_ is present it is substituted with the user's Windows NT domain name. If the string _`%U`_ is present it is substituted with the user's Windows NT user name.",
      "default": "/home/%D/%U"
    },
    "template shell": {
      "md": "When filling out the user information for a Windows NT user, the [winbindd(8)](winbindd.8.html) daemon uses this parameter to fill in the login shell for that user.",
      "default": "/bin/false"
    },
    "time server": {
      "md": "This parameter determines if [nmbd(8)](nmbd.8.html) advertises itself as a time server to Windows clients.",
      "default": "no"
    },
    "timestamp logs": {
      "md": "Samba debug log messages are timestamped by default. If you are running at a high [debug level](smb.conf.5.html#DEBUGLEVEL) these timestamps can be distracting. This boolean parameter allows timestamping to be turned off.",
      "default": "yes"
    },
    "tls cafile": {
      "md": "This option can be set to a file (PEM format) containing CA certificates of root CAs to trust to sign certificates or intermediate CA certificates.\n\nThis path is relative to [private dir](smb.conf.5.html#PRIVATEDIR) if the path does not start with a /.",
      "default": "tls/ca.pem"
    },
    "tls certfile": {
      "md": "This option can be set to a file (PEM format) containing the RSA certificate.\n\nThis path is relative to [private dir](smb.conf.5.html#PRIVATEDIR) if the path does not start with a /.",
      "default": "tls/cert.pem"
    },
    "tls crlfile": {
      "md": "This option can be set to a file containing a certificate revocation list (CRL).\n\nThis path is relative to [private dir](smb.conf.5.html#PRIVATEDIR) if the path does not start with a /.",
      "default": ""
    },
    "tls dh params file": {
      "md": "This option can be set to a file with Diffie-Hellman parameters which will be used with DH ciphers.\n\nThis path is relative to [private dir](smb.conf.5.html#PRIVATEDIR) if the path does not start with a /.",
      "default": ""
    },
    "tls enabled": {
      "md": "If this option is set to `yes`, then Samba will use TLS when possible in communication.",
      "default": "yes"
    },
    "tls keyfile": {
      "md": "This option can be set to a file (PEM format) containing the RSA private key. This file must be accessible without a pass-phrase, i.e. it must not be encrypted.\n\nThis path is relative to [private dir](smb.conf.5.html#PRIVATEDIR) if the path does not start with a /.",
      "default": "tls/key.pem"
    },
    "tls priority": {
      "md": "This option can be set to a string describing the TLS protocols to be supported in the parts of Samba that use GnuTLS, specifically the AD DC.\n\nThe string is appended to the default priority list of GnuTLS.\n\nThe valid options are described in the [GNUTLS Priority-Strings documentation at http://gnutls.org/manual/html\\_node/Priority-Strings.html](http://gnutls.org/manual/html_node/Priority-Strings.html)\n\nThe SSL3.0 protocol will be disabled.",
      "default": "NORMAL:-VERS-SSL3.0"
    },
    "tls verify peer": {
      "md": "This controls if and how strict the client will verify the peer's certificate and name. Possible values are (in increasing order): `no_check`, `ca_only`, `ca_and_name_if_available`, `ca_and_name` and `as_strict_as_possible`.\n\nWhen set to `no_check` the certificate is not verified at all, which allows trivial man in the middle attacks.\n\nWhen set to `ca_only` the certificate is verified to be signed from a ca specified in the [tls ca file](smb.conf.5.html#TLSCAFILE) option. Setting [tls ca file](smb.conf.5.html#TLSCAFILE) to a valid file is required. The certificate lifetime is also verified. If the [tls crl file](smb.conf.5.html#TLSCRLFILE) option is configured, the certificate is also verified against the ca crl.\n\nWhen set to `ca_and_name_if_available` all checks from `ca_only` are performed. In addition, the peer hostname is verified against the certificate's name, if it is provided by the application layer and not given as an ip address string.\n\nWhen set to `ca_and_name` all checks from `ca_and_name_if_available` are performed. In addition the peer hostname needs to be provided and even an ip address is checked against the certificate's name.\n\nWhen set to `as_strict_as_possible` all checks from `ca_and_name` are performed. In addition the [tls crl file](smb.conf.5.html#TLSCRLFILE) needs to be configured. Future versions of Samba may implement additional checks.",
      "default": "as_strict_as_possible"
    },
    "unicode": {
      "md": "Specifies whether the server and client should support unicode.\n\nIf this option is set to false, the use of ASCII will be forced.",
      "default": "yes"
    },
    "unix charset": {
      "md": "Specifies the charset the unix machine Samba runs on uses. Samba needs to know this in order to be able to convert text to the charsets other SMB clients use.\n\nThis is also the charset Samba will use when specifying arguments to scripts that it invokes.",
      "default": "UTF-8"
    },
    "unix password sync": {
      "md": "This boolean parameter controls whether Samba attempts to synchronize the UNIX password with the SMB password when the encrypted SMB password in the smbpasswd file is changed. If this is set to `yes` the program specified in the _`passwd program`_ parameter is called _AS ROOT_ - to allow the new UNIX password to be set without access to the old UNIX password (as the SMB password change code has no access to the old password cleartext, only the new).\n\nThis option has no effect if `samba` is running as an active directory domain controller, in that case have a look at the [password hash gpg key ids](smb.conf.5.html#PASSWORDHASHGPGKEYIDS) option and the `samba-tool user syncpasswords` command.",
      "default": "no"
    },
    "use mmap": {
      "md": "This global parameter determines if the tdb internals of Samba can depend on mmap working correctly on the running system. Samba requires a coherent mmap/read-write system memory cache. Currently only OpenBSD and HPUX do not have such a coherent cache, and on those platforms this parameter is overridden internally to be effeceively `no`. On all systems this parameter should be left alone. This parameter is provided to help the Samba developers track down problems with the tdb internal code.",
      "default": "yes"
    },
    "username level": {
      "md": "This option helps Samba to try and 'guess' at the real UNIX username, as many DOS clients send an all-uppercase username. By default Samba tries all lowercase, followed by the username with the first letter capitalized, and fails if the username is not found on the UNIX machine.\n\nIf this parameter is set to non-zero the behavior changes. This parameter is a number that specifies the number of uppercase combinations to try while trying to determine the UNIX user name. The higher the number the more combinations will be tried, but the slower the discovery of usernames will be. Use this parameter when you have strange usernames on your UNIX machine, such as `AstrangeUser` .\n\nThis parameter is needed only on UNIX systems that have case sensitive usernames.",
      "default": "0"
    },
    "username map cache time": {
      "md": "Mapping usernames with the [username map](smb.conf.5.html#USERNAMEMAP) or [username map script](smb.conf.5.html#USERNAMEMAPSCRIPT) features of Samba can be relatively expensive. During login of a user, the mapping is done several times. In particular, calling the [username map script](smb.conf.5.html#USERNAMEMAPSCRIPT) can slow down logins if external databases have to be queried from the script being called.\n\nThe parameter [username map cache time](smb.conf.5.html#USERNAMEMAPCACHETIME) controls a mapping cache. It specifies the number of seconds a mapping from the username map file or script is to be efficiently cached. The default of 0 means no caching is done.",
      "default": "0"
    },
    "username map script": {
      "md": "This script is a mutually exclusive alternative to the [username map](smb.conf.5.html#USERNAMEMAP) parameter. This parameter specifies an external program or script that must accept a single command line option (the username transmitted in the authentication request) and return a line on standard output (the name to which the account should mapped). In this way, it is possible to store username map tables in an LDAP directory services.",
      "default": ""
    },
    "username map": {
      "md": "This option allows you to specify a file containing a mapping of usernames from the clients to the server. This can be used for several purposes. The most common is to map usernames that users use on DOS or Windows machines to those that the UNIX box uses. The other is to map multiple users to a single username so that they can more easily share files.\n\nPlease note that for user mode security, the username map is applied prior to validating the user credentials. Domain member servers (domain or ads) apply the username map after the user has been successfully authenticated by the domain controller and require fully qualified entries in the map table (e.g. biddle = `DOMAIN\\foo`).\n\nThe map file is parsed line by line. Each line should contain a single UNIX username on the left then a '=' followed by a list of usernames on the right. The list of usernames on the right may contain names of the form @group in which case they will match any UNIX username in that group. The special client name '\\*' is a wildcard and matches any name. Each line of the map file may be up to 1023 characters long.\n\nThe file is processed on each line by taking the supplied username and comparing it with each username on the right hand side of the '=' signs. If the supplied name matches any of the names on the right hand side then it is replaced with the name on the left. Processing then continues with the next line.\n\nIf any line begins with a '#' or a ';' then it is ignored.\n\nIf any line begins with an '!' then the processing will stop after that line if a mapping was done by the line. Otherwise mapping continues with every line being processed. Using '!' is most useful when you have a wildcard mapping line later in the file.\n\nFor example to map from the name `admin` or `administrator` to the UNIX name `root` you would use:\n\n```\n`root = admin administrator`\n\n````\n\nOr to map anyone in the UNIX group `system` to the UNIX name `sys` you would use:\n\n```\n`sys = @system`\n\n````\n\nYou can have as many mappings as you like in a username map file.\n\nIf your system supports the NIS NETGROUP option then the netgroup database is checked before the `/etc/group` database for matching groups.\n\nYou can map Windows usernames that have spaces in them by using double quotes around the name. For example:\n\n```\n`tridge = \"Andrew Tridgell\"`\n\n````\n\nwould map the windows username \"Andrew Tridgell\" to the unix username \"tridge\".\n\nThe following example would map mary and fred to the unix user sys, and map the rest to guest. Note the use of the '!' to tell Samba to stop processing if it gets a match on that line:\n\n```\n!sys = mary fred\nguest = \\*\n\n````\n\nNote that the remapping is applied to all occurrences of usernames. Thus if you connect to \\\\\\\\server\\\\fred and `fred` is remapped to `mary` then you will actually be connecting to \\\\\\\\server\\\\mary and will need to supply a password suitable for `mary` not `fred`. The only exception to this is the username passed to a Domain Controller (if you have one). The DC will receive whatever username the client supplies without modification.\n\nAlso note that no reverse mapping is done. The main effect this has is with printing. Users who have been mapped may have trouble deleting print jobs as PrintManager under WfWg will think they don't own the print job.\n\nSamba versions prior to 3.0.8 would only support reading the fully qualified username (e.g.: `DOMAIN\\user`) from the username map when performing a kerberos login from a client. However, when looking up a map entry for a user authenticated by NTLM\\[SSP\\], only the login name would be used for matches. This resulted in inconsistent behavior sometimes even on the same server.\n\nThe following functionality is obeyed in version 3.0.8 and later:\n\nWhen performing local authentication, the username map is applied to the login name before attempting to authenticate the connection.\n\nWhen relying upon a external domain controller for validating authentication requests, smbd will apply the username map to the fully qualified username (i.e. `DOMAIN\\user`) only after the user has been successfully authenticated.\n\nAn example of use is:\n\n```\nusername map = /usr/local/samba/lib/users.map\n\n````",
      "default": "# no username map"
    },
    "usershare allow guests": {
      "md": "This parameter controls whether user defined shares are allowed to be accessed by non-authenticated users or not. It is the equivalent of allowing people who can create a share the option of setting _`guest ok = yes`_ in a share definition. Due to its security sensitive nature, the default is set to off.",
      "default": "no"
    },
    "usershare max shares": {
      "md": "This parameter specifies the number of user defined shares that are allowed to be created by users belonging to the group owning the usershare directory. If set to zero (the default) user defined shares are ignored.",
      "default": "0"
    },
    "usershare owner only": {
      "md": "This parameter controls whether the pathname exported by a user defined shares must be owned by the user creating the user defined share or not. If set to True (the default) then smbd checks that the directory path being shared is owned by the user who owns the usershare file defining this share and refuses to create the share if not. If set to False then no such check is performed and any directory path may be exported regardless of who owns it.",
      "default": "yes"
    },
    "usershare path": {
      "md": "This parameter specifies the absolute path of the directory on the filesystem used to store the user defined share definition files. This directory must be owned by root, and have no access for other, and be writable only by the group owner. In addition the \"sticky\" bit must also be set, restricting rename and delete to owners of a file (in the same way the /tmp directory is usually configured). Members of the group owner of this directory are the users allowed to create usershares.\n\nFor example, a valid usershare directory might be /usr/local/samba/lib/usershares, set up as follows.\n\n```\n\tls -ld /usr/local/samba/lib/usershares/\n\tdrwxrwx--T  2 root power\\_users 4096 2006-05-05 12:27 /usr/local/samba/lib/usershares/\n\t\n````\n\nIn this case, only members of the group \"power\\_users\" can create user defined shares.",
      "default": "${prefix}/var/locks/usershares"
    },
    "usershare prefix allow list": {
      "md": "This parameter specifies a list of absolute pathnames the root of which are allowed to be exported by user defined share definitions. If the pathname to be exported doesn't start with one of the strings in this list, the user defined share will not be allowed. This allows the Samba administrator to restrict the directories on the system that can be exported by user defined shares.\n\nIf there is a \"usershare prefix deny list\" and also a \"usershare prefix allow list\" the deny list is processed first, followed by the allow list, thus leading to the most restrictive interpretation.",
      "default": ""
    },
    "usershare prefix deny list": {
      "md": "This parameter specifies a list of absolute pathnames the root of which are NOT allowed to be exported by user defined share definitions. If the pathname exported starts with one of the strings in this list the user defined share will not be allowed. Any pathname not starting with one of these strings will be allowed to be exported as a usershare. This allows the Samba administrator to restrict the directories on the system that can be exported by user defined shares.\n\nIf there is a \"usershare prefix deny list\" and also a \"usershare prefix allow list\" the deny list is processed first, followed by the allow list, thus leading to the most restrictive interpretation.",
      "default": ""
    },
    "usershare template share": {
      "md": "User defined shares only have limited possible parameters such as path, guest ok, etc. This parameter allows usershares to \"cloned\" from an existing share. If \"usershare template share\" is set to the name of an existing share, then all usershares created have their defaults set from the parameters set on this share.\n\nThe target share may be set to be invalid for real file sharing by setting the parameter \"-valid = False\" on the template share definition. This causes it not to be seen as a real exported share but to be able to be used as a template for usershares.",
      "default": ""
    },
    "utmp directory": {
      "md": "This parameter is only available if Samba has been configured and compiled with the option `--with-utmp`. It specifies a directory pathname that is used to store the utmp or utmpx files (depending on the UNIX system) that record user connections to a Samba server. By default this is not set, meaning the system will use whatever utmp file the native system is set to use (usually `/var/run/utmp` on Linux).",
      "default": "# Determined automatically"
    },
    "utmp": {
      "md": "This boolean parameter is only available if Samba has been configured and compiled with the option `--with-utmp`. If set to `yes` then Samba will attempt to add utmp or utmpx records (depending on the UNIX system) whenever a connection is made to a Samba server. Sites may use this to record the user connecting to a Samba share.\n\nDue to the requirements of the utmp record, we are required to create a unique identifier for the incoming user. Enabling this option creates an n^2 algorithm to find this number. This may impede performance on large installations.",
      "default": "no"
    },
    "winbind cache time": {
      "md": "This parameter specifies the number of seconds the [winbindd(8)](winbindd.8.html) daemon will cache user and group information before querying a Windows NT server again.\n\nThis does not apply to authentication requests, these are always evaluated in real time unless the [winbind offline logon](smb.conf.5.html#WINBINDOFFLINELOGON) option has been enabled.",
      "default": "300"
    },
    "winbindd socket directory": {
      "md": "This setting controls the location of the winbind daemon's socket.\n\nExcept within automated test scripts, this should not be altered, as the client tools (nss\\_winbind etc) do not honour this parameter. Client tools must then be advised of the altered path with the WINBINDD\\_SOCKET\\_DIR environment variable.",
      "default": "${prefix}/var/run/winbindd"
    },
    "winbind enum groups": {
      "md": "On large installations using [winbindd(8)](winbindd.8.html) it may be necessary to suppress the enumeration of groups through the `setgrent()`, `getgrent()` and `endgrent()` group of system calls. If the _`winbind enum groups`_ parameter is `no`, calls to the `getgrent()` system call will not return any data.\n\n> \n> \n> <span style=\"font-size: 1.25em; color: #f7b011;\">Warning</span>\n> \n> Turning off group enumeration may cause some programs to behave oddly.\n> \n>",
      "default": "no"
    },
    "winbind enum users": {
      "md": "On large installations using [winbindd(8)](winbindd.8.html) it may be necessary to suppress the enumeration of users through the `setpwent()`, `getpwent()` and `endpwent()` group of system calls. If the _`winbind enum users`_ parameter is `no`, calls to the `getpwent` system call will not return any data.\n\n> \n> \n> <span style=\"font-size: 1.25em; color: #f7b011;\">Warning</span>\n> \n> Turning off user enumeration may cause some programs to behave oddly. For example, the finger program relies on having access to the full user list when searching for matching usernames.\n> \n>",
      "default": "no"
    },
    "winbind expand groups": {
      "md": "This option controls the maximum depth that winbindd will traverse when flattening nested group memberships of Windows domain groups. This is different from the [winbind nested groups](smb.conf.5.html#WINBINDNESTEDGROUPS) option which implements the Windows NT4 model of local group nesting. The \"winbind expand groups\" parameter specifically applies to the membership of domain groups.\n\nThis option also affects the return of non nested group memberships of Windows domain users. With the new default \"winbind expand groups = 0\" winbind does not query group memberships at all.\n\nBe aware that a high value for this parameter can result in system slowdown as the main parent winbindd daemon must perform the group unrolling and will be unable to answer incoming NSS or authentication requests during this time.\n\nThe default value was changed from 1 to 0 with Samba 4.2. Some broken applications (including some implementations of newgrp and sg) calculate the group memberships of users by traversing groups, such applications will require \"winbind expand groups = 1\". But the new default makes winbindd more reliable as it doesn't require SAMR access to domain controllers of trusted domains.",
      "default": "0"
    },
    "winbind:ignore domains": {
      "md": "Allows one to enter a list of trusted domains winbind should ignore (untrust). This can avoid the overhead of resources from attempting to login to DCs that should not be communicated with.",
      "default": ""
    },
    "winbind max clients": {
      "md": "This parameter specifies the maximum number of clients the [winbindd(8)](winbindd.8.html) daemon can connect with. The parameter is not a hard limit. The [winbindd(8)](winbindd.8.html) daemon configures itself to be able to accept at least that many connections, and if the limit is reached, an attempt is made to disconnect idle clients.",
      "default": "200"
    },
    "winbind max domain connections": {
      "md": "This parameter specifies the maximum number of simultaneous connections that the [winbindd(8)](winbindd.8.html) daemon should open to the domain controller of one domain. Setting this parameter to a value greater than 1 can improve scalability with many simultaneous winbind requests, some of which might be slow.\n\nNote that if [winbind offline logon](smb.conf.5.html#WINBINDOFFLINELOGON) is set to `Yes`, then only one DC connection is allowed per domain, regardless of this setting.",
      "default": "1"
    },
    "winbind nested groups": {
      "md": "If set to yes, this parameter activates the support for nested groups. Nested groups are also called local groups or aliases. They work like their counterparts in Windows: Nested groups are defined locally on any machine (they are shared between DC's through their SAM) and can contain users and global groups from any trusted SAM. To be able to use nested groups, you need to run nss\\_winbind.",
      "default": "yes"
    },
    "winbind normalize names": {
      "md": "This parameter controls whether winbindd will replace whitespace in user and group names with an underscore (\\_) character. For example, whether the name \"Space Kadet\" should be replaced with the string \"space\\_kadet\". Frequently Unix shell scripts will have difficulty with usernames contains whitespace due to the default field separator in the shell. If your domain possesses names containing the underscore character, this option may cause problems unless the name aliasing feature is supported by your nss\\_info plugin.\n\nThis feature also enables the name aliasing API which can be used to make domain user and group names to a non-qualified version. Please refer to the manpage for the configured idmap and nss\\_info plugin for the specifics on how to configure name aliasing for a specific configuration. Name aliasing takes precedence (and is mutually exclusive) over the whitespace replacement mechanism discussed previously.",
      "default": "no"
    },
    "winbind nss info": {
      "md": "This parameter is designed to control how Winbind retrieves Name Service Information to construct a user's home directory and login shell. Currently the following settings are available:\n\n*   _`template`_ - The default, using the parameters of _`template shell`_ and _`template homedir`_)\n    \n*   _`<sfu | sfu20 | rfc2307 >`_ - When Samba is running in security = ads and your Active Directory Domain Controller does support the Microsoft \"Services for Unix\" (SFU) LDAP schema, winbind can retrieve the login shell and the home directory attributes directly from your Directory Server. For SFU 3.0 or 3.5 simply choose \"sfu\", if you use SFU 2.0 please choose \"sfu20\".\n    \n    Note that for the idmap backend idmap\\_ad you need to configure those settings in the idmap configuration section. Make sure to consult the documentation of the idmap backend that you are using.",
      "default": "template"
    },
    "winbind offline logon": {
      "md": "This parameter is designed to control whether Winbind should allow one to login with the _`pam_winbind`_ module using Cached Credentials. If enabled, winbindd will store user credentials from successful logins encrypted in a local cache.",
      "default": "no"
    },
    "winbind reconnect delay": {
      "md": "This parameter specifies the number of seconds the [winbindd(8)](winbindd.8.html) daemon will wait between attempts to contact a Domain controller for a domain that is determined to be down or not contactable.",
      "default": "30"
    },
    "winbind refresh tickets": {
      "md": "This parameter is designed to control whether Winbind should refresh Kerberos Tickets retrieved using the _`pam_winbind`_ module.",
      "default": "no"
    },
    "winbind request timeout": {
      "md": "This parameter specifies the number of seconds the [winbindd(8)](winbindd.8.html) daemon will wait before disconnecting either a client connection with no outstanding requests (idle) or a client connection with a request that has remained outstanding (hung) for longer than this number of seconds.",
      "default": "60"
    },
    "winbind rpc only": {
      "md": "Setting this parameter to `yes` forces winbindd to use RPC instead of LDAP to retrieve information from Domain Controllers.",
      "default": "no"
    },
    "winbind scan trusted domains": {
      "md": "This option only takes effect when the [security](smb.conf.5.html#SECURITY) option is set to `domain` or `ads`. If it is set to yes, winbindd periodically tries to scan for new trusted domains and adds them to a global list inside of winbindd. The list can be extracted with `wbinfo --trusted-domains --verbose`. Setting it to yes matches the behaviour of Samba 4.7 and older.\n\nThe construction of that global list is not reliable and often incomplete in complex trust setups. In most situations the list is not needed any more for winbindd to operate correctly. E.g. for plain file serving via SMB using a simple idmap setup with `autorid`, `tdb` or `ad`. However some more complex setups require the list, e.g. if you specify idmap backends for specific domains. Some pam\\_winbind setups may also require the global list.\n\nIf you have a setup that doesn't require the global list, you should set [winbind scan trusted domains = no](smb.conf.5.html#WINBINDSCANTRUSTEDDOMAINS).",
      "default": "no"
    },
    "winbind sealed pipes": {
      "md": "This option controls whether any requests from winbindd to domain controllers pipe will be sealed. Disabling sealing can be useful for debugging purposes.\n\nThe behavior can be controlled per netbios domain by using 'winbind sealed pipes:NETBIOSDOMAIN = no' as option.",
      "default": "yes"
    },
    "winbind separator": {
      "md": "This parameter allows an admin to define the character used when listing a username of the form of _`DOMAIN`_ \\\\_`user`_. This parameter is only applicable when using the `pam_winbind.so` and `nss_winbind.so` modules for UNIX services.\n\nPlease note that setting this parameter to + causes problems with group membership at least on glibc systems, as the character + is used as a special character for NIS in /etc/group.",
      "default": "\\"
    },
    "winbind use default domain": {
      "md": "This parameter specifies whether the [winbindd(8)](winbindd.8.html) daemon should operate on users without domain component in their username. Users without a domain component are treated as is part of the winbindd server's own domain. While this does not benefit Windows users, it makes SSH, FTP and e-mail function in a way much closer to the way they would in a native unix system.\n\nThis option should be avoided if possible. It can cause confusion about responsibilities for a user or group. In many situations it is not clear whether winbind or /etc/passwd should be seen as authoritative for a user, likewise for groups.",
      "default": "no"
    },
    "winbind use krb5 enterprise principals": {
      "md": "winbindd is able to get kerberos tickets for pam\\_winbind with krb5\\_auth or wbinfo -K/--krb5auth=.\n\nwinbindd (at least on a domain member) is never be able to have a complete picture of the trust topology (which is managed by the DCs). There might be uPNSuffixes and msDS-SPNSuffixes values, which don't belong to any AD domain at all.\n\nWith [winbind scan trusted domains = no](smb.conf.5.html#WINBINDSCANTRUSTEDDOMAINS) winbindd doesn't even get a complete picture of the topology.\n\nIt is not really required to know about the trust topology. We can just rely on the \\[K\\]DCs of our primary domain (e.g. PRIMARY.A.EXAMPLE.COM) and use enterprise principals e.g. upnfromB@B.EXAMPLE.COM@PRIMARY.A.EXAMPLE.COM and follow the WRONG\\_REALM referrals in order to find the correct DC. The final principal might be userfromB@INTERNALB.EXAMPLE.PRIVATE.\n\nWith [winbind use krb5 enterprise principals = yes](smb.conf.5.html#WINBINDUSEKRB5ENTERPRISEPRINCIPALS) winbindd enterprise principals will be used.",
      "default": "yes"
    },
    "winsdb:local_owner": {
      "md": "This specifies the address that is stored in the winsOwner attribute, of locally registered winsRecord-objects. The default is to use the ip-address of the first network interface.\n\n_No default_"
    },
    "winsdb:dbnosync": {
      "md": "This parameter disables fsync() after changes of the WINS database.",
      "default": "no"
    },
    "wins hook": {
      "md": "When Samba is running as a WINS server this allows you to call an external program for all changes to the WINS database. The primary use for this option is to allow the dynamic update of external name resolution databases such as dynamic DNS.\n\nThe wins hook parameter specifies the name of a script or executable that will be called as follows:\n\n`wins_hook operation name nametype ttl IP_list`\n\n*   The first argument is the operation and is one of \"add\", \"delete\", or \"refresh\". In most cases the operation can be ignored as the rest of the parameters provide sufficient information. Note that \"refresh\" may sometimes be called when the name has not previously been added, in that case it should be treated as an add.\n    \n*   The second argument is the NetBIOS name. If the name is not a legal name then the wins hook is not called. Legal names contain only letters, digits, hyphens, underscores and periods.\n    \n*   The third argument is the NetBIOS name type as a 2 digit hexadecimal number.\n    \n*   The fourth argument is the TTL (time to live) for the name in seconds.\n    \n*   The fifth and subsequent arguments are the IP addresses currently registered for that name. If this list is empty then the name should be deleted.\n    \n\nAn example script that calls the BIND dynamic DNS update program `nsupdate` is provided in the examples directory of the Samba source code.\n\n_No default_"
    },
    "wins proxy": {
      "md": "This is a boolean that controls if [nmbd(8)](nmbd.8.html) will respond to broadcast name queries on behalf of other hosts. You may need to set this to `yes` for some older clients.",
      "default": "no"
    },
    "wins server": {
      "md": "This specifies the IP address (or DNS name: IP address for preference) of the WINS server that [nmbd(8)](nmbd.8.html) should register with. If you have a WINS server on your network then you should set this to the WINS server's IP.\n\nYou should point this at your WINS server if you have a multi-subnetted network.\n\nIf you want to work in multiple namespaces, you can give every wins server a 'tag'. For each tag, only one (working) server will be queried for a name. The tag should be separated from the ip address by a colon.\n\n> \n> \n> ### Note\n> \n> You need to set up Samba to point to a WINS server if you have multiple subnets and wish cross-subnet browsing to work correctly.\n> \n> \n\nSee the chapter in the Samba3-HOWTO on Network Browsing.",
      "default": ""
    },
    "wins support": {
      "md": "This boolean controls if the [nmbd(8)](nmbd.8.html) process in Samba will act as a WINS server. You should not set this to `yes` unless you have a multi-subnetted network and you wish a particular `nmbd` to be your WINS server. Note that you should _NEVER_ set this to `yes` on more than one machine in your network.",
      "default": "no"
    },
    "workgroup": {
      "md": "This controls what workgroup your server will appear to be in when queried by clients. Note that this parameter also controls the Domain name used with the [security = domain](smb.conf.5.html#SECURITY) setting.",
      "default": "WORKGROUP"
    },
    "wreplsrv:periodic_interval": {
      "md": "This maximum interval in seconds between 2 periodically scheduled runs where we check for wins.ldb changes and do push notifications to our push partners. Also wins\\_config.ldb changes are checked in that interval and partner configuration reloads are done.",
      "default": "15"
    },
    "wreplsrv:propagate name releases": {
      "md": "If this parameter is enabled, then explicit (from the client) and implicit (via the scavenging) name releases are propagated to the other servers directly, even if there are still other addresses active, this applies to SPECIAL GROUP (2) and MULTIHOMED (3) entries. Also the replication conflict merge algorithm for SPECIAL GROUP (2) entries discards replica addresses where the address owner is the local server, if the address was not stored locally before. The merge result is propagated directly in case an address was discarded. A Windows servers doesn't propagate name releases of SPECIAL GROUP (2) and MULTIHOMED (3) entries directly, which means that Windows servers may return different results to name queries for SPECIAL GROUP (2) and MULTIHOMED (3) names. The option doesn't have much negative impact if Windows servers are around, but be aware that they might return unexpected results.",
      "default": "no"
    },
    "wreplsrv:scavenging_interval": {
      "md": "This is the interval in s between 2 scavenging runs which clean up the WINS database and changes the states of expired name records. Defaults to half of the value of wreplsrv:renew\\_interval.\n\n_No default_"
    },
    "wreplsrv:tombstone_extra_timeout": {
      "md": "This is the time in s the server needs to be up till we'll remove tombstone records from our database. Defaults to 3 days.",
      "default": "259200"
    },
    "wreplsrv:tombstone_interval": {
      "md": "This is the interval in s till released records of the WINS server become tombstone. Defaults to 6 days.",
      "default": "518400"
    },
    "wreplsrv:tombstone_timeout": {
      "md": "This is the interval in s till tombstone records are deleted from the WINS database. Defaults to 1 day.",
      "default": "86400"
    },
    "wreplsrv:verify_interval": {
      "md": "This is the interval in s till we verify active replica records with the owning WINS server. Unfortunately not implemented yet. Defaults to 24 days.",
      "default": "2073600"
    },
    "write raw": {
      "md": "This is ignored if [async smb echo handler](smb.conf.5.html#ASYNCSMBECHOHANDLER) is set, because this feature is incompatible with raw write SMB requests\n\nIf enabled, raw writes allow writes of 65535 bytes in one packet. This typically provides a major performance benefit for some very, very old clients.\n\nHowever, some clients either negotiate the allowable block size incorrectly or are incapable of supporting larger block sizes, and for these clients you may need to disable raw writes.\n\nIn general this parameter should be viewed as a system tuning tool and left severely alone.",
      "default": "yes"
    },
    "wtmp directory": {
      "md": "This parameter is only available if Samba has been configured and compiled with the option `--with-utmp`. It specifies a directory pathname that is used to store the wtmp or wtmpx files (depending on the UNIX system) that record user connections to a Samba server. The difference with the utmp directory is the fact that user info is kept after a user has logged out.\n\nBy default this is not set, meaning the system will use whatever utmp file the native system is set to use (usually `/var/run/wtmp` on Linux).",
      "default": ""
    }
  },
  "sharedParams": {
    "access based share enum": {
      "md": "If this parameter is `yes` for a service, then the share hosted by the service will only be visible to users who have read or write access to the share during share enumeration (for example net view \\\\\\\\sambaserver). The share ACLs which allow or deny the access to the share can be modified using for example the `sharesec` command or using the appropriate Windows tools. This has parallels to access based enumeration, the main difference being that only share permissions are evaluated, and security descriptors on files contained on the share are not used in computing enumeration access rights.",
      "default": "no"
    },
    "acl allow execute always": {
      "md": "This boolean parameter controls the behaviour of [smbd(8)](smbd.8.html) when receiving a protocol request of \"open for execution\" from a Windows client. With Samba 3.6 and older, the execution right in the ACL was not checked, so a client could execute a file even if it did not have execute rights on the file. In Samba 4.0, this has been fixed, so that by default, i.e. when this parameter is set to \"False\", \"open for execution\" is now denied when execution permissions are not present.\n\nIf this parameter is set to \"True\", Samba does not check execute permissions on \"open for execution\", thus re-establishing the behaviour of Samba 3.6. This can be useful to smoothen upgrades from older Samba versions to 4.0 and newer. This setting is not meant to be used as a permanent setting, but as a temporary relief: It is recommended to fix the permissions in the ACLs and reset this parameter to the default after a certain transition period.",
      "default": "no"
    },
    "acl check permissions": {
      "md": "Please note this parameter is now deprecated in Samba 3.6.2 and will be removed in a future version of Samba.\n\nThis boolean parameter controls what [smbd(8)](smbd.8.html) does on receiving a protocol request of \"open for delete\" from a Windows client. If a Windows client doesn't have permissions to delete a file then they expect this to be denied at open time. POSIX systems normally only detect restrictions on delete by actually attempting to delete the file or directory. As Windows clients can (and do) \"back out\" a delete request by unsetting the \"delete on close\" bit Samba cannot delete the file immediately on \"open for delete\" request as we cannot restore such a deleted file. With this parameter set to true (the default) then smbd checks the file system permissions directly on \"open for delete\" and denies the request without actually deleting the file if the file system permissions would seem to deny it. This is not perfect, as it's possible a user could have deleted a file without Samba being able to check the permissions correctly, but it is close enough to Windows semantics for mostly correct behaviour. Samba will correctly check POSIX ACL semantics in this case.\n\nIf this parameter is set to \"false\" Samba doesn't check permissions on \"open for delete\" and allows the open. If the user doesn't have permission to delete the file this will only be discovered at close time, which is too late for the Windows user tools to display an error message to the user. The symptom of this is files that appear to have been deleted \"magically\" re-appearing on a Windows explorer refresh. This is an extremely advanced protocol option which should not need to be changed. This parameter was introduced in its final form in 3.0.21, an earlier version with slightly different semantics was introduced in 3.0.20. That older version is not documented here.",
      "default": "yes"
    },
    "acl flag inherited canonicalization": {
      "md": "This option controls the way Samba handles client requests setting the Security Descriptor of files and directories and the effect the operation has on the Security Descriptor flag \"DACL auto-inherited\" (DI). Generally, this flag is set on a file (or directory) upon creation if the parent directory has DI set and also has inheritable ACEs.\n\nOn the other hand when a Security Descriptor is explicitly set on a file, the DI flag is cleared, unless the flag \"DACL Inheritance Required\" (DR) is also set in the new Security Descriptor (fwiw, DR is never stored on disk).\n\nThis is the default behaviour when this option is enabled (the default). When setting this option to `no`, the resulting value of the DI flag on-disk is directly taken from the DI value of the to-be-set Security Descriptor. This can be used so dump tools like rsync that copy data blobs from xattrs that represent ACLs created by the acl\\_xattr VFS module will result in copies of the ACL that are identical to the source. Without this option, the copied ACLs would all loose the DI flag if set on the source.",
      "default": "yes"
    },
    "acl group control": {
      "md": "In a POSIX filesystem, only the owner of a file or directory and the superuser can modify the permissions and ACLs on a file. If this parameter is set, then Samba overrides this restriction, and also allows the _primary group owner_ of a file or directory to modify the permissions and ACLs on that file.\n\nOn a Windows server, groups may be the owner of a file or directory - thus allowing anyone in that group to modify the permissions on it. This allows the delegation of security controls on a point in the filesystem to the group owner of a directory and anything below it also owned by that group. This means there are multiple people with permissions to modify ACLs on a file or directory, easing manageability.\n\nThis parameter allows Samba to also permit delegation of the control over a point in the exported directory hierarchy in much the same way as Windows. This allows all members of a UNIX group to control the permissions on a file or directory they have group ownership on.\n\nThis parameter is best used with the [inherit owner](smb.conf.5.html#INHERITOWNER) option and also on a share containing directories with the UNIX _setgid bit_ set on them, which causes new files and directories created within it to inherit the group ownership from the containing directory.\n\nThis parameter was deprecated in Samba 3.0.23, but re-activated in Samba 3.0.31 and above, as it now only controls permission changes if the user is in the owning primary group. It is now no longer equivalent to the _`dos filemode`_ option.",
      "default": "no"
    },
    "acl map full control": {
      "md": "This boolean parameter controls whether [smbd(8)](smbd.8.html) maps a POSIX ACE entry of \"rwx\" (read/write/execute), the maximum allowed POSIX permission set, into a Windows ACL of \"FULL CONTROL\". If this parameter is set to true any POSIX ACE entry of \"rwx\" will be returned in a Windows ACL as \"FULL CONTROL\", is this parameter is set to false any POSIX ACE entry of \"rwx\" will be returned as the specific Windows ACL bits representing read, write and execute.",
      "default": "yes"
    },
    "administrative share": {
      "md": "If this parameter is set to `yes` for a share, then the share will be an administrative share. The Administrative Shares are the default network shares created by all Windows NT-based operating systems. These are shares like C$, D$ or ADMIN$. The type of these shares is STYPE\\_DISKTREE\\_HIDDEN.\n\nSee the section below on [security](smb.conf.5.html#SECURITY) for more information about this option.",
      "default": "no"
    },
    "admin users": {
      "md": "This is a list of users who will be granted administrative privileges on the share. This means that they will do all file operations as the super-user (root).\n\nYou should use this option very carefully, as any user in this list will be able to do anything they like on the share, irrespective of file permissions.",
      "default": ""
    },
    "afs share": {
      "md": "This parameter controls whether special AFS features are enabled for this share. If enabled, it assumes that the directory exported via the _`path`_ parameter is a local AFS import. The special AFS features include the attempt to hand-craft an AFS token if you enabled --with-fake-kaserver in configure.",
      "default": "no"
    },
    "aio read size": {
      "md": "If this integer parameter is set to a non-zero value, Samba will read from files asynchronously when the request size is bigger than this value. Note that it happens only for non-chained and non-chaining reads and when not using write cache.\n\nThe only reasonable values for this parameter are 0 (no async I/O) and 1 (always do async I/O).\n\nRelated command: [write cache size](smb.conf.5.html#WRITECACHESIZE)\n\nRelated command: [aio write size](smb.conf.5.html#AIOWRITESIZE)",
      "default": "1"
    },
    "aio write behind": {
      "md": "If Samba has been built with asynchronous I/O support, Samba will not wait until write requests are finished before returning the result to the client for files listed in this parameter. Instead, Samba will immediately return that the write request has been finished successfully, no matter if the operation will succeed or not. This might speed up clients without aio support, but is really dangerous, because data could be lost and files could be damaged.\n\nThe syntax is identical to the [veto files](smb.conf.5.html#VETOFILES) parameter.",
      "default": ""
    },
    "aio write size": {
      "md": "If this integer parameter is set to a non-zero value, Samba will write to files asynchronously when the request size is bigger than this value. Note that it happens only for non-chained and non-chaining reads and when not using write cache.\n\nThe only reasonable values for this parameter are 0 (no async I/O) and 1 (always do async I/O).\n\nCompared to [aio read size](smb.conf.5.html#AIOREADSIZE) this parameter has a smaller effect, most writes should end up in the file system cache. Writes that require space allocation might benefit most from going asynchronous.\n\nRelated command: [write cache size](smb.conf.5.html#WRITECACHESIZE)\n\nRelated command: [aio read size](smb.conf.5.html#AIOREADSIZE)",
      "default": "1"
    },
    "allocation roundup size": {
      "md": "This parameter allows an administrator to tune the allocation size reported to Windows clients. This is only useful for old SMB1 clients because modern SMB dialects eliminated that bottleneck and have better performance by default. Using this parameter may cause difficulties for some applications, e.g. MS Visual Studio. If the MS Visual Studio compiler starts to crash with an internal error, set this parameter to zero for this share. Settings this parameter to a large value can also cause small files to allocate more space on the disk than needed.\n\nThis parameter is deprecated and will be removed in one of the next Samba releases.\n\nThe integer parameter specifies the roundup size in bytes.",
      "default": "0"
    },
    "available": {
      "md": "This parameter lets you \"turn off\" a service. If _`available = no`_, then _ALL_ attempts to connect to the service will fail. Such failures are logged.",
      "default": "yes"
    },
    "blocking locks": {
      "md": "This parameter controls the behavior of [smbd(8)](smbd.8.html) when given a request by a client to obtain a byte range lock on a region of an open file, and the request has a time limit associated with it.\n\nIf this parameter is set and the lock range requested cannot be immediately satisfied, samba will internally queue the lock request, and periodically attempt to obtain the lock until the timeout period expires.\n\nIf this parameter is set to `no`, then samba will behave as previous versions of Samba would and will fail the lock request immediately if the lock range cannot be obtained.",
      "default": "yes"
    },
    "block size": {
      "md": "This parameter controls the behavior of [smbd(8)](smbd.8.html) when reporting disk free sizes. By default, this reports a disk block size of 1024 bytes.\n\nChanging this parameter may have some effect on the efficiency of client writes, this is not yet confirmed. This parameter was added to allow advanced administrators to change it (usually to a higher value) and test the effect it has on client write performance without re-compiling the code. As this is an experimental option it may be removed in a future release.\n\nChanging this option does not change the disk free reporting size, just the block size unit reported to the client.",
      "default": "1024"
    },
    "browseable": {
      "md": "This controls whether this share is seen in the list of available shares in a net view and in the browse list.",
      "default": "yes"
    },
    "case sensitive": {
      "md": "See the discussion in the section [name mangling](smb.conf.5.html#NAMEMANGLING).",
      "default": "auto"
    },
    "check parent directory delete on close": {
      "md": "A Windows SMB server prevents the client from creating files in a directory that has the delete-on-close flag set. By default Samba doesn't perform this check as this check is a quite expensive operation in Samba.",
      "default": "no"
    },
    "comment": {
      "md": "This is a text field that is seen next to a share when a client does a queries the server, either via the network neighborhood or via `net view` to list what shares are available.\n\nIf you want to set the string that is displayed next to the machine name then see the [server string](smb.conf.5.html#SERVERSTRING) parameter.",
      "default": "# No comment"
    },
    "copy": {
      "md": "This parameter allows you to \"clone\" service entries. The specified service is simply duplicated under the current service's name. Any parameters specified in the current section will override those in the section being copied.\n\nThis feature lets you set up a 'template' service and create similar services easily. Note that the service being copied must occur earlier in the configuration file than the service doing the copying.",
      "default": ""
    },
    "create mask": {
      "md": "When a file is created, the necessary permissions are calculated according to the mapping from DOS modes to UNIX permissions, and the resulting UNIX mode is then bit-wise 'AND'ed with this parameter. This parameter may be thought of as a bit-wise MASK for the UNIX modes of a file. Any bit _not_ set here will be removed from the modes set on a file when it is created.\n\nThe default value of this parameter removes the `group` and `other` write and execute bits from the UNIX modes.\n\nFollowing this Samba will bit-wise 'OR' the UNIX mode created from this parameter with the value of the [force create mode](smb.conf.5.html#FORCECREATEMODE) parameter which is set to 000 by default.\n\nThis parameter does not affect directory masks. See the parameter [directory mask](smb.conf.5.html#DIRECTORYMASK) for details.",
      "default": "0744"
    },
    "csc policy": {
      "md": "This stands for _client-side caching policy_, and specifies how clients capable of offline caching will cache the files in the share. The valid values are: manual, documents, programs, disable.\n\nThese values correspond to those used on Windows servers.\n\nFor example, shares containing roaming profiles can have offline caching disabled using [csc policy = disable](smb.conf.5.html#CSCPOLICY).",
      "default": "manual"
    },
    "cups options": {
      "md": "This parameter is only applicable if [printing](smb.conf.5.html#PRINTING) is set to `cups`. Its value is a free form string of options passed directly to the cups library.\n\nYou can pass any generic print option known to CUPS (as listed in the CUPS \"Software Users' Manual\"). You can also pass any printer specific option (as listed in \"lpoptions -d printername -l\") valid for the target queue. Multiple parameters should be space-delimited name/value pairs according to the PAPI text option ABNF specification. Collection values (\"name={a=... b=... c=...}\") are stored with the curley brackets intact.\n\nYou should set this parameter to `raw` if your CUPS server `error_log` file contains messages such as \"Unsupported format 'application/octet-stream'\" when printing from a Windows client through Samba. It is no longer necessary to enable system wide raw printing in `/etc/cups/mime.{convs,types}`.",
      "default": "\"\""
    },
    "default case": {
      "md": "See the section on [name mangling](smb.conf.5.html#NAMEMANGLING). Also note the [short preserve case](smb.conf.5.html#SHORTPRESERVECASE) parameter.",
      "default": "lower"
    },
    "default devmode": {
      "md": "This parameter is only applicable to [printable](smb.conf.5.html#PRINTABLE) services. When smbd is serving Printer Drivers to Windows NT/2k/XP clients, each printer on the Samba server has a Device Mode which defines things such as paper size and orientation and duplex settings. The device mode can only correctly be generated by the printer driver itself (which can only be executed on a Win32 platform). Because smbd is unable to execute the driver code to generate the device mode, the default behavior is to set this field to NULL.\n\nMost problems with serving printer drivers to Windows NT/2k/XP clients can be traced to a problem with the generated device mode. Certain drivers will do things such as crashing the client's Explorer.exe with a NULL devmode. However, other printer drivers can cause the client's spooler service (spoolsv.exe) to die if the devmode was not created by the driver itself (i.e. smbd generates a default devmode).\n\nThis parameter should be used with care and tested with the printer driver in question. It is better to leave the device mode to NULL and let the Windows client set the correct values. Because drivers do not do this all the time, setting `default devmode = yes` will instruct smbd to generate a default one.\n\nFor more information on Windows NT/2k printing and Device Modes, see the [MSDN documentation](http://msdn.microsoft.com/).",
      "default": "yes"
    },
    "delete readonly": {
      "md": "This parameter allows readonly files to be deleted. This is not normal DOS semantics, but is allowed by UNIX.\n\nThis option may be useful for running applications such as rcs, where UNIX file ownership prevents changing file permissions, and DOS semantics prevent deletion of a read only file.",
      "default": "no"
    },
    "delete veto files": {
      "md": "This option is used when Samba is attempting to delete a directory that contains one or more vetoed files or directories or non-visible files or directories (such as dangling symlinks that point nowhere). (see the [veto files](smb.conf.5.html#VETOFILES), [hide special files](smb.conf.5.html#HIDESPECIALFILES), [hide unreadable](smb.conf.5.html#HIDEUNREADABLE), [hide unwriteable files](smb.conf.5.html#HIDEUNWRITEABLEFILES) options). If this option is set to `no` (the default) then if a vetoed directory contains any non-vetoed files or directories then the directory delete will fail. This is usually what you want.\n\nIf this option is set to `yes`, then Samba will attempt to recursively delete any files and directories within the vetoed directory. This can be useful for integration with file serving systems such as NetAtalk which create meta-files within directories you might normally veto DOS/Windows users from seeing (e.g. `.AppleDouble`)\n\nSetting [delete veto files = yes](smb.conf.5.html#DELETEVETOFILES) allows these directories to be transparently deleted when the parent directory is deleted (so long as the user has permissions to do so).",
      "default": "no"
    },
    "dfree cache time": {
      "md": "The _`dfree cache time`_ should only be used on systems where a problem occurs with the internal disk space calculations. This has been known to happen with Ultrix, but may occur with other operating systems. The symptom that was seen was an error of \"Abort Retry Ignore\" at the end of each directory listing.\n\nThis is a new parameter introduced in Samba version 3.0.21. It specifies in seconds the time that smbd will cache the output of a disk free query. If set to zero (the default) no caching is done. This allows a heavily loaded server to prevent rapid spawning of [dfree command](smb.conf.5.html#DFREECOMMAND) scripts increasing the load.\n\nBy default this parameter is zero, meaning no caching will be done.\n\n_No default_"
    },
    "dfree command": {
      "md": "The _`dfree command`_ setting should only be used on systems where a problem occurs with the internal disk space calculations. This has been known to happen with Ultrix, but may occur with other operating systems. The symptom that was seen was an error of \"Abort Retry Ignore\" at the end of each directory listing.\n\nThis setting allows the replacement of the internal routines to calculate the total disk space and amount available with an external routine. The example below gives a possible script that might fulfill this function.\n\nIn Samba version 3.0.21 this parameter has been changed to be a per-share parameter, and in addition the parameter [dfree cache time](smb.conf.5.html#DFREECACHETIME) was added to allow the output of this script to be cached for systems under heavy load.\n\nThe external program will be passed a single parameter indicating a directory in the filesystem being queried. This will typically consist of the string `./`. The script should return two integers in ASCII. The first should be the total disk space in blocks, and the second should be the number of available blocks. An optional third return value can give the block size in bytes. The default blocksize is 1024 bytes.\n\nNote: Your script should _NOT_ be setuid or setgid and should be owned by (and writeable only by) root!\n\nWhere the script dfree (which must be made executable) could be:\n\n```\n \n#!/bin/sh\ndf \"$1\" | tail -1 | awk '{print $(NF-4),$(NF-2)}'\n\n````\n\nor perhaps (on Sys V based systems):\n\n```\n \n#!/bin/sh\n/usr/bin/df -k \"$1\" | tail -1 | awk '{print $3\" \"$5}'\n\n````\n\nNote that you may have to replace the command names with full path names on some systems. Also note the arguments passed into the script should be quoted inside the script in case they contain special characters such as spaces or newlines.\n\nBy default internal routines for determining the disk capacity and remaining space will be used.\n\n_No default_"
    },
    "directory mask": {
      "md": "This parameter is the octal modes which are used when converting DOS modes to UNIX modes when creating UNIX directories.\n\nWhen a directory is created, the necessary permissions are calculated according to the mapping from DOS modes to UNIX permissions, and the resulting UNIX mode is then bit-wise 'AND'ed with this parameter. This parameter may be thought of as a bit-wise MASK for the UNIX modes of a directory. Any bit _not_ set here will be removed from the modes set on a directory when it is created.\n\nThe default value of this parameter removes the 'group' and 'other' write bits from the UNIX mode, allowing only the user who owns the directory to modify it.\n\nFollowing this Samba will bit-wise 'OR' the UNIX mode created from this parameter with the value of the [force directory mode](smb.conf.5.html#FORCEDIRECTORYMODE) parameter. This parameter is set to 000 by default (i.e. no extra mode bits are added).",
      "default": "0755"
    },
    "directory name cache size": {
      "md": "This parameter specifies the size of the directory name cache for SMB1 connections. It is not used for SMB2. It will be needed to turn this off for \\*BSD systems.",
      "default": "100"
    },
    "directory security mask": {
      "md": "This parameter has been removed for Samba 4.0.0.\n\n_No default_"
    },
    "dmapi support": {
      "md": "This parameter specifies whether Samba should use DMAPI to determine whether a file is offline or not. This would typically be used in conjunction with a hierarchical storage system that automatically migrates files to tape.\n\nNote that Samba infers the status of a file by examining the events that a DMAPI application has registered interest in. This heuristic is satisfactory for a number of hierarchical storage systems, but there may be system for which it will fail. In this case, Samba may erroneously report files to be offline.\n\nThis parameter is only available if a supported DMAPI implementation was found at compilation time. It will only be used if DMAPI is found to enabled on the system at run time.",
      "default": "no"
    },
    "dont descend": {
      "md": "There are certain directories on some systems (e.g., the `/proc` tree under Linux) that are either not of interest to clients or are infinitely deep (recursive). This parameter allows you to specify a comma-delimited list of directories that the server should always show as empty.\n\nNote that Samba can be very fussy about the exact format of the \"dont descend\" entries. For example you may need `./proc` instead of just `/proc`. Experimentation is the best policy :-)",
      "default": ""
    },
    "dos filemode": {
      "md": "The default behavior in Samba is to provide UNIX-like behavior where only the owner of a file/directory is able to change the permissions on it. However, this behavior is often confusing to DOS/Windows users. Enabling this parameter allows a user who has write access to the file (by whatever means, including an ACL permission) to modify the permissions (including ACL) on it. Note that a user belonging to the group owning the file will not be allowed to change permissions if the group is only granted read access. Ownership of the file/directory may also be changed. Note that using the VFS modules acl\\_xattr or acl\\_tdb which store native Windows as meta-data will automatically turn this option on for any share for which they are loaded, as they require this option to emulate Windows ACLs correctly.",
      "default": "no"
    },
    "dos filetime resolution": {
      "md": "Under the DOS and Windows FAT filesystem, the finest granularity on time resolution is two seconds. Setting this parameter for a share causes Samba to round the reported time down to the nearest two second boundary when a query call that requires one second resolution is made to [smbd(8)](smbd.8.html).\n\nThis option is mainly used as a compatibility option for Visual C++ when used against Samba shares. If oplocks are enabled on a share, Visual C++ uses two different time reading calls to check if a file has changed since it was last read. One of these calls uses a one-second granularity, the other uses a two second granularity. As the two second call rounds any odd second down, then if the file has a timestamp of an odd number of seconds then the two timestamps will not match and Visual C++ will keep reporting the file has changed. Setting this option causes the two timestamps to match, and Visual C++ is happy.",
      "default": "no"
    },
    "dos filetimes": {
      "md": "Under DOS and Windows, if a user can write to a file they can change the timestamp on it. Under POSIX semantics, only the owner of the file or root may change the timestamp. By default, Samba emulates the DOS semantics and allows one to change the timestamp on a file if the user `smbd` is acting on behalf has write permissions. Due to changes in Microsoft Office 2000 and beyond, the default for this parameter has been changed from \"no\" to \"yes\" in Samba 3.0.14 and above. Microsoft Excel will display dialog box warnings about the file being changed by another user if this parameter is not set to \"yes\" and files are being shared between users.",
      "default": "yes"
    },
    "durable handles": {
      "md": "This boolean parameter controls whether Samba can grant SMB2 durable file handles on a share.\n\nNote that durable handles are only enabled if [kernel oplocks = no](smb.conf.5.html#KERNELOPLOCKS), [kernel share modes = no](smb.conf.5.html#KERNELSHAREMODES), and [posix locking = no](smb.conf.5.html#POSIXLOCKING), i.e. if the share is configured for CIFS/SMB2 only access, not supporting interoperability features with local UNIX processes or NFS operations.\n\nAlso note that, for the time being, durability is not granted for a handle that has the delete on close flag set.",
      "default": "yes"
    },
    "ea support": {
      "md": "This boolean parameter controls whether [smbd(8)](smbd.8.html) will allow clients to attempt to access extended attributes on a share. In order to enable this parameter on a setup with default VFS modules:\n\n*   Samba must have been built with extended attributes support.\n    \n*   The underlying filesystem exposed by the share must support extended attributes (e.g. the getfattr(1) / setfattr(1) utilities must work).\n    \n\nNote that the SMB protocol allows setting attributes whose value is 64K bytes long, and that on NTFS, the maximum storage space for extended attributes per file is 64K. On some filesystem the limits may be lower. Filesystems with too limited EA space may experience unexpected weird effects. The default has changed to yes in Samba release 4.9.0 and above to allow better Windows fileserver compatibility in a default install.",
      "default": "yes"
    },
    "elasticsearch:address": {
      "md": "Specifies the name of the Elasticsearch server to use for Spotlight queries when using the Elasticsearch backend.",
      "default": "localhost"
    },
    "elasticsearch:index": {
      "md": "Specifies the name of the Elasticsearch index to use for Spotlight queries when using the Elasticsearch backend. The default value of \"\\_all\" is a special Elasticsearch value that performs the search operation on all indices.",
      "default": "_all"
    },
    "elasticsearch:max results": {
      "md": "Path to a file specifying metadata attribute mappings in JSON format. Used by the Elasticsearch backend of the Spotlight RPC service. A value of 0 means no limit.",
      "default": "100"
    },
    "elasticsearch:port": {
      "md": "Specifies the TCP port of the Elasticsearch server to use for Spotlight queries when using the Elasticsearch backend.",
      "default": "9200"
    },
    "elasticsearch:use tls": {
      "md": "Specifies whether to use HTTPS when talking to the Elasticsearch server used for Spotlight queries when using the Elasticsearch backend.",
      "default": "no"
    },
    "fake directory create times": {
      "md": "NTFS and Windows VFAT file systems keep a create time for all files and directories. This is not the same as the ctime - status change time - that Unix keeps, so Samba by default reports the earliest of the various times Unix does keep. Setting this parameter for a share causes Samba to always report midnight 1-1-1980 as the create time for directories.\n\nThis option is mainly used as a compatibility option for Visual C++ when used against Samba shares. Visual C++ generated makefiles have the object directory as a dependency for each object file, and a make rule to create the directory. Also, when NMAKE compares timestamps it uses the creation time when examining a directory. Thus the object directory will be created if it does not exist, but once it does exist it will always have an earlier timestamp than the object files it contains.\n\nHowever, Unix time semantics mean that the create time reported by Samba will be updated whenever a file is created or deleted in the directory. NMAKE finds all object files in the object directory. The timestamp of the last one built is then compared to the timestamp of the object directory. If the directory's timestamp if newer, then all object files will be rebuilt. Enabling this option ensures directories always predate their contents and an NMAKE build will proceed as expected.",
      "default": "no"
    },
    "fake oplocks": {
      "md": "Oplocks are the way that SMB clients get permission from a server to locally cache file operations. If a server grants an oplock (opportunistic lock) then the client is free to assume that it is the only one accessing the file and it will aggressively cache file data. With some oplock types the client may even cache file open/close operations. This can give enormous performance benefits.\n\nWhen you set `fake oplocks = yes`, [smbd(8)](smbd.8.html) will always grant oplock requests no matter how many clients are using the file.\n\nIt is generally much better to use the real [oplocks](smb.conf.5.html#OPLOCKS) support rather than this parameter.\n\nIf you enable this option on all read-only shares or shares that you know will only be accessed from one client at a time such as physically read-only media like CDROMs, you will see a big performance improvement on many operations. If you enable this option on shares where multiple clients may be accessing the files read-write at the same time you can get data corruption. Use this option carefully!",
      "default": "no"
    },
    "follow symlinks": {
      "md": "This parameter allows the Samba administrator to stop [smbd(8)](smbd.8.html) from following symbolic links in a particular share. Setting this parameter to `no` prevents any file or directory that is a symbolic link from being followed (the user will get an error). This option is very useful to stop users from adding a symbolic link to `/etc/passwd` in their home directory for instance. However it will slow filename lookups down slightly.\n\nThis option is enabled (i.e. `smbd` will follow symbolic links) by default.",
      "default": "yes"
    },
    "force create mode": {
      "md": "This parameter specifies a set of UNIX mode bit permissions that will _always_ be set on a file created by Samba. This is done by bitwise 'OR'ing these bits onto the mode bits of a file that is being created. The default for this parameter is (in octal) 000. The modes in this parameter are bitwise 'OR'ed onto the file mode after the mask set in the _`create mask`_ parameter is applied.\n\nThe example below would force all newly created files to have read and execute permissions set for 'group' and 'other' as well as the read/write/execute bits set for the 'user'.",
      "default": "0000"
    },
    "force directory mode": {
      "md": "This parameter specifies a set of UNIX mode bit permissions that will _always_ be set on a directory created by Samba. This is done by bitwise 'OR'ing these bits onto the mode bits of a directory that is being created. The default for this parameter is (in octal) 0000 which will not add any extra permission bits to a created directory. This operation is done after the mode mask in the parameter _`directory mask`_ is applied.\n\nThe example below would force all created directories to have read and execute permissions set for 'group' and 'other' as well as the read/write/execute bits set for the 'user'.",
      "default": "0000"
    },
    "force directory security mode": {
      "md": "This parameter has been removed for Samba 4.0.0.\n\n_No default_"
    },
    "force group": {
      "md": "This specifies a UNIX group name that will be assigned as the default primary group for all users connecting to this service. This is useful for sharing files by ensuring that all access to files on service will use the named group for their permissions checking. Thus, by assigning permissions for this group to the files and directories within this service the Samba administrator can restrict or allow sharing of these files.\n\nIn Samba 2.0.5 and above this parameter has extended functionality in the following way. If the group name listed here has a '+' character prepended to it then the current user accessing the share only has the primary group default assigned to this group if they are already assigned as a member of that group. This allows an administrator to decide that only users who are already in a particular group will create files with group ownership set to that group. This gives a finer granularity of ownership assignment. For example, the setting `force group = +sys` means that only users who are already in group sys will have their default primary group assigned to sys when accessing this Samba share. All other users will retain their ordinary primary group.\n\nIf the [force user](smb.conf.5.html#FORCEUSER) parameter is also set the group specified in _`force group`_ will override the primary group set in _`force user`_.",
      "default": ""
    },
    "force printername": {
      "md": "When printing from Windows NT (or later), each printer in `smb.conf` has two associated names which can be used by the client. The first is the sharename (or shortname) defined in smb.conf. This is the only printername available for use by Windows 9x clients. The second name associated with a printer can be seen when browsing to the \"Printers\" (or \"Printers and Faxes\") folder on the Samba server. This is referred to simply as the printername (not to be confused with the _`printer name`_ option).\n\nWhen assigning a new driver to a printer on a remote Windows compatible print server such as Samba, the Windows client will rename the printer to match the driver name just uploaded. This can result in confusion for users when multiple printers are bound to the same driver. To prevent Samba from allowing the printer's printername to differ from the sharename defined in smb.conf, set _`force printername = yes`_.\n\nBe aware that enabling this parameter may affect migrating printers from a Windows server to Samba since Windows has no way to force the sharename and printername to match.\n\nIt is recommended that this parameter's value not be changed once the printer is in use by clients as this could cause a user not be able to delete printer connections from their local Printers folder.",
      "default": "no"
    },
    "smbd force process locks": {
      "md": "This boolean option tells `smbd` whether to forcefully disable the use of Open File Description locks on Linux.\n\nThis option should not be changed from the default unless you know what you're doing.",
      "default": "no"
    },
    "force security mode": {
      "md": "This parameter has been removed for Samba 4.0.0.\n\n_No default_"
    },
    "force unknown acl user": {
      "md": "If this parameter is set, a Windows NT ACL that contains an unknown SID (security descriptor, or representation of a user or group id) as the owner or group owner of the file will be silently mapped into the current UNIX uid or gid of the currently connected user.\n\nThis is designed to allow Windows NT clients to copy files and folders containing ACLs that were created locally on the client machine and contain users local to that machine only (no domain users) to be copied to a Samba server (usually with XCOPY /O) and have the unknown userid and groupid of the file owner map to the current connected user. This can only be fixed correctly when winbindd allows arbitrary mapping from any Windows NT SID to a UNIX uid or gid.\n\nTry using this parameter when XCOPY /O gives an ACCESS\\_DENIED error.",
      "default": "no"
    },
    "force user": {
      "md": "This specifies a UNIX user name that will be assigned as the default user for all users connecting to this service. This is useful for sharing files. You should also use it carefully as using it incorrectly can cause security problems.\n\nThis user name only gets used once a connection is established. Thus clients still need to connect as a valid user and supply a valid password. Once connected, all file operations will be performed as the \"forced user\", no matter what username the client connected as. This can be very useful.\n\nIn Samba 2.0.5 and above this parameter also causes the primary group of the forced user to be used as the primary group for all file activity. Prior to 2.0.5 the primary group was left as the primary group of the connecting user (this was a bug).",
      "default": ""
    },
    "fstype": {
      "md": "This parameter allows the administrator to configure the string that specifies the type of filesystem a share is using that is reported by [smbd(8)](smbd.8.html) when a client queries the filesystem type for a share. The default type is `NTFS` for compatibility with Windows NT but this can be changed to other strings such as `Samba` or `FAT` if required.",
      "default": "NTFS"
    },
    "guest ok": {
      "md": "If this parameter is `yes` for a service, then no password is required to connect to the service. Privileges will be those of the [guest account](smb.conf.5.html#GUESTACCOUNT).\n\nThis parameter nullifies the benefits of setting [restrict anonymous = 2](smb.conf.5.html#RESTRICTANONYMOUS)\n\nSee the section below on [security](smb.conf.5.html#SECURITY) for more information about this option.",
      "default": "no"
    },
    "guest only": {
      "md": "If this parameter is `yes` for a service, then only guest connections to the service are permitted. This parameter will have no effect if [guest ok](smb.conf.5.html#GUESTOK) is not set for the service.\n\nSee the section below on [security](smb.conf.5.html#SECURITY) for more information about this option.",
      "default": "no"
    },
    "hide dot files": {
      "md": "This is a boolean parameter that controls whether files starting with a dot appear as hidden files.",
      "default": "yes"
    },
    "hide files": {
      "md": "This is a list of files or directories that are not visible but are accessible. The DOS 'hidden' attribute is applied to any files or directories that match.\n\nEach entry in the list must be separated by a '/', which allows spaces to be included in the entry. '\\*' and '?' can be used to specify multiple files or directories as in DOS wildcards.\n\nEach entry must be a Unix path, not a DOS path and must not include the Unix directory separator '/'.\n\nNote that the case sensitivity option is applicable in hiding files.\n\nSetting this parameter will affect the performance of Samba, as it will be forced to check all files and directories for a match as they are scanned.\n\nThe example shown above is based on files that the Macintosh SMB client (DAVE) available from [Thursby](http://www.thursby.com) creates for internal use, and also still hides all files beginning with a dot.\n\nAn example of us of this parameter is:\n\n```\nhide files = /.\\*/DesktopFolderDB/TrashFor%m/resource.frk/\n\n````",
      "default": "# no file are hidden"
    },
    "hide new files timeout": {
      "md": "Setting this parameter to something but 0 hides files that have been modified less than N seconds ago.\n\nIt can be used for ingest/process queue style workloads. A processing application should only see files that are definitely finished. As many applications do not have proper external workflow control, this can be a way to make sure processing does not interfere with file ingest.",
      "default": "0"
    },
    "hide special files": {
      "md": "This parameter prevents clients from seeing special files such as sockets, devices and fifo's in directory listings.",
      "default": "no"
    },
    "hide unreadable": {
      "md": "This parameter prevents clients from seeing the existence of files that cannot be read. Defaults to off.\n\nPlease note that enabling this can slow down listing large directories significantly. Samba has to evaluate the ACLs of all directory members, which can be a lot of effort.",
      "default": "no"
    },
    "hide unwriteable files": {
      "md": "This parameter prevents clients from seeing the existence of files that cannot be written to. Defaults to off. Note that unwriteable directories are shown as usual.\n\nPlease note that enabling this can slow down listing large directories significantly. Samba has to evaluate the ACLs of all directory members, which can be a lot of effort.",
      "default": "no"
    },
    "honor change notify privilege": {
      "md": "This option can be used to make use of the change notify privilege. By default notify results are not checked against the file system permissions.\n\nIf \"honor change notify privilege\" is enabled, a user will only receive notify results, if he has change notify privilege or sufficient file system permissions. If a user has the change notify privilege, he will receive all requested notify results, even if the user does not have the permissions on the file system.",
      "default": "no"
    },
    "hosts allow": {
      "md": "A synonym for this parameter is [allow hosts](smb.conf.5.html#ALLOWHOSTS).\n\nThis parameter is a comma, space, or tab delimited set of hosts which are permitted to access a service.\n\nIf specified in the \\[global\\] section then it will apply to all services, regardless of whether the individual service has a different setting.\n\nYou can specify the hosts by name or IP number. For example, you could restrict access to only the hosts on a Class C subnet with something like `allow hosts = 150.203.5.`. The full syntax of the list is described in the man page `hosts_access(5)`. Note that this man page may not be present on your system, so a brief description will be given here also.\n\nNote that the localhost address 127.0.0.1 will always be allowed access unless specifically denied by a [hosts deny](smb.conf.5.html#HOSTSDENY) option.\n\nYou can also specify hosts by network/netmask pairs and by netgroup names if your system supports netgroups. The _EXCEPT_ keyword can also be used to limit a wildcard list. The following examples may provide some help:\n\nExample 1: allow all IPs in 150.203.\\*.\\*; except one\n\n`hosts allow = 150.203. EXCEPT 150.203.6.66`\n\nExample 2: allow hosts that match the given network/netmask\n\n`hosts allow = 150.203.15.0/255.255.255.0`\n\nExample 3: allow a couple of hosts\n\n`hosts allow = lapland, arvidsjaur`\n\nExample 4: allow only hosts in NIS netgroup \"foonet\", but deny access from one particular host\n\n`hosts allow = @foonet`\n\n`hosts deny = pirate`\n\n> \n> \n> ### Note\n> \n> Note that access still requires suitable user-level passwords.\n> \n> \n\nSee [testparm(1)](testparm.1.html) for a way of testing your host access to see if it does what you expect.",
      "default": "# none (i.e., all hosts permitted access)"
    },
    "hosts deny": {
      "md": "The opposite of _`hosts allow`_ - hosts listed here are _NOT_ permitted access to services unless the specific services have their own lists to override this one. Where the lists conflict, the _`allow`_ list takes precedence.\n\nIn the event that it is necessary to deny all by default, use the keyword ALL (or the netmask `0.0.0.0/0`) and then explicitly specify to the [hosts allow = hosts allow](smb.conf.5.html#HOSTSALLOW) parameter those hosts that should be permitted access.",
      "default": "# none (i.e., no hosts specifically excluded)"
    },
    "include": {
      "md": "This allows you to include one config file inside another. The file is included literally, as though typed in place.\n\nIt takes the standard substitutions, except _`%u`_, _`%P`_ and _`%S`_.\n\nThe parameter _`include = registry`_ has a special meaning: It does _not_ include a file named _registry_ from the current working directory, but instead reads the global configuration options from the registry. See the section on registry-based configuration for details. Note that this option automatically activates registry shares.",
      "default": ""
    },
    "inherit acls": {
      "md": "This parameter is only relevant for filesystems that do not support standardized NFS4 ACLs but only a POSIX draft ACL implementation and which implements default ACLs like most filesystems on Linux. It can be used to ensure that if default ACLs exist on parent directories, they are always honored when creating a new file or subdirectory in these parent directories. The default behavior is to use the unix mode specified when creating the directory. Enabling this option sets the unix mode to 0777, thus guaranteeing that the default directory ACLs are propagated. Note that using the VFS modules acl\\_xattr or acl\\_tdb which store native Windows as meta-data will automatically turn this option on for any share for which they are loaded, as they require this option to emulate Windows ACLs correctly.",
      "default": "no"
    },
    "inherit owner": {
      "md": "The ownership of new files and directories is normally governed by effective uid of the connected user. This option allows the Samba administrator to specify that the ownership for new files and directories should be controlled by the ownership of the parent directory.\n\nValid options are:\n\n*   `no` - Both the Windows (SID) owner and the UNIX (uid) owner of the file are governed by the identity of the user that created the file.\n    \n*   `windows and unix` - The Windows (SID) owner and the UNIX (uid) owner of new files and directories are set to the respective owner of the parent directory.\n    \n*   `yes` - a synonym for `windows and unix`.\n    \n*   `unix only` - Only the UNIX owner is set to the UNIX owner of the parent directory.\n    \n\nCommon scenarios where this behavior is useful is in implementing drop-boxes, where users can create and edit files but not delete them and ensuring that newly created files in a user's roaming profile directory are actually owned by the user.\n\nThe `unix only` option effectively breaks the tie between the Windows owner of a file and the UNIX owner. As a logical consequence, in this mode, setting the the Windows owner of a file does not modify the UNIX owner. Using this mode should typically be combined with a backing store that can emulate the full NT ACL model without affecting the POSIX permissions, such as the acl\\_xattr VFS module, coupled with [acl\\_xattr:ignore system acls = yes](smb.conf.5.html#ACL_XATTR:IGNORESYSTEMACLS). This can be used to emulate folder quotas, when files are exposed only via SMB (without UNIX extensions). The UNIX owner of a directory is locally set and inherited by all subdirectories and files, and they all consume the same quota.",
      "default": "no"
    },
    "inherit permissions": {
      "md": "The permissions on new files and directories are normally governed by [create mask](smb.conf.5.html#CREATEMASK), [directory mask](smb.conf.5.html#DIRECTORYMASK), [force create mode](smb.conf.5.html#FORCECREATEMODE) and [force directory mode](smb.conf.5.html#FORCEDIRECTORYMODE) but the boolean inherit permissions parameter overrides this.\n\nNew directories inherit the mode of the parent directory, including bits such as setgid.\n\nNew files inherit their read/write bits from the parent directory. Their execute bits continue to be determined by [map archive](smb.conf.5.html#MAPARCHIVE), [map hidden](smb.conf.5.html#MAPHIDDEN) and [map system](smb.conf.5.html#MAPSYSTEM) as usual.\n\nNote that the setuid bit is _never_ set via inheritance (the code explicitly prohibits this).\n\nThis can be particularly useful on large systems with many users, perhaps several thousand, to allow a single \\[homes\\] share to be used flexibly by each user.",
      "default": "no"
    },
    "invalid users": {
      "md": "This is a list of users that should not be allowed to login to this service. This is really a _paranoid_ check to absolutely ensure an improper setting does not breach your security.\n\nA name starting with a '@' is interpreted as an NIS netgroup first (if your system supports NIS), and then as a UNIX group if the name was not found in the NIS netgroup database.\n\nA name starting with '+' is interpreted only by looking in the UNIX group database via the NSS getgrnam() interface. A name starting with '&' is interpreted only by looking in the NIS netgroup database (this requires NIS to be working on your system). The characters '+' and '&' may be used at the start of the name in either order so the value _`+&group`_ means check the UNIX group database, followed by the NIS netgroup database, and the value _`&+group`_ means check the NIS netgroup database, followed by the UNIX group database (the same as the '@' prefix).\n\nThe current servicename is substituted for _`%S`_. This is useful in the \\[homes\\] section.",
      "default": "# no invalid users"
    },
    "kernel oplocks": {
      "md": "For UNIXes that support kernel based [oplocks](smb.conf.5.html#OPLOCKS) (currently only Linux), this parameter allows the use of them to be turned on or off. However, this disables Level II oplocks for clients as the Linux kernel does not support them properly.\n\nKernel oplocks support allows Samba _`oplocks`_ to be broken whenever a local UNIX process or NFS operation accesses a file that [smbd(8)](smbd.8.html) has oplocked. This allows complete data consistency between SMB/CIFS, NFS and local file access (and is a _very_ cool feature :-).\n\nIf you do not need this interaction, you should disable the parameter on Linux to get Level II oplocks and the associated performance benefit.\n\nThis parameter defaults to `no` and is translated to a no-op on systems that do not have the necessary kernel support.",
      "default": "no"
    },
    "kernel share modes": {
      "md": "This parameter controls whether SMB share modes are translated into file system specific sharemode calls.\n\nKernel share modes provide a minimal level of interoperability with local UNIX processes and NFS operations by preventing access corresponding to the SMB share modes. This requires a file system specific VFS module with proper support.\n\nNote that in order to use SMB2 durable file handles on a share, you have to turn kernel share modes off.\n\nThis parameter defaults to `no`. Setting it to `yes` requires a file system module that supports file system sharemodes, otherwise attempts to access files will fail with a sharing violation.",
      "default": "no"
    },
    "level2 oplocks": {
      "md": "This parameter controls whether Samba supports level2 (read-only) oplocks on a share.\n\nLevel2, or read-only oplocks allow Windows NT clients that have an oplock on a file to downgrade from a read-write oplock to a read-only oplock once a second client opens the file (instead of releasing all oplocks on a second open, as in traditional, exclusive oplocks). This allows all openers of the file that support level2 oplocks to cache the file for read-ahead only (ie. they may not cache writes or lock requests) and increases performance for many accesses of files that are not commonly written (such as application .EXE files).\n\nOnce one of the clients which have a read-only oplock writes to the file all clients are notified (no reply is needed or waited for) and told to break their oplocks to \"none\" and delete any read-ahead caches.\n\nIt is recommended that this parameter be turned on to speed access to shared executables.\n\nFor more discussions on level2 oplocks see the CIFS spec.\n\nCurrently, if [kernel oplocks](smb.conf.5.html#KERNELOPLOCKS) are supported then level2 oplocks are not granted (even if this parameter is set to `yes`). Note also, the [oplocks](smb.conf.5.html#OPLOCKS) parameter must be set to `yes` on this share in order for this parameter to have any effect.",
      "default": "yes"
    },
    "locking": {
      "md": "This controls whether or not locking will be performed by the server in response to lock requests from the client.\n\nIf `locking = no`, all lock and unlock requests will appear to succeed and all lock queries will report that the file in question is available for locking.\n\nIf `locking = yes`, real locking will be performed by the server.\n\nThis option _may_ be useful for read-only filesystems which _may_ not need locking (such as CDROM drives), although setting this parameter of `no` is not really recommended even in this case.\n\nBe careful about disabling locking either globally or in a specific service, as lack of locking may result in data corruption. You should never need to set this parameter.",
      "default": "yes"
    },
    "lppause command": {
      "md": "This parameter specifies the command to be executed on the server host in order to stop printing or spooling a specific print job.\n\nThis command should be a program or script which takes a printer name and job number to pause the print job. One way of implementing this is by using job priorities, where jobs having a too low priority won't be sent to the printer.\n\nIf a _`%p`_ is given then the printer name is put in its place. A _`%j`_ is replaced with the job number (an integer). On HPUX (see _`printing=hpux`_ ), if the _`-p%p`_ option is added to the lpq command, the job will show up with the correct status, i.e. if the job priority is lower than the set fence priority it will have the PAUSED status, whereas if the priority is equal or higher it will have the SPOOLED or PRINTING status.\n\nNote that it is good practice to include the absolute path in the lppause command as the PATH may not be available to the server.\n\nCurrently no default value is given to this string, unless the value of the [printing](smb.conf.5.html#PRINTING) parameter is `SYSV`, in which case the default is : `lp -i %p-%j -H hold` or if the value of the _`printing`_ parameter is `SOFTQ`, then the default is: `qstat -s -j%j -h`.",
      "default": "# determined by printing parameter"
    },
    "lpq command": {
      "md": "This parameter specifies the command to be executed on the server host in order to obtain `lpq` \\-style printer status information.\n\nThis command should be a program or script which takes a printer name as its only parameter and outputs printer status information.\n\nCurrently nine styles of printer status information are supported; BSD, AIX, LPRNG, PLP, SYSV, HPUX, QNX, CUPS, and SOFTQ. This covers most UNIX systems. You control which type is expected using the _`printing =`_ option.\n\nSome clients (notably Windows for Workgroups) may not correctly send the connection number for the printer they are requesting status information about. To get around this, the server reports on the first printer service connected to by the client. This only happens if the connection number sent is invalid.\n\nIf a _`%p`_ is given then the printer name is put in its place. Otherwise it is placed at the end of the command.\n\nNote that it is good practice to include the absolute path in the _`lpq command`_ as the `$PATH` may not be available to the server. When compiled with the CUPS libraries, no _`lpq command`_ is needed because smbd will make a library call to obtain the print queue listing.",
      "default": "# determined by printing parameter"
    },
    "lpresume command": {
      "md": "This parameter specifies the command to be executed on the server host in order to restart or continue printing or spooling a specific print job.\n\nThis command should be a program or script which takes a printer name and job number to resume the print job. See also the [lppause command](smb.conf.5.html#LPPAUSECOMMAND) parameter.\n\nIf a _`%p`_ is given then the printer name is put in its place. A _`%j`_ is replaced with the job number (an integer).\n\nNote that it is good practice to include the absolute path in the _`lpresume command`_ as the PATH may not be available to the server.\n\nSee also the [printing](smb.conf.5.html#PRINTING) parameter.\n\n`lp -i %p-%j -H resume`\n\nor if the value of the _`printing`_ parameter is `SOFTQ`, then the default is:\n\n`qstat -s -j%j -r`",
      "default": "# determined by printing parameter"
    },
    "lprm command": {
      "md": "This parameter specifies the command to be executed on the server host in order to delete a print job.\n\nThis command should be a program or script which takes a printer name and job number, and deletes the print job.\n\nIf a _`%p`_ is given then the printer name is put in its place. A _`%j`_ is replaced with the job number (an integer).\n\nNote that it is good practice to include the absolute path in the _`lprm command`_ as the PATH may not be available to the server.\n\nExamples of use are:\n\n```\nlprm command = /usr/bin/lprm -P%p %j\n\nor\n\nlprm command = /usr/bin/cancel %p-%j\n\n````",
      "default": "# determined by printing parameter"
    },
    "magic output": {
      "md": "This parameter specifies the name of a file which will contain output created by a magic script (see the [magic script](smb.conf.5.html#MAGICSCRIPT) parameter below).\n\n> \n> \n> <span style=\"font-size: 1.25em; color: #f7b011;\">Warning</span>\n> \n> If two clients use the same _`magic script`_ in the same directory the output file content is undefined.\n> \n>",
      "default": "# <magic script name>.out"
    },
    "magic script": {
      "md": "This parameter specifies the name of a file which, if opened, will be executed by the server when the file is closed. This allows a UNIX script to be sent to the Samba host and executed on behalf of the connected user.\n\nScripts executed in this way will be deleted upon completion assuming that the user has the appropriate level of privilege and the file permissions allow the deletion.\n\nIf the script generates output, output will be sent to the file specified by the [magic output](smb.conf.5.html#MAGICOUTPUT) parameter (see above).\n\nNote that some shells are unable to interpret scripts containing CR/LF instead of CR as the end-of-line marker. Magic scripts must be executable _as is_ on the host, which for some hosts and some shells will require filtering at the DOS end.\n\nMagic scripts are _EXPERIMENTAL_ and should _NOT_ be relied upon.",
      "default": ""
    },
    "mangled names": {
      "md": "This controls whether non-DOS names under UNIX should be mapped to DOS-compatible names (\"mangled\") and made visible, or whether non-DOS names should simply be ignored.\n\nSee the section on [name mangling](smb.conf.5.html#NAMEMANGLING) for details on how to control the mangling process.\n\nPossible option settings are\n\n*   _yes_ - enables name mangling for all not DOS 8.3 conforming names.\n    \n*   _no_ - disables any name mangling.\n    \n*   _illegal (default)_ - does mangling for names with illegal NTFS characters. This is the most sensible setting for modern clients that don't use the shortname anymore.\n    \n\nIf mangling is used then the mangling method is as follows:\n\n*   The first (up to) five alphanumeric characters before the rightmost dot of the filename are preserved, forced to upper case, and appear as the first (up to) five characters of the mangled name.\n    \n*   A tilde \"~\" is appended to the first part of the mangled name, followed by a two-character unique sequence, based on the original root name (i.e., the original filename minus its final extension). The final extension is included in the hash calculation only if it contains any upper case characters or is longer than three characters.\n    \n    Note that the character to use may be specified using the [mangling char](smb.conf.5.html#MANGLINGCHAR) option, if you don't like '~'.\n    \n*   Files whose UNIX name begins with a dot will be presented as DOS hidden files. The mangled name will be created as for other filenames, but with the leading dot removed and \"\\_\\_\\_\" as its extension regardless of actual original extension (that's three underscores).\n    \n\nThe two-digit hash value consists of upper case alphanumeric characters.\n\nThis algorithm can cause name collisions only if files in a directory share the same first five alphanumeric characters. The probability of such a clash is 1/1300.\n\nThe name mangling (if enabled) allows a file to be copied between UNIX directories from Windows/DOS while retaining the long UNIX filename. UNIX files can be renamed to a new extension from Windows/DOS and will retain the same basename. Mangled names do not change between sessions.",
      "default": "illegal"
    },
    "mangling char": {
      "md": "This controls what character is used as the _magic_ character in [name mangling](smb.conf.5.html#NAMEMANGLING). The default is a '~' but this may interfere with some software. Use this option to set it to whatever you prefer. This is effective only when mangling method is hash.",
      "default": "~"
    },
    "map acl inherit": {
      "md": "This boolean parameter is only relevant for systems that do not support standardized NFS4 ACLs but only a POSIX draft implementation of ACLs. Linux is the only common UNIX system which does still not offer standardized NFS4 ACLs actually. On such systems this parameter controls whether [smbd(8)](smbd.8.html) will attempt to map the 'protected' (don't inherit) flags of the Windows ACLs into an extended attribute called user.SAMBA\\_PAI (POSIX draft ACL Inheritance). This parameter requires support for extended attributes on the filesystem and allows the Windows ACL editor to store (non-)inheritance information while NT ACLs are mapped best-effort to the POSIX draft ACLs that the OS and filesystem implements.",
      "default": "no"
    },
    "map archive": {
      "md": "This controls whether the DOS archive attribute should be mapped to the UNIX owner execute bit. The DOS archive bit is set when a file has been modified since its last backup. One motivation for this option is to keep Samba/your PC from making any file it touches from becoming executable under UNIX. This can be quite annoying for shared source code, documents, etc...\n\nNote that this parameter will be ignored if the [store dos attributes](smb.conf.5.html#STOREDOSATTRIBUTES) parameter is set, as the DOS archive attribute will then be stored inside a UNIX extended attribute.\n\nNote that this requires the [create mask](smb.conf.5.html#CREATEMASK) parameter to be set such that owner execute bit is not masked out (i.e. it must include 100). See the parameter [create mask](smb.conf.5.html#CREATEMASK) for details.",
      "default": "yes"
    },
    "map hidden": {
      "md": "This controls whether DOS style hidden files should be mapped to the UNIX world execute bit.\n\nNote that this parameter will be ignored if the [store dos attributes](smb.conf.5.html#STOREDOSATTRIBUTES) parameter is set, as the DOS hidden attribute will then be stored inside a UNIX extended attribute.\n\nNote that this requires the [create mask](smb.conf.5.html#CREATEMASK) to be set such that the world execute bit is not masked out (i.e. it must include 001). See the parameter [create mask](smb.conf.5.html#CREATEMASK) for details.",
      "default": "no"
    },
    "map readonly": {
      "md": "This controls how the DOS read only attribute should be mapped from a UNIX filesystem.\n\nThis parameter can take three different values, which tell [smbd(8)](smbd.8.html) how to display the read only attribute on files, where either [store dos attributes](smb.conf.5.html#STOREDOSATTRIBUTES) is set to `No`, or no extended attribute is present. If [store dos attributes](smb.conf.5.html#STOREDOSATTRIBUTES) is set to `yes` then this parameter is _ignored_. This is a new parameter introduced in Samba version 3.0.21.\n\nThe three settings are :\n\n*   `Yes` - The read only DOS attribute is mapped to the inverse of the user or owner write bit in the unix permission mode set. If the owner write bit is not set, the read only attribute is reported as being set on the file. If the read only DOS attribute is set, Samba sets the owner, group and others write bits to zero. Write bits set in an ACL are ignored by Samba. If the read only DOS attribute is unset, Samba simply sets the write bit of the owner to one.\n    \n*   `Permissions` - The read only DOS attribute is mapped to the effective permissions of the connecting user, as evaluated by [smbd(8)](smbd.8.html) by reading the unix permissions and POSIX ACL (if present). If the connecting user does not have permission to modify the file, the read only attribute is reported as being set on the file.\n    \n*   `No` - The read only DOS attribute is unaffected by permissions, and can only be set by the [store dos attributes](smb.conf.5.html#STOREDOSATTRIBUTES) method. This may be useful for exporting mounted CDs.\n    \n\nNote that this parameter will be ignored if the [store dos attributes](smb.conf.5.html#STOREDOSATTRIBUTES) parameter is set, as the DOS 'read-only' attribute will then be stored inside a UNIX extended attribute.\n\nThe default has changed to no in Samba release 4.9.0 and above to allow better Windows fileserver compatibility in a default install. In addition the default setting of [store dos attributes](smb.conf.5.html#STOREDOSATTRIBUTES) has been changed to `Yes` in Samba release 4.9.0 and above.",
      "default": "no"
    },
    "map system": {
      "md": "This controls whether DOS style system files should be mapped to the UNIX group execute bit.\n\nNote that this parameter will be ignored if the [store dos attributes](smb.conf.5.html#STOREDOSATTRIBUTES) parameter is set, as the DOS system attribute will then be stored inside a UNIX extended attribute.\n\nNote that this requires the [create mask](smb.conf.5.html#CREATEMASK) to be set such that the group execute bit is not masked out (i.e. it must include 010). See the parameter [create mask](smb.conf.5.html#CREATEMASK) for details.",
      "default": "no"
    },
    "max connections": {
      "md": "This option allows the number of simultaneous connections to a service to be limited. If _`max connections`_ is greater than 0 then connections will be refused if this number of connections to the service are already open. A value of zero mean an unlimited number of connections may be made.\n\nRecord lock files are used to implement this feature. The lock files will be stored in the directory specified by the [lock directory](smb.conf.5.html#LOCKDIRECTORY) option.",
      "default": "0"
    },
    "max print jobs": {
      "md": "This parameter limits the maximum number of jobs allowable in a Samba printer queue at any given moment. If this number is exceeded, [smbd(8)](smbd.8.html) will remote \"Out of Space\" to the client.",
      "default": "1000"
    },
    "max reported print jobs": {
      "md": "This parameter limits the maximum number of jobs displayed in a port monitor for Samba printer queue at any given moment. If this number is exceeded, the excess jobs will not be shown. A value of zero means there is no limit on the number of print jobs reported.",
      "default": "0"
    },
    "min print space": {
      "md": "This sets the minimum amount of free disk space that must be available before a user will be able to spool a print job. It is specified in kilobytes. The default is 0, which means a user can always spool a print job.",
      "default": "0"
    },
    "msdfs proxy": {
      "md": "This parameter indicates that the share is a stand-in for another CIFS share whose location is specified by the value of the parameter. When clients attempt to connect to this share, they are redirected to one or multiple, comma separated proxied shares using the SMB-Dfs protocol.\n\nOnly Dfs roots can act as proxy shares. Take a look at the [msdfs root](smb.conf.5.html#MSDFSROOT) and [host msdfs](smb.conf.5.html#HOSTMSDFS) options to find out how to set up a Dfs root share.\n\n_No default_"
    },
    "msdfs root": {
      "md": "If set to `yes`, Samba treats the share as a Dfs root and allows clients to browse the distributed file system tree rooted at the share directory. Dfs links are specified in the share directory by symbolic links of the form `msdfs:serverA\\\\shareA,serverB\\\\shareB` and so on. For more information on setting up a Dfs tree on Samba, refer to the MSDFS chapter in the Samba3-HOWTO book.",
      "default": "no"
    },
    "msdfs shuffle referrals": {
      "md": "If set to `yes`, Samba will shuffle Dfs referrals for a given Dfs link if multiple are available, allowing for load balancing across clients. For more information on setting up a Dfs tree on Samba, refer to the MSDFS chapter in the Samba3-HOWTO book.",
      "default": "no"
    },
    "nt acl support": {
      "md": "This boolean parameter controls whether [smbd(8)](smbd.8.html) will attempt to map UNIX permissions into Windows NT access control lists. The UNIX permissions considered are the traditional UNIX owner and group permissions, as well as POSIX ACLs set on any files or directories. This parameter was formally a global parameter in releases prior to 2.2.2.",
      "default": "yes"
    },
    "ntvfs handler": {
      "md": "This specifies the NTVFS handlers for this share.\n\n*   unixuid: Sets up user credentials based on POSIX gid/uid.\n    \n*   cifs: Proxies a remote CIFS FS. Mainly useful for testing.\n    \n*   nbench: Filter module that saves data useful to the nbench benchmark suite.\n    \n*   ipc: Allows using SMB for inter process communication. Only used for the IPC$ share.\n    \n*   posix: Maps POSIX FS semantics to NT semantics\n    \n*   print: Allows printing over SMB. This is LANMAN-style printing, not the be confused with the spoolss DCE/RPC interface used by later versions of Windows.\n    \n\nNote that this option is only used when the NTVFS file server is in use. It is not used with the (default) s3fs file server.",
      "default": "unixuid, default"
    },
    "oplocks": {
      "md": "This boolean option tells `smbd` whether to issue oplocks (opportunistic locks) to file open requests on this share. The oplock code can dramatically (approx. 30% or more) improve the speed of access to files on Samba servers. It allows the clients to aggressively cache files locally and you may want to disable this option for unreliable network environments (it is turned on by default in Windows NT Servers).\n\nOplocks may be selectively turned off on certain files with a share. See the [veto oplock files](smb.conf.5.html#VETOOPLOCKFILES) parameter. On some systems oplocks are recognized by the underlying operating system. This allows data synchronization between all access to oplocked files, whether it be via Samba or NFS or a local UNIX process. See the [kernel oplocks](smb.conf.5.html#KERNELOPLOCKS) parameter for details.",
      "default": "yes"
    },
    "path": {
      "md": "This parameter specifies a directory to which the user of the service is to be given access. In the case of printable services, this is where print data will spool prior to being submitted to the host for printing.\n\nFor a printable service offering guest access, the service should be readonly and the path should be world-writeable and have the sticky bit set. This is not mandatory of course, but you probably won't get the results you expect if you do otherwise.\n\nAny occurrences of _`%u`_ in the path will be replaced with the UNIX username that the client is using on this connection. Any occurrences of _`%m`_ will be replaced by the NetBIOS name of the machine they are connecting from. These replacements are very useful for setting up pseudo home directories for users.\n\nNote that this path will be based on [root dir](smb.conf.5.html#ROOTDIR) if one was specified.",
      "default": ""
    },
    "posix locking": {
      "md": "The [smbd(8)](smbd.8.html) daemon maintains an database of file locks obtained by SMB clients. The default behavior is to map this internal database to POSIX locks. This means that file locks obtained by SMB clients are consistent with those seen by POSIX compliant applications accessing the files via a non-SMB method (e.g. NFS or local file access). It is very unlikely that you need to set this parameter to \"no\", unless you are sharing from an NFS mount, which is not a good idea in the first place.",
      "default": "yes"
    },
    "postexec": {
      "md": "This option specifies a command to be run whenever the service is disconnected. It takes the usual substitutions. The command may be run as the root on some systems.\n\nAn interesting example may be to unmount server resources:\n\n`postexec = /etc/umount /cdrom`",
      "default": ""
    },
    "preexec close": {
      "md": "This boolean option controls whether a non-zero return code from [preexec](smb.conf.5.html#PREEXEC) should close the service being connected to.",
      "default": "no"
    },
    "preexec": {
      "md": "This option specifies a command to be run whenever the service is connected to. It takes the usual substitutions.\n\nAn interesting example is to send the users a welcome message every time they log in. Maybe a message of the day? Here is an example:\n\n`preexec = csh -c 'echo \\\"Welcome to %S!\\\" | /usr/local/samba/bin/smbclient -M %m -I %I' &`\n\nOf course, this could get annoying after a while :-)\n\nSee also [preexec close](smb.conf.5.html#PREEXECCLOSE) and [postexec](smb.conf.5.html#POSTEXEC).",
      "default": ""
    },
    "preserve case": {
      "md": "This controls if new filenames are created with the case that the client passes, or if they are forced to be the [default case](smb.conf.5.html#DEFAULTCASE).\n\nSee the section on [NAME MANGLING](#NAMEMANGLINGSECT \"NAME MANGLING\") for a fuller discussion.",
      "default": "yes"
    },
    "printable": {
      "md": "If this parameter is `yes`, then clients may open, write to and submit spool files on the directory specified for the service.\n\nNote that a printable service will ALWAYS allow writing to the service path (user privileges permitting) via the spooling of print data. The [read only](smb.conf.5.html#READONLY) parameter controls only non-printing access to the resource.",
      "default": "no"
    },
    "print command": {
      "md": "After a print job has finished spooling to a service, this command will be used via a `system()` call to process the spool file. Typically the command specified will submit the spool file to the host's printing subsystem, but there is no requirement that this be the case. The server will not remove the spool file, so whatever command you specify should remove the spool file when it has been processed, otherwise you will need to manually remove old spool files.\n\nThe print command is simply a text string. It will be used verbatim after macro substitutions have been made:\n\n%s, %f - the path to the spool file name\n\n%p - the appropriate printer name\n\n%J - the job name as transmitted by the client.\n\n%c - The number of printed pages of the spooled job (if known).\n\n%z - the size of the spooled print job (in bytes)\n\nThe print command _MUST_ contain at least one occurrence of _`%s`_ or _`%f`_ \\- the _`%p`_ is optional. At the time a job is submitted, if no printer name is supplied the _`%p`_ will be silently removed from the printer command.\n\nIf specified in the \\[global\\] section, the print command given will be used for any printable service that does not have its own print command specified.\n\nIf there is neither a specified print command for a printable service nor a global print command, spool files will be created but not processed and (most importantly) not removed.\n\nNote that printing may fail on some UNIXes from the `nobody` account. If this happens then create an alternative guest account that can print and set the [guest account](smb.conf.5.html#GUESTACCOUNT) in the \\[global\\] section.\n\nYou can form quite complex print commands by realizing that they are just passed to a shell. For example the following will log a print job, print the file, then remove it. Note that ';' is the usual separator for command in shell scripts.\n\n`print command = echo Printing %s >> /tmp/print.log; lpr -P %p %s; rm %s`\n\nYou may have to vary this command considerably depending on how you normally print files on your system. The default for the parameter varies depending on the setting of the [printing](smb.conf.5.html#PRINTING) parameter.\n\n`print command = lpr -r -P%p %s`\n\nFor `printing = SYSV or HPUX :`\n\n`print command = lp -c -d%p %s; rm %s`\n\nFor `printing = SOFTQ :`\n\n`print command = lp -d%p -s %s; rm %s`\n\nFor printing = CUPS : If SAMBA is compiled against libcups, then [printcap = cups](smb.conf.5.html#PRINTCAP) uses the CUPS API to submit jobs, etc. Otherwise it maps to the System V commands with the -oraw option for printing, i.e. it uses `lp -c -d%p -oraw; rm %s`. With `printing = cups`, and if SAMBA is compiled against libcups, any manually set print command will be ignored.\n\n_No default_",
      "default": "BSD, AIX, QNX, LPRNG \n    or PLP :"
    },
    "printer name": {
      "md": "This parameter specifies the name of the printer to which print jobs spooled through a printable service will be sent.\n\nIf specified in the \\[global\\] section, the printer name given will be used for any printable service that does not have its own printer name specified.\n\nThe default value of the [printer name](smb.conf.5.html#PRINTERNAME) may be `lp` on many systems.",
      "default": ""
    },
    "printing": {
      "md": "This parameters controls how printer status information is interpreted on your system. It also affects the default values for the _`print command`_, _`lpq command`_, _`lppause command`_ , _`lpresume command`_, and _`lprm command`_ if specified in the \\[global\\] section.\n\nCurrently nine printing styles are supported. They are `BSD`, `AIX`, `LPRNG`, `PLP`, `SYSV`, `HPUX`, `QNX`, `SOFTQ`, `CUPS` and `IPRINT`.\n\nBe aware that CUPS and IPRINT are only available if the CUPS development library was available at the time Samba was compiled or packaged.\n\nTo see what the defaults are for the other print commands when using the various options use the [testparm(1)](testparm.1.html) program.\n\nThis option can be set on a per printer basis. Please be aware however, that you must place any of the various printing commands (e.g. print command, lpq command, etc...) after defining the value for the _`printing`_ option since it will reset the printing commands to default values.\n\nSee also the discussion in the [\\[printers\\]](#PRINTERSSECT \"The [printers] section\") section.\n\nSee `testparm -v.` for the default value on your system",
      "default": "# Depends on the operating system"
    },
    "printjob username": {
      "md": "This parameter specifies which user information will be passed to the printing system. Usually, the username is sent, but in some cases, e.g. the domain prefix is useful, too.",
      "default": "%U"
    },
    "print notify backchannel": {
      "md": "Windows print clients can update print queue status by expecting the server to open a backchannel SMB connection to them. Due to client firewall settings this can cause considerable timeouts and will often fail, as there is no guarantee the client is even running an SMB server. By default, the Samba print server will not try to connect back to clients, and will treat corresponding requests as if the connection back to the client failed.",
      "default": "no"
    },
    "queuepause command": {
      "md": "This parameter specifies the command to be executed on the server host in order to pause the printer queue.\n\nThis command should be a program or script which takes a printer name as its only parameter and stops the printer queue, such that no longer jobs are submitted to the printer.\n\nThis command is not supported by Windows for Workgroups, but can be issued from the Printers window under Windows 95 and NT.\n\nIf a _`%p`_ is given then the printer name is put in its place. Otherwise it is placed at the end of the command.\n\nNote that it is good practice to include the absolute path in the command as the PATH may not be available to the server.",
      "default": "# determined by printing parameter"
    },
    "queueresume command": {
      "md": "This parameter specifies the command to be executed on the server host in order to resume the printer queue. It is the command to undo the behavior that is caused by the previous parameter ([queuepause command](smb.conf.5.html#QUEUEPAUSECOMMAND)).\n\nThis command should be a program or script which takes a printer name as its only parameter and resumes the printer queue, such that queued jobs are resubmitted to the printer.\n\nThis command is not supported by Windows for Workgroups, but can be issued from the Printers window under Windows 95 and NT.\n\nIf a _`%p`_ is given then the printer name is put in its place. Otherwise it is placed at the end of the command.\n\nNote that it is good practice to include the absolute path in the command as the PATH may not be available to the server.",
      "default": "# determined by printing parameter"
    },
    "read list": {
      "md": "This is a list of users that are given read-only access to a service. If the connecting user is in this list then they will not be given write access, no matter what the [read only](smb.conf.5.html#READONLY) option is set to. The list can include group names using the syntax described in the [invalid users](smb.conf.5.html#INVALIDUSERS) parameter.",
      "default": ""
    },
    "read only": {
      "md": "An inverted synonym is [writeable](smb.conf.5.html#WRITEABLE).\n\nIf this parameter is `yes`, then users of a service may not create or modify files in the service's directory.\n\nNote that a printable service (`printable = yes`) will _ALWAYS_ allow writing to the directory (user privileges permitting), but only via spooling operations.",
      "default": "yes"
    },
    "root postexec": {
      "md": "This is the same as the _`postexec`_ parameter except that the command is run as root. This is useful for unmounting filesystems (such as CDROMs) after a connection is closed.",
      "default": ""
    },
    "root preexec close": {
      "md": "This is the same as the _`preexec close`_ parameter except that the command is run as root.",
      "default": "no"
    },
    "root preexec": {
      "md": "This is the same as the _`preexec`_ parameter except that the command is run as root. This is useful for mounting filesystems (such as CDROMs) when a connection is opened.",
      "default": ""
    },
    "security mask": {
      "md": "This parameter has been removed for Samba 4.0.0.\n\n_No default_"
    },
    "server smb encrypt": {
      "md": "This parameter controls whether a remote client is allowed or required to use SMB encryption. It has different effects depending on whether the connection uses SMB1 or SMB2 and newer:\n\n*   If the connection uses SMB1, then this option controls the use of a Samba-specific extension to the SMB protocol introduced in Samba 3.2 that makes use of the Unix extensions.\n    \n*   If the connection uses SMB2 or newer, then this option controls the use of the SMB-level encryption that is supported in SMB version 3.0 and above and available in Windows 8 and newer.\n    \n\nThis parameter can be set globally and on a per-share bases. Possible values are _off_, _if\\_required_, _desired_, and _required_. A special value is _default_ which is the implicit default setting of _if\\_required_.\n\n<div style=\"margin-left: 40px\">\n\n\n_Effects for SMB1_\n\n<div style=\"margin-left: 40px\">\n\n\nThe Samba-specific encryption of SMB1 connections is an extension to the SMB protocol negotiated as part of the UNIX extensions. SMB encryption uses the GSSAPI (SSPI on Windows) ability to encrypt and sign every request/response in a SMB protocol stream. When enabled it provides a secure method of SMB/CIFS communication, similar to an ssh protected session, but using SMB/CIFS authentication to negotiate encryption and signing keys. Currently this is only supported smbclient of by Samba 3.2 and newer, and hopefully soon Linux CIFSFS and MacOS/X clients. Windows clients do not support this feature.\n\nThis may be set on a per-share basis, but clients may chose to encrypt the entire session, not just traffic to a specific share. If this is set to mandatory then all traffic to a share _must_ be encrypted once the connection has been made to the share. The server would return \"access denied\" to all non-encrypted requests on such a share. Selecting encrypted traffic reduces throughput as smaller packet sizes must be used (no huge UNIX style read/writes allowed) as well as the overhead of encrypting and signing all the data.\n\nIf SMB encryption is selected, Windows style SMB signing (see the [server signing](smb.conf.5.html#SERVERSIGNING) option) is no longer necessary, as the GSSAPI flags use select both signing and sealing of the data.\n\nWhen set to auto or default, SMB encryption is offered, but not enforced. When set to mandatory, SMB encryption is required and if set to disabled, SMB encryption can not be negotiated.\n\n\n</div>\n\n_Effects for SMB2 and newer_\n\n<div style=\"margin-left: 40px\">\n\n\nNative SMB transport encryption is available in SMB version 3.0 or newer. It is only offered by Samba if _server max protocol_ is set to _SMB3_ or newer. Clients supporting this type of encryption include Windows 8 and newer, Windows server 2012 and newer, and smbclient of Samba 4.1 and newer.\n\nThe protocol implementation offers various options:\n\n*   The capability to perform SMB encryption can be negotiated during protocol negotiation.\n    \n*   Data encryption can be enabled globally. In that case, an encryption-capable connection will have all traffic in all its sessions encrypted. In particular all share connections will be encrypted.\n    \n*   Data encryption can also be enabled per share if not enabled globally. For an encryption-capable connection, all connections to an encryption-enabled share will be encrypted.\n    \n*   Encryption can be enforced. This means that session setups will be denied on non-encryption-capable connections if data encryption has been enabled globally. And tree connections will be denied for non-encryption capable connections to shares with data encryption enabled.\n    \n\nThese features can be controlled with settings of _server smb encrypt_ as follows:\n\n\n</div>\n\n\n</div>\n\nDefault: __`server smb encrypt`_ = `default`_",
      "default": "default"
    },
    "short preserve case": {
      "md": "This boolean parameter controls if new files which conform to 8.3 syntax, that is all in upper case and of suitable length, are created upper case, or if they are forced to be the [default case](smb.conf.5.html#DEFAULTCASE). This option can be use with [preserve case = yes](smb.conf.5.html#PRESERVECASE) to permit long filenames to retain their case, while short names are lowered.\n\nSee the section on [NAME MANGLING](#NAMEMANGLINGSECT \"NAME MANGLING\").",
      "default": "yes"
    },
    "smbd async dosmode": {
      "md": "This parameter control whether the fileserver will use sync or async methods for fetching the DOS attributes when doing a directory listing. By default sync methods will be used.",
      "default": "no"
    },
    "smbd getinfo ask sharemode": {
      "md": "This parameter allows disabling fetching file write time from the open file handle database locking.tdb when a client requests file or directory metadata. It's a performance optimisation at the expense of protocol correctness.",
      "default": "yes"
    },
    "smbd max async dosmode": {
      "md": "This parameter controls how many async operations to fetch the DOS attributes the fileserver will queue when doing directory listings.",
      "default": "aio max threads * 2"
    },
    "smbd max xattr size": {
      "md": "This parameter controls the maximum size of extended attributes that may be written to the server as EAs or as alternate data streams if vfs\\_streams\\_xattr is enabled. The maximum size of extended attributes depends on the Samba server's operating system and the underlying filesystem. The Linux VFS currently sets an upper boundary of 64 KiB per extended attribute. FreeBSD does not set a practical upper limit, but since pread() and pwrite() are not possible via the extattr on FreeBSD, it is not recommended to increase this value above a few MiB. If a client attempts to write an overly-large alternate datastream, the Samba server will return STATUS\\_FILESYSTEM\\_LIMITATION. If this error is encountered, users may try increasing the maximum size supported for xattr writes. If this is not possible, and writes are from a MacOS client and to an AFP\\_Resource extended attribute, the user may enable the vfs\\_fruit module and configure to allow stream writes for AFP\\_Resource to an alternative storage location. See vfs\\_fruit documentation for further details.",
      "default": "65536"
    },
    "smbd search ask sharemode": {
      "md": "This parameter allows disabling fetching file write time from the open file handle database locking.tdb. It's a performance optimisation at the expense of protocol correctness.",
      "default": "yes"
    },
    "smb encrypt": {
      "md": "This is a synonym for [server smb encrypt](smb.conf.5.html#SERVERSMBENCRYPT).",
      "default": "default"
    },
    "spotlight backend": {
      "md": "Spotlight search backend. Available backends:\n\n*   `noindex` - a backend that returns no results.\n    \n\n*   `tracker` - Gnome Tracker.\n    \n*   `elasticsearch` - a backend that uses JSON and REST over HTTP(s) to query an Elasticsearch server.",
      "default": "noindex"
    },
    "spotlight": {
      "md": "This parameter controls whether Samba allows Spotlight queries on a share. For controlling indexing of filesystems you also have to use Tracker's own configuration system.\n\nSpotlight has several prerequisites:\n\n*   Samba must be configured and built with Spotlight support.\n    \n*   Tracker integration must be setup and the share must be indexed by Tracker.\n    \n\nFor a detailed set of instructions please see [https://wiki.samba.org/index.php/Spotlight](https://wiki.samba.org/index.php/Spotlight).",
      "default": "no"
    },
    "store dos attributes": {
      "md": "If this parameter is set Samba attempts to first read DOS attributes (SYSTEM, HIDDEN, ARCHIVE or READ-ONLY) from a filesystem extended attribute, before mapping DOS attributes to UNIX permission bits (such as occurs with [map hidden](smb.conf.5.html#MAPHIDDEN) and [map readonly](smb.conf.5.html#MAPREADONLY)). When set, DOS attributes will be stored onto an extended attribute in the UNIX filesystem, associated with the file or directory. When this parameter is set it will override the parameters [map hidden](smb.conf.5.html#MAPHIDDEN), [map system](smb.conf.5.html#MAPSYSTEM), [map archive](smb.conf.5.html#MAPARCHIVE) and [map readonly](smb.conf.5.html#MAPREADONLY) and they will behave as if they were set to off. This parameter writes the DOS attributes as a string into the extended attribute named \"user.DOSATTRIB\". This extended attribute is explicitly hidden from smbd clients requesting an EA list. On Linux the filesystem must have been mounted with the mount option user\\_xattr in order for extended attributes to work, also extended attributes must be compiled into the Linux kernel. In Samba 3.5.0 and above the \"user.DOSATTRIB\" extended attribute has been extended to store the create time for a file as well as the DOS attributes. This is done in a backwards compatible way so files created by Samba 3.5.0 and above can still have the DOS attribute read from this extended attribute by earlier versions of Samba, but they will not be able to read the create time stored there. Storing the create time separately from the normal filesystem meta-data allows Samba to faithfully reproduce NTFS semantics on top of a POSIX filesystem. The default has changed to yes in Samba release 4.9.0 and above to allow better Windows fileserver compatibility in a default install.",
      "default": "yes"
    },
    "strict allocate": {
      "md": "This is a boolean that controls the handling of disk space allocation in the server. When this is set to `yes` the server will change from UNIX behaviour of not committing real disk storage blocks when a file is extended to the Windows behaviour of actually forcing the disk system to allocate real storage blocks when a file is created or extended to be a given size. In UNIX terminology this means that Samba will stop creating sparse files.\n\nThis option is really designed for file systems that support fast allocation of large numbers of blocks such as extent-based file systems. On file systems that don't support extents (most notably ext3) this can make Samba slower. When you work with large files over >100MB on file systems without extents you may even run into problems with clients running into timeouts.\n\nWhen you have an extent based filesystem it's likely that we can make use of unwritten extents which allows Samba to allocate even large amounts of space very fast and you will not see any timeout problems caused by strict allocate. With strict allocate in use you will also get much better out of quota messages in case you use quotas. Another advantage of activating this setting is that it will help to reduce file fragmentation.\n\nTo give you an idea on which filesystems this setting might currently be a good option for you: XFS, ext4, btrfs, ocfs2 on Linux and JFS2 on AIX support unwritten extents. On Filesystems that do not support it, preallocation is probably an expensive operation where you will see reduced performance and risk to let clients run into timeouts when creating large files. Examples are ext3, ZFS, HFS+ and most others, so be aware if you activate this setting on those filesystems.",
      "default": "no"
    },
    "strict locking": {
      "md": "This is an enumerated type that controls the handling of file locking in the server. When this is set to `yes`, the server will check every read and write access for file locks, and deny access if locks exist. This can be slow on some systems.\n\nWhen strict locking is set to Auto (the default), the server performs file lock checks only on non-oplocked files. As most Windows redirectors perform file locking checks locally on oplocked files this is a good trade off for improved performance.\n\nWhen strict locking is disabled, the server performs file lock checks only when the client explicitly asks for them.\n\nWell-behaved clients always ask for lock checks when it is important. So in the vast majority of cases, `strict locking = Auto` or `strict locking = no` is acceptable.",
      "default": "Auto"
    },
    "strict rename": {
      "md": "By default a Windows SMB server prevents directory renames when there are open file or directory handles below it in the filesystem hierarchy. Historically Samba has always allowed this as POSIX filesystem semantics require it.\n\nThis boolean parameter allows Samba to match the Windows behavior. Setting this to \"yes\" is a very expensive change, as it forces Samba to travers the entire open file handle database on every directory rename request. In a clustered Samba system the cost is even greater than the non-clustered case.\n\nWhen set to \"no\" smbd only checks the local process the client is attached to for open files below a directory being renamed, instead of checking for open files across all smbd processes.\n\nBecause of the expense in fully searching the database, the default is \"no\", and it is recommended to be left that way unless a specific Windows application requires it to be changed.\n\nIf the client has requested UNIX extensions (POSIX pathnames) then renames are always allowed and this parameter has no effect.",
      "default": "no"
    },
    "strict sync": {
      "md": "This parameter controls whether Samba honors a request from an SMB client to ensure any outstanding operating system buffer contents held in memory are safely written onto stable storage on disk. If set to `yes`, which is the default, then Windows applications can force the smbd server to synchronize unwritten data onto the disk. If set to `no` then smbd will ignore client requests to synchronize unwritten data onto stable storage on disk.\n\nIn Samba 4.7.0, the default for this parameter changed from `no` to `yes` to better match the expectations of SMB2/3 clients and improve application safety when running against smbd.\n\nThe flush request from SMB2/3 clients is handled asynchronously inside smbd, so leaving the parameter as the default value of `yes` does not block the processing of other requests to the smbd process.\n\nLegacy Windows applications (such as the Windows 98 explorer shell) seemed to confuse writing buffer contents to the operating system with synchronously writing outstanding data onto stable storage on disk. Changing this parameter to `no` means that [smbd(8)](smbd.8.html) will ignore the Windows applications request to synchronize unwritten data onto disk. Only consider changing this if smbd is serving obsolete SMB1 Windows clients prior to Windows XP (Windows 98 and below). There should be no need to change this setting for normal operations.",
      "default": "yes"
    },
    "sync always": {
      "md": "This is a boolean parameter that controls whether writes will always be written to stable storage before the write call returns. If this is `no` then the server will be guided by the client's request in each write call (clients can set a bit indicating that a particular write should be synchronous). If this is `yes` then every write will be followed by a `fsync()` call to ensure the data is written to disk. Note that the _`strict sync`_ parameter must be set to `yes` in order for this parameter to have any effect.",
      "default": "no"
    },
    "use client driver": {
      "md": "This parameter applies only to Windows NT/2000 clients. It has no effect on Windows 95/98/ME clients. When serving a printer to Windows NT/2000 clients without first installing a valid printer driver on the Samba host, the client will be required to install a local printer driver. From this point on, the client will treat the print as a local printer and not a network printer connection. This is much the same behavior that will occur when `disable spoolss = yes`.\n\nThe differentiating factor is that under normal circumstances, the NT/2000 client will attempt to open the network printer using MS-RPC. The problem is that because the client considers the printer to be local, it will attempt to issue the OpenPrinterEx() call requesting access rights associated with the logged on user. If the user possesses local administrator rights but not root privilege on the Samba host (often the case), the OpenPrinterEx() call will fail. The result is that the client will now display an \"Access Denied; Unable to connect\" message in the printer queue window (even though jobs may successfully be printed).\n\nIf this parameter is enabled for a printer, then any attempt to open the printer with the PRINTER\\_ACCESS\\_ADMINISTER right is mapped to PRINTER\\_ACCESS\\_USE instead. Thus allowing the OpenPrinterEx() call to succeed. _This parameter MUST not be enabled on a print share which has valid print driver installed on the Samba server._",
      "default": "no"
    },
    "use sendfile": {
      "md": "If this parameter is `yes`, and the `sendfile()` system call is supported by the underlying operating system, then some SMB read calls (mainly ReadAndX and ReadRaw) will use the more efficient sendfile system call for files that are exclusively oplocked. This may make more efficient use of the system CPU's and cause Samba to be faster. Samba automatically turns this off for clients that use protocol levels lower than NT LM 0.12 and when it detects a client is Windows 9x (using sendfile from Linux will cause these clients to fail).",
      "default": "no"
    },
    "valid users": {
      "md": "This is a list of users that should be allowed to login to this service. Names starting with '@', '+' and '&' are interpreted using the same rules as described in the _`invalid users`_ parameter.\n\nIf this is empty (the default) then any user can login. If a username is in both this list and the _`invalid users`_ list then access is denied for that user.\n\nThe current servicename is substituted for _`%S`_. This is useful in the \\[homes\\] section.\n\n_Note:_ When used in the \\[global\\] section this parameter may have unwanted side effects. For example: If samba is configured as a MASTER BROWSER (see _`local master`_, _`os level`_, _`domain master`_, _`preferred master`_) this option will prevent workstations from being able to browse the network.",
      "default": "# No valid users list (anyone can login)"
    },
    "-valid": {
      "md": "This parameter indicates whether a share is valid and thus can be used. When this parameter is set to false, the share will be in no way visible nor accessible.\n\nThis option should not be used by regular users but might be of help to developers. Samba uses this option internally to mark shares as deleted.",
      "default": "yes"
    },
    "veto files": {
      "md": "This is a list of files and directories that are neither visible nor accessible. Each entry in the list must be separated by a '/', which allows spaces to be included in the entry. '\\*' and '?' can be used to specify multiple files or directories as in DOS wildcards.\n\nEach entry must be a unix path, not a DOS path and must _not_ include the unix directory separator '/'.\n\nNote that the [case sensitive](smb.conf.5.html#CASESENSITIVE) option is applicable in vetoing files.\n\nOne feature of the veto files parameter that it is important to be aware of is Samba's behaviour when trying to delete a directory. If a directory that is to be deleted contains nothing but veto files this deletion will _fail_ unless you also set the [delete veto files](smb.conf.5.html#DELETEVETOFILES) parameter to _`yes`_.\n\nSetting this parameter will affect the performance of Samba, as it will be forced to check all files and directories for a match as they are scanned.\n\nExamples of use include:\n\n```\n; Veto any files containing the word Security,\n; any ending in .tmp, and any directory containing the\n; word root.\nveto files = /\\*Security\\*/\\*.tmp/\\*root\\*/\n\n; Veto the Apple specific files that a NetAtalk server\n; creates.\nveto files = /.AppleDouble/.bin/.AppleDesktop/Network Trash Folder/\n\n````",
      "default": "# No files or directories are vetoed"
    },
    "veto oplock files": {
      "md": "This parameter is only valid when the [oplocks](smb.conf.5.html#OPLOCKS) parameter is turned on for a share. It allows the Samba administrator to selectively turn off the granting of oplocks on selected files that match a wildcarded list, similar to the wildcarded list used in the [veto files](smb.conf.5.html#VETOFILES) parameter.\n\nYou might want to do this on files that you know will be heavily contended for by clients. A good example of this is in the NetBench SMB benchmark program, which causes heavy client contention for files ending in `.SEM`. To cause Samba not to grant oplocks on these files you would use the line (either in the \\[global\\] section or in the section for the particular NetBench share.\n\nAn example of use is:\n\n```\nveto oplock files = /.\\*SEM/\n\n````",
      "default": "# No files are vetoed for oplock grants"
    },
    "vfs objects": {
      "md": "This parameter specifies the backend names which are used for Samba VFS I/O operations. By default, normal disk I/O operations are used but these can be overloaded with one or more VFS objects. Be aware that the definition of this parameter will overwrite a possible previous definition of the vfs objects parameter.",
      "default": ""
    },
    "volume serial number": {
      "md": "This allows to override the volume serial number (a 32bit value) reported for a share.\n\nThe special value _\\-1_ (default) stands for a unique number that is calculated for each share.",
      "default": "-1"
    },
    "volume": {
      "md": "This allows you to override the volume label returned for a share. Useful for CDROMs with installation programs that insist on a particular volume label.",
      "default": "# the name of the share"
    },
    "wide links": {
      "md": "This parameter controls whether or not links in the UNIX file system may be followed by the server. Links that point to areas within the directory tree exported by the server are always allowed; this parameter controls access only to areas that are outside the directory tree being exported.\n\nNote: Turning this parameter on when UNIX extensions are enabled will allow UNIX clients to create symbolic links on the share that can point to files or directories outside restricted path exported by the share definition. This can cause access to areas outside of the share. Due to this problem, this parameter will be automatically disabled (with a message in the log file) if the [unix extensions](smb.conf.5.html#UNIXEXTENSIONS) option is on.\n\nSee the parameter [allow insecure wide links](smb.conf.5.html#ALLOWINSECUREWIDELINKS) if you wish to change this coupling between the two parameters.",
      "default": "no"
    },
    "writeable": {
      "md": "Inverted synonym for [read only](smb.conf.5.html#READONLY).",
      "default": "no"
    },
    "write list": {
      "md": "This is a list of users that are given read-write access to a service. If the connecting user is in this list then they will be given write access, no matter what the [read only](smb.conf.5.html#READONLY) option is set to. The list can include group names using the @group syntax.\n\nNote that if a user is in both the read list and the write list then they will be given write access.",
      "default": ""
    }
  }
}